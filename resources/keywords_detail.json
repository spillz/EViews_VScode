{"Equation": {"[Equation]": {"uri": "equationcmd-Equation", "anchor": "", "description": "Equation object. Equations are used for single equation estimation, testing, and forecasting."}, "@aic": {"uri": "equationcmd-Equation", "anchor": "ww325952", "usage": "@aic", "description": "Akaike information criterion."}, "@ardlceccoefs": {"uri": "equationcmd-Equation", "anchor": "ww461539", "usage": "@ardlceccoefs", "description": "returns a vector of coefficient estimates from the conditional error-correction (CEC) regression in univariate (N)ARDL estimation."}, "@ardlcoint": {"uri": "equationcmd-Equation", "anchor": "ww461539"}, "@ardlcointsubst": {"uri": "equationcmd-Equation", "anchor": "ww360177", "usage": "@ardlcointsubst", "description": "returns string representation of the cointegration form of an ARDL equation with substituted coefficients."}, "@ardleccoefs": {"uri": "equationcmd-Equation", "anchor": "ww623108", "usage": "@ardleccoefs", "description": "returns a vector of coefficient estimates from the traditional error-correction (EC) regression in univariate (N)ARDL estimation."}, "@ardllrcoefs": {"uri": "equationcmd-Equation", "anchor": "ww461540", "usage": "@ardllrcoefs", "description": "returns a coef containing coefficients from the long run relationship form of a non-panel ARDL estimation."}, "@ardlsrcoefs": {"uri": "equationcmd-Equation", "anchor": "ww449749", "usage": "@ardlsrcoefs", "description": "returns a matrix where each row corresponds to an individual cross-section\u2019s short-run coefficients. Only applicable for PMG/ARDL estimation."}, "@ardlsrses": {"uri": "equationcmd-Equation", "anchor": "ww374978", "usage": "@ardlsrses", "description": "returns a matrix where each row corresponds to an individual cross-section\u2019s short-run coefficient standard errors. Only applicable for PMG/ARDL estimation."}, "@attr": {"uri": "equationcmd-Equation", "anchor": "ww374121", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@breaks": {"uri": "equationcmd-Equation", "anchor": "ww374219", "usage": "@breaks", "description": "string representation of the breakpoints in breakpoint least squares or thresholds in threshold regression."}, "@bylist": {"uri": "equationcmd-Equation", "anchor": "ww325953", "usage": "@bylist", "description": "returns 1 or 0 depending on whether the equation was estimated by list."}, "@coefcov": {"uri": "equationcmd-Equation", "anchor": "ww178716", "usage": "@coefcov(i,j)", "description": "covariance of coefficient estimates i and j ."}, "@coeflabels": {"uri": "equationcmd-Equation", "anchor": "ww359987", "usage": "@coeflabels", "description": "coefficient labels used in regression output table."}, "@coeflist": {"uri": "equationcmd-Equation", "anchor": "ww325964", "usage": "@coeflist", "description": "returns a string containing a space delimited list of the coefficients used in estimation ( e.g. , \u201cC(1) C(2) C(3)\u201d). This function always returns the list of actual coefficients used, irrespective of whether the original equation was specified by list or by expression."}, "@coefs": {"uri": "equationcmd-Equation", "anchor": "ww178720", "usage": "@coefs(i)", "description": "i -th coefficient value."}, "@command": {"uri": "equationcmd-Equation", "anchor": "ww209222", "usage": "@command", "description": "full command line form of the estimation command. Note this is a combination of @method , @options and @spec ."}, "@contempcov": {"uri": "equationcmd-Equation", "anchor": "ww359933", "usage": "@contempcov", "description": "symmetric matrix containing the contemporaneous covariance [img:../content/images/equationcmd.105.001.2.jpg] for cointegrating regression residuals estimated with CCR."}, "@cvtestindices": {"uri": "equationcmd-Equation", "anchor": "ww549143", "usage": "@cvtestindices", "description": "test set indices for ENET cross-validation."}, "@cvtrainindices": {"uri": "equationcmd-Equation", "anchor": "ww549148", "usage": "@cvtrainindices", "description": "training set indices for ENET cross-validation."}, "@depends": {"uri": "equationcmd-Equation", "anchor": "ww623237", "usage": "@depends", "description": "string containing a list of the series in the current workfile on which this equation depends."}, "@description": {"uri": "equationcmd-Equation", "anchor": "ww326005", "usage": "@description", "description": "string containing the Equation object\u2019s description (if available)."}, "@detailedtype": {"uri": "equationcmd-Equation", "anchor": "ww325994", "usage": "@detailedtype", "description": "returns a string with the object type: \u201cEQUATION\u201d."}, "@deviance": {"uri": "equationcmd-Equation", "anchor": "ww209112", "usage": "@deviance", "description": "deviance (for Generalized Linear Models)."}, "@deviancestat": {"uri": "equationcmd-Equation", "anchor": "ww209113", "usage": "@deviancestat", "description": "deviance statistic: deviance divided by degrees-of-freedom (for Generalized Linear Models)."}, "@df": {"uri": "equationcmd-Equation", "anchor": "ww209114", "usage": "@df", "description": "degrees-of-freedom for equation."}, "@dispersion": {"uri": "equationcmd-Equation", "anchor": "ww209115", "usage": "@dispersion", "description": "estimate of dispersion (for Generalized Linear Models)."}, "@displayname": {"uri": "equationcmd-Equation", "anchor": "ww209223", "usage": "@displayname", "description": "returns the equation\u2019s display name. If the equation has no display name set, the name is returned."}, "@dw": {"uri": "equationcmd-Equation", "anchor": "ww178721", "usage": "@dw", "description": "Durbin-Watson statistic."}, "@effects": {"uri": "equationcmd-Equation", "anchor": "ww375900", "usage": "@effects", "description": "vector of fixed and random effects estimates (if applicable)."}, "@esteq": {"uri": "equationcmd-Equation", "anchor": "ww375938", "usage": "@esteq", "description": "returns string representation of the estimation equation."}, "@extralist": {"uri": "equationcmd-Equation", "anchor": "ww326098", "usage": "@extralist", "description": "space delimited list of the equation's extra regressors. For equation's estimated by ARCH, @extralist contains the variance equation terms. For equations estimated by CENSORED, this contains the error distribution terms. For all other equation methods it returns an empty string."}, "@f": {"uri": "equationcmd-Equation", "anchor": "ww178725", "usage": "@f", "description": "F -statistic."}, "@fcgrid": {"uri": "equationcmd-Equation", "anchor": "ww623283", "usage": "@fcgrid", "description": "returns a vector of unique grid values over which functional coefficients are evaluated in functional coefficient estimation."}, "@finalbw": {"uri": "equationcmd-Equation", "anchor": "ww623335", "usage": "@finalbw", "description": "returns the final bandwidth used in functional coefficient estimation."}, "@fixeddisp": {"uri": "equationcmd-Equation", "anchor": "ww209123", "usage": "@fixeddisp", "description": "indicator for whether the dispersion is a fixed value (for Generalized Linear Models)."}, "@fprob": {"uri": "equationcmd-Equation", "anchor": "ww208658", "usage": "@fprob", "description": "probability value of the F -statistic."}, "@hacbw": {"uri": "equationcmd-Equation", "anchor": "ww209131", "usage": "@hacbw", "description": "bandwidth for HAC estimation of GMM weighting matrix or long-run covariance in cointegrating regression (if applicable)."}, "@hq": {"uri": "equationcmd-Equation", "anchor": "ww178726", "usage": "@hq", "description": "Hannan-Quinn information criterion."}, "@initprobs": {"uri": "equationcmd-Equation", "anchor": "ww375902", "usage": "@initprobs", "description": "matrix containing initial probabilities for switching regression equations."}, "@instlist": {"uri": "equationcmd-Equation", "anchor": "ww209224", "usage": "@instlist", "description": "space delimited list of the equation instruments (if applicable)."}, "@instrank": {"uri": "equationcmd-Equation", "anchor": "ww209139", "usage": "@instrank", "description": "rank of instruments (if applicable)."}, "@instwgt": {"uri": "equationcmd-Equation", "anchor": "ww209257", "usage": "@instwgt", "description": "symmetric matrix containing the final sample instrument weighting matrix used during GMM or TSLS estimation ( e.g. , [img:../content/images/equationcmd.105.001.3.jpg] for 2SLS and [img:../content/images/equationcmd.105.001.4.jpg] for White weighting)."}, "@jprob": {"uri": "equationcmd-Equation", "anchor": "ww208662", "usage": "@jprob", "description": "probability value of the J -statistic."}, "@jstat": {"uri": "equationcmd-Equation", "anchor": "ww178730", "usage": "@jstat", "description": "J -statistic \u2014 value of the GMM objective function (for GMM and TSLS)."}, "@lambda": {"uri": "equationcmd-Equation", "anchor": "ww511991", "usage": "@lambda", "description": "Elastic net lambda path."}, "@lambda2cov": {"uri": "equationcmd-Equation", "anchor": "ww359961", "usage": "@lambda2cov", "description": "symmetric matrix [img:../content/images/equationcmd.105.001.5.jpg] containing the long run covariances of [img:../content/images/equationcmd.105.001.6.jpg] with [img:../content/images/equationcmd.105.001.7.jpg] and [img:../content/images/equationcmd.105.001.8.jpg] for cointegrating regression equations estimated with CCR and FMOLS."}, "@lambdacoefs": {"uri": "equationcmd-Equation", "anchor": "ww511987", "usage": "@lambdacoefs", "description": "Elastic net lambdas and coefficients."}, "@lambdaerrors": {"uri": "equationcmd-Equation", "anchor": "ww511993", "usage": "@lambdaerrors", "description": "Elastic net measurement error means and standard errors."}, "@lambdamin": {"uri": "equationcmd-Equation", "anchor": "ww549164", "usage": "@lambdamin", "description": "minimum lambda value from ENET cross-validation."}, "@lambdasum": {"uri": "equationcmd-Equation", "anchor": "ww511989", "usage": "@lambdasum", "description": "Elastic net summary path."}, "@limlk": {"uri": "equationcmd-Equation", "anchor": "ww209146", "usage": "@limlk", "description": "estimate of LIML [img:../content/images/equationcmd.105.001.1.jpg] (if applicable)."}, "@logl": {"uri": "equationcmd-Equation", "anchor": "ww209159", "usage": "@logl", "description": "value of the log likelihood function."}, "@lrcov": {"uri": "equationcmd-Equation", "anchor": "ww611354", "usage": "@lrcov", "description": "symmetric matrix containing the long-run covariance [img:../content/images/equationcmd.105.001.9.jpg] for cointegrating regression equations estimated with CCR and FMOLS."}, "@lrprob": {"uri": "equationcmd-Equation", "anchor": "ww209147", "usage": "@lrprob", "description": "probability value of likelihood ratio statistic (if applicable)."}, "@lrstat": {"uri": "equationcmd-Equation", "anchor": "ww209148", "usage": "@lrstat", "description": "likelihood ratio statistic (if applicable)."}, "@lrvar": {"uri": "equationcmd-Equation", "anchor": "ww209149", "usage": "@lrvar", "description": "long-run variance estimate for cointegrating regression (if applicable)."}, "@meandep": {"uri": "equationcmd-Equation", "anchor": "ww178732", "usage": "@meandep", "description": "mean of the dependent variable."}, "@method": {"uri": "equationcmd-Equation", "anchor": "ww209225", "usage": "@method", "description": "command line form of estimation method (\u201cARCH\u201d, \u201cLS\u201d, etc.. ..)."}, "@name": {"uri": "equationcmd-Equation", "anchor": "ww209226", "usage": "@name", "description": "returns the name of the Equation."}, "@nbreaks": {"uri": "equationcmd-Equation", "anchor": "ww495777", "usage": "@nbreaks", "description": "number of breaks in breakpoint least squares and thresholds in threshold regression."}, "@ncases": {"uri": "equationcmd-Equation", "anchor": "ww209163", "usage": "@ncases", "description": "number of cases."}, "@nclusters": {"uri": "equationcmd-Equation", "anchor": "ww495946", "usage": "@nclusters", "description": "number of clusters used in computing cluster robust covariances."}, "@ncoef": {"uri": "equationcmd-Equation", "anchor": "ww178733", "usage": "@ncoef", "description": "number of estimated coefficients."}, "@ncontrol": {"uri": "equationcmd-Equation", "anchor": "", "description": "Equation object. Equations are used for single equation estimation, testing, and forecasting."}, "@ncross": {"uri": "equationcmd-Equation", "anchor": "ww199632", "usage": "@ncross", "description": "number of cross-sections used in estimation (equal to 1 for non-panel workfiles)."}, "@npers": {"uri": "equationcmd-Equation", "anchor": "ww199633", "usage": "@npers", "description": "number of workfile periods used in estimation (same as @regobs for non-panel workfiles)."}, "@nregimes": {"uri": "equationcmd-Equation", "anchor": "ww359886", "usage": "@nregimes", "description": "number of regimes in a switching and breakpoint regression."}, "@nthresholds": {"uri": "equationcmd-Equation", "anchor": "", "description": "Equation object. Equations are used for single equation estimation, testing, and forecasting."}, "@ntreatment": {"uri": "equationcmd-Equation", "anchor": "", "description": "Equation object. Equations are used for single equation estimation, testing, and forecasting."}, "@objective": {"uri": "equationcmd-Equation", "anchor": "ww209178", "usage": "@objective", "description": "quasi-likelihood objective function (if applicable)."}, "@options": {"uri": "equationcmd-Equation", "anchor": "ww209227", "usage": "@options", "description": "command line form of estimation options."}, "@pearsonssr": {"uri": "equationcmd-Equation", "anchor": "ww209179", "usage": "@pearsonssr", "description": "Pearson sum-of-squared residuals (for Generalized Linear Models)."}, "@pearsonstat": {"uri": "equationcmd-Equation", "anchor": "ww209180", "usage": "@pearsonstat", "description": "Pearson statistic: Pearson SSR divided by degrees-of-freedom (for Generalized Linear Models)."}, "@pilotbw": {"uri": "equationcmd-Equation", "anchor": "ww552203"}, "@pmgcxcoefs": {"uri": "equationcmd-Equation", "anchor": "ww623394", "usage": "@pmgcxcoefs", "description": "returns a matrix of coefficient estimates from the error-correction regressions for each cross-section in PMG estimation. Each column corresponds to a single cross-section and each column corresponds to a coefficient estimate from the traditional error-correction regression, in order of appearance."}, "@pmgcxses": {"uri": "equationcmd-Equation", "anchor": "ww623440", "usage": "@pmgcxses", "description": "returns a matrix of coefficient standard error estimates from the error-correction regressions for each cross-section in PMG estimation. Each column corresponds to a single cross-section and each column corresponds to a coefficient standard error estimate from the traditional error-correction regression, in order of appearance."}, "@pmglrcoefs": {"uri": "equationcmd-Equation", "anchor": "ww623506", "usage": "@pmglrcoefs", "description": "returns a vector of long-run (pooled) coefficient estimates in PMG estimation."}, "@pmgsrcoefs": {"uri": "equationcmd-Equation", "anchor": "ww623558", "usage": "@pmgsrcoefs", "description": "returns a vector of short-run (mean-group) coefficient estimates in PMG estimation."}, "@pvals": {"uri": "equationcmd-Equation", "anchor": "ww359975", "usage": "@pvals", "description": "vector containing the coefficient probability values."}, "@qlrprob": {"uri": "equationcmd-Equation", "anchor": "ww209181", "usage": "@qlrprob", "description": "probability value of quasi-likelihood ratio statistic (if applicable)."}, "@qlrstat": {"uri": "equationcmd-Equation", "anchor": "ww209182", "usage": "@qlrstat", "description": "quasi-likelihood ratio statistic (if applicable)."}, "@quantdep": {"uri": "equationcmd-Equation", "anchor": "ww209183", "usage": "@quantdep", "description": "quantile of dependent variable (for quantile regression)."}, "@r2": {"uri": "equationcmd-Equation", "anchor": "ww199634", "usage": "@r2", "description": "R-squared statistic."}, "@rank": {"uri": "equationcmd-Equation", "anchor": "", "description": "Equation object. Equations are used for single equation estimation, testing, and forecasting."}, "@rbar2": {"uri": "equationcmd-Equation", "anchor": "ww178735", "usage": "@rbar2", "description": "adjusted R-squared statistic."}, "@rdeviance": {"uri": "equationcmd-Equation", "anchor": "ww209187", "usage": "@rdeviance", "description": "restricted (constant only) deviance (for Generalized Linear Models)."}, "@regobs": {"uri": "equationcmd-Equation", "anchor": "ww178736", "usage": "@regobs", "description": "number of observations in regression."}, "@remarks": {"uri": "equationcmd-Equation", "anchor": "ww623610", "usage": "@remarks", "description": "string containing the equation object\u2019s remarks (if available)."}, "@rlogl": {"uri": "equationcmd-Equation", "anchor": "ww233415", "usage": "@rlogl", "description": "restricted (constant only) log-likelihood (if applicable)."}, "@rmse": {"uri": "equationcmd-Equation", "anchor": "ww623653", "usage": "@rmse", "description": "root MSE."}, "@rn2": {"uri": "equationcmd-Equation", "anchor": "ww623699", "usage": "@rn2", "description": "Rn-squared statistic."}, "@robf": {"uri": "equationcmd-Equation", "anchor": "ww359726", "usage": "@robf", "description": "robust F -statistic (Wald-test form)."}, "@robfprob": {"uri": "equationcmd-Equation", "anchor": "ww359738", "usage": "@robfprob", "description": "robust F -statistic (Wald-test form) p -value."}, "@robjective": {"uri": "equationcmd-Equation", "anchor": "ww209195", "usage": "@robjective", "description": "restricted (constant only) quasi-likelihood objective function (if applicable)."}, "@rw2": {"uri": "equationcmd-Equation", "anchor": "ww623745", "usage": "@rw2", "description": "Rw-squared."}, "@schwarz": {"uri": "equationcmd-Equation", "anchor": "ww178737", "usage": "@schwarz", "description": "Schwarz information criterion."}, "@sddep": {"uri": "equationcmd-Equation", "anchor": "ww178738", "usage": "@sddep", "description": "standard deviation of the dependent variable."}, "@se": {"uri": "equationcmd-Equation", "anchor": "ww178739", "usage": "@se", "description": "standard error of the regression."}, "@smpl": {"uri": "equationcmd-Equation", "anchor": "ww209228", "usage": "@smpl", "description": "description of the sample specified for estimation."}, "@sparsity": {"uri": "equationcmd-Equation", "anchor": "ww209199", "usage": "@sparsity", "description": "estimate of sparsity (for quantile regression)."}, "@spec": {"uri": "equationcmd-Equation", "anchor": "ww209229", "usage": "@spec", "description": "original equation specification. Note this will be different from @varlist if the equation specification contains groups, or is specified by expression."}, "@ssr": {"uri": "equationcmd-Equation", "anchor": "ww359833", "usage": "@ssr", "description": "sum of squared residuals."}, "@ssr2": {"uri": "equationcmd-Equation", "anchor": "ww623797", "usage": "@ssr2", "description": "second-stage SSR."}, "@stderrs": {"uri": "equationcmd-Equation", "anchor": "ww359835", "usage": "@stderrs(i)", "description": "standard error for coefficient i ."}, "@subst": {"uri": "equationcmd-Equation", "anchor": "ww209230", "usage": "@subst", "description": "returns string representation of the equation with substituted coefficients."}, "@thresholds": {"uri": "equationcmd-Equation", "anchor": "ww374898", "usage": "@thresholds", "description": "number of thresholds (for threshold regression)."}, "@tstats": {"uri": "equationcmd-Equation", "anchor": "ww359843", "usage": "@tstats(i)", "description": "t -statistic or z -statistic value for coefficient i ."}, "@type": {"uri": "equationcmd-Equation", "anchor": "ww209231", "usage": "@type", "description": "returns a string with the object type: \u201cEQUATION\u201d."}, "@updatetime": {"uri": "equationcmd-Equation", "anchor": "ww209233", "usage": "@updatetime", "description": "returns a string representation of the time and date at which the equation was last updated."}, "@varlist": {"uri": "equationcmd-Equation", "anchor": "ww209234", "usage": "@varlist", "description": "space delimited list of the equation\u2019s dependent variable and regressors if the equation was specified by list, or the equation\u2019s underlying variables (both dependent and independent) if the equation was specified by expression."}, "@varselkept": {"uri": "equationcmd-Equation", "anchor": "ww572301", "usage": "@varselkept", "description": "space delimited list of variables kept by model selection."}, "@varselrejected": {"uri": "equationcmd-Equation", "anchor": "ww572297", "usage": "@varselrejected", "description": "space delimited list of the variables dropped by model selection."}, "@wgtscale": {"uri": "equationcmd-Equation", "anchor": "ww209208", "usage": "@wgtscale", "description": "scaling factor for weights (if applicable)."}, "@wmeandep": {"uri": "equationcmd-Equation", "anchor": "ww209207", "usage": "@wmeandep", "description": "weighted mean of dependent variable (if applicable)."}, "abtest": {"uri": "equationcmd-abtest", "anchor": "", "usage": "eq_name. abtest (options)", "description": "Test for serial correlation in a panel GMM equation using the Arellano-Bond test.", "long_description": "Tests for first and second order autocorrelation amongst the residuals of an equation estimated by GMM with first differences in a panel workfile. If the underlying errors are i.i.d , we would expect the first differences to be negatively first order serially correlated, and not display second order correlation."}, "arch": {"uri": "equationcmd-arch", "anchor": "", "usage": "eq_name. arch (p,q,options) y [x1 x2 x3] [@ p1 p2 [@ t1 t2]]\neq_name. arch (p,q,options) y=expression [@ p1 p2 [@ t1 t2]]", "description": "Estimate generalized autoregressive conditional heteroskedasticity (GARCH) models.", "long_description": "The first two options specify the order of the GARCH model:\n\u2022 The arch estimation method specifies a GARCH( p , q ) model with p ARCH terms and q GARCH terms. Note the order of the arguments in which the ARCH and GARCH terms are entered.\nThe maximum value for [img:../content/images/equationcmd.105.003.1.jpg] or [img:../content/images/equationcmd.105.003.2.jpg] is 9; values above will be set to 9. The minimum value for [img:../content/images/equationcmd.105.003.3.jpg] is 1. The minimum value for [img:../content/images/equationcmd.105.003.4.jpg] is 0. If either [img:../content/images/equationcmd.105.003.5.jpg] or [img:../content/images/equationcmd.105.003.6.jpg] is not specified, EViews will assume a corresponding order of 1. Thus, a GARCH(1, 1) is assumed by default.\n\u2022 For Fractional Exponential GARCH models (FIEGARCH), EViews only estimates FIEGARCH(1,1) models. For these specifications, [img:../content/images/equationcmd.105.003.7.jpg] and [img:../content/images/equationcmd.105.003.8.jpg] options should not be specified, and if provided, will be ignored.\nAfter the \u201cARCH\u201d keyword and options, specify the dependent variable followed by a list of regressors in the mean equation.\n\u2022 By default, only the intercept is included in the conditional variance equation. If you wish to specify variance regressors, list them after the mean equation using an \u201c@\u201d-sign to separate the mean from the variance equation.\n\u2022 When estimating component ARCH models, you may specify exogenous variance regressors for both the permanent and transitory components. After the mean equation regressors, first list the regressors for the permanent component, followed by an \u201c@\u201d-sign, then the regressors for the transitory component. A constant term is always included as a permanent component regressor."}, "archtest": {"uri": "equationcmd-archtest", "anchor": "", "usage": "eq_name. archtest ( options )", "description": "Test for autoregressive conditional heteroskedasticity (ARCH).", "long_description": "Carries out Lagrange Multiplier (LM) tests for ARCH in the residuals of a single least squares equation."}, "ardl": {"uri": "equationcmd-ardl", "anchor": "", "usage": "equation. ardl ( options ) linear_regs [@ static_regs] [@ asy dual_asymmetric_regs] [@ asylr long_run_asymmetric_regs] [@ asysr short_run_asymmetric_regs]", "description": "Estimate an equation with autoregressive distributed lags using least squares.", "long_description": "The linear_regs specification is required:\n\u2022 The linear_regs list should be the dependent variable followed by a list of linear distributed-lag regressors.\nThe remaining specifications are optional\n\u2022 static_regs should be a list of static regressors, not including a constant or trend term.\n\u2022 dual_asymmetric_regs are distributed-lag regressors which are asymmetric both in the short-run and long-run.\n\u2022 long_run_asymmetric_regs regressors are distributed lag-regressors which are asymmetric in the long-run but symmetric in the short-run.\n\u2022 short_run_asymmetric_regs are asymmetric regressors which are distributed lag-regressors which are asymmetric in the short-run but symmetric in the long-run.\nYou may specify the lag for an individual distributed-lag variable using the \u201c @fl(variable, lag) \u201d syntax. For instance, if the variable X should use 3 lags, irrespective of the fixed or automatic lag settings, you may specify this by entering \u201c@fl(x, 3)\u201d in the regressor list."}, "arma": {"uri": "equationcmd-arma", "anchor": "", "usage": "eq_name. arma ( type = arg [,options] )", "description": "Examine ARMA structure of estimated equation.", "long_description": "Provides diagnostic graphical and tabular views that aid you in assessing the structure of the ARMA component of an estimated equation. The view is currently available only for equations specified by list and estimated by least squares that include at least one AR or MA term. There are four views types available: roots, correlogram, impulse response, and frequency spectrum.\nwhere eq_name is the name of an equation object specified by list, estimated by least squares, and contains at least one ARMA term."}, "auto": {"uri": "equationcmd-auto", "anchor": "", "usage": "eq_name. auto ( order , options )", "description": "Compute serial correlation LM (Lagrange multiplier) test.", "long_description": "Carries out Breusch-Godfrey Lagrange Multiplier (LM) tests for serial correlation in the estimation residuals.\nYou must specify the order of serial correlation for which you wish to test. You should specify the number of lags in parentheses after the auto keyword, followed by any additional options."}, "binary": {"uri": "equationcmd-binary", "anchor": "", "usage": "eq_name. binary (options) y x1 [x2 x3 ...]\neq_name. binary (options) specification", "description": "Estimate binary dependent variable models.", "long_description": "Estimates models where the binary dependent variable Y is either zero or one (probit, logit, gompit)."}, "boundstest": {"uri": "equationcmd-boundstest", "anchor": "", "usage": "eq_name. boundstest ( options )", "description": "Perform the Pesaran, Shin and Smith (2001) bounds test of long-run relationships from an ARDL estimated equation.", "long_description": "This view displays a spool object with the ARDL bounds test diagnostics. The first table is a summary of the test along with statistic values. The second table summarizes the bound test critical values associated with the F -statistic. When appropriate (the deterministic case does not include a restricted constant (cases 3 and 5), a third table summarizes the bound test critical values associated with the t -statistic."}, "breakls": {"uri": "equationcmd-breakls", "anchor": "", "usage": "eq_name. breakls (options) y z1 [z2 z3 ...] [ @nv x1 x2 x3 ...]", "description": "Estimation by linear least squares regression with breakpoints.", "long_description": "List the dependent variable first, followed by a list of the independent variables that have coefficients which are allowed to vary across breaks, followed optionally by the keyword @nv and a list of non-varying coefficient variables."}, "breakspec": {"uri": "equationcmd-breakspec", "anchor": "", "usage": "eq_name. breakspec", "description": "Display the breakpoint specification results for an equation estimated using breakls ."}, "breaktest": {"uri": "equationcmd-breaktest", "anchor": "", "usage": "eq_name. breaktest obs1 [obs2 obs3....]", "description": "Breakpoint test.", "long_description": "Carries out a breakpoint test for parameter stability in equations estimated using TSLS and GMM.\nSee chow for related tests in equations estimated using least squares.\nYou must provide the breakpoint observations (using dates or observation numbers) to be tested. To specify more than one breakpoint, separate the breakpoints by a space."}, "cdtest": {"uri": "equationcmd-cdtest", "anchor": "", "usage": "eq_name. cdtest", "description": "Test for the presence of cross-sectional dependence in the residuals of panels equations.", "long_description": "Computes the Breusch-Pagan (1980) LM, Pesaran (2004) scaled LM, Pesaran (2004) CD, and Baltagi, and Feng and Kao (2012) bias-corrected scaled LM test for the residuals of a panel or pool equation, or panel series."}, "cellipse": {"uri": "equationcmd-cellipse", "anchor": "", "usage": "eq_name. cellipse (options) restrictions", "description": "Confidence ellipses for coefficient restrictions.", "long_description": "The cellipse view displays confidence ellipses for pairs of coefficient restrictions for an equation object.\nEnter the equation name, followed by a period, and the keyword cellipse . This should be followed by a list of the coefficient restrictions. Joint (multiple) coefficient restrictions should be separated by commas."}, "censored": {"uri": "equationcmd-censored", "anchor": "", "usage": "eq_name. censored (options) y x1 [x2 x3]\neq_name. censored (options) specification", "description": "Estimation of censored and truncated models.", "long_description": "Estimates models where the dependent variable is either censored or truncated. The allowable specifications include the standard Tobit model."}, "chow": {"uri": "equationcmd-chow", "anchor": "", "usage": "eq_name. chow (options) obs1 [obs2 obs3 ...] @ x1 x2 x3", "description": "Chow test for stability.", "long_description": "Carries out Chow breakpoint or Chow forecast tests for parameter constancy.\nYou must provide the breakpoint observations (using dates or observation numbers) to be tested. To specify more than one breakpoint, separate the breakpoints by a space. For the Chow breakpoint test, if the equation is specified by list and contains no nonlinear terms, you may specify a subset of the regressors to be tested for a breakpoint after an \u201c@\u201d sign."}, "cinterval": {"uri": "equationcmd-cinterval", "anchor": "", "usage": "eq_name. cinterval (options) arg", "description": "Confidence interval.", "long_description": "The confidence interval view displays a table of confidence intervals for each of the coefficients in the equation.\nwhere arg is a list of confidence levels, or the name of a scalar or vector in the workfile containing confidence levels."}, "clearhist": {"uri": "equationcmd-clearhist", "anchor": "", "usage": "equation_name. clearhist", "description": "Clear the contents of the history attribute for equation objects.", "long_description": "Removes the equation\u2019s history attribute, as shown in the label view of the equation."}, "clearremarks": {"uri": "equationcmd-clearremarks", "anchor": "", "usage": "equation_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the equations\u2019s remarks attribute, as shown in the label view of the equation."}, "coefcov": {"uri": "equationcmd-coefcov", "anchor": "", "usage": "eq_name. coefcov (options)", "description": "Coefficient covariance matrix.", "long_description": "Displays the covariances of the coefficient estimates for an estimated equation."}, "coefevol": {"uri": "equationcmd-coefevol", "anchor": "", "usage": "eq_name. coefevol ( options )", "description": "Display the graph of coefficients versus lambda, L1 norm, or R-squared for elastic net, ridge, and Lasso models."}, "coeflabel": {"uri": "equationcmd-coeflabel", "anchor": "", "usage": "equation_name. coeflabel (options)", "description": "Displays the coefficients associated with variables in the equation specification."}, "coefmatrix": {"uri": "equationcmd-coefmatrix", "anchor": "", "usage": "eq_name. coefmatrix ( options )", "description": "Display the matrix of lambda and coefficients for elastic net, ridge, and Lasso models."}, "coefscale": {"uri": "equationcmd-coefscale", "anchor": "", "usage": "eq_name. coefscale", "description": "Scaled coefficients.", "long_description": "Displays the coefficient estimates, the standardized coefficient estimates and the elasticity at means."}, "coint": {"uri": "equationcmd-coint", "anchor": "", "usage": "Equation View:\teq_name. coint ( options ) [arg]", "description": "Test for cointegration between series in an equation.", "long_description": "Test for cointegration between series in an equation estimated by Equation::cointreg . You may perform a Hansen Instability Test, Park Added Variable (Spurious Trends) Test, or between a residual-based Engle-Granger or Phillips-Ouliaris test.\nJohansen tests for cointegration may be performed from a group or a VAR object (see Group::coint and Var::coint ).\nThe cointegrating equation specification is taken from the equation. Additional test specification components are specified as options and arguments.\nwhere\n\nmethod= arg (default= \u201chansen\u201d ) Test method: Hansen\u2019s Instability test (\u201chansen\u201d), Park\u2019s Added Variable (\u201cpark\u201d), Engle-Granger residual test (\u201ceg\u201d), Phillips-Ouliaris residual test (\u201cpo\u201d).\nand arg is an optional list describing additional regressors to include in the Park Added Regressors test (when \u201cmethod=park\u201d is specified).\nThe Park, Engle-Granger, and Phillips-Ouliaris tests all have options which control various aspects of the test."}, "cointgraph": {"uri": "equationcmd-cointgraph", "anchor": "", "usage": "equation_name. cointgraph", "description": "View a graph of the estimated cointegrating relation form of an ARDL estimated equation.", "long_description": "This view is only available for non-panel equations estimated using the ARDL method."}, "cointreg": {"uri": "equationcmd-cointreg", "anchor": "", "usage": "eq_name. cointreg ( options ) y x1 [x2 x3 ...] [ @determ determ_spec] [ @regdeterm regdeterm_spec]", "description": "Estimate a cointegrating equation using Fully Modified OLS (FMOLS), Canonical Cointegrating Regression (CCR), or Dynamic OLS (DOLS) in single time series settings, and Panel FMOLS and DOLS in panel workfiles.", "long_description": "List the cointreg keyword, followed by the dependent variable and a list of the cointegrating variables.\nCointegrating equation specifications that include a constant, linear, or quadratic trends, should use the \u201ctrend=\u201d option to specify those terms. If any of those terms are in the stochastic regressors equations but not in the cointegrating equation, they should be specified using the \u201cregtrend=\u201d option.\nDeterministic trend regressors that are not covered by the list above may be specified using the keywords @determ and @regdeterm . To specify deterministic trend regressors that enter into the regressor and cointegrating equations, you should add the keyword @determ followed by the list of trend regressors. To specify deterministic trends that enter in the regressor equations but not the cointegrating equation, you should include the keyword @regdeterm followed by the list of trend regressors."}, "cointrel": {"uri": "equationcmd-cointrel", "anchor": "", "usage": "eq_name. cointrel ( options )", "description": "Display information about the cointegrating relation specification and the coefficients in an ARDL estimated equation ."}, "cointrep": {"uri": "equationcmd-cointrep", "anchor": "", "usage": "equation_name. cointrep", "description": "View the estimated cointegration form and the long-run coefficients table of an ARDL estimated equation.", "long_description": "This view is only available for non-panel equations estimated using the ARDL method."}, "copy": {"uri": "equationcmd-copy", "anchor": "", "usage": "equation_name. copy\nequation_name. copy dest_name", "description": "Creates a copy of the equation.", "long_description": "Creates either a named or unnamed copy of the equation."}, "correl": {"uri": "equationcmd-correl", "anchor": "", "usage": "eq_name. correl (n, options)", "description": "Display autocorrelation and partial correlations.", "long_description": "Displays the correlogram and partial correlation functions of the residuals of the equation, together with the Q -statistics and p -values associated with each lag.\nYou must specify the largest lag n to use when computing the autocorrelations."}, "correlsq": {"uri": "equationcmd-correlsq", "anchor": "", "usage": "equation_name. correlsq (n, options)", "description": "Correlogram of squared residuals.", "long_description": "Displays the autocorrelation and partial correlation functions of the squared residuals from an estimated equation, together with the Q -statistics and p -values associated with each lag.\nYou must specify the largest lag n to use when computing the autocorrelations."}, "count": {"uri": "equationcmd-count", "anchor": "", "usage": "eq_name. count (options) y x1 [x2 x3...]\neq_name. count (options) specification", "description": "Estimates models where the dependent variable is a nonnegative integer count.", "long_description": "Follow the count keyword by the name of the dependent variable and a list of regressors or provide a linear specification."}, "cvardecomp": {"uri": "equationcmd-cvardecomp", "anchor": "", "usage": "equation_name. cvardecomp", "description": "Displays the coefficient covariance decomposition table."}, "cverror": {"uri": "equationcmd-cverror", "anchor": "", "usage": "eq_name. cverror ( options )", "description": "Display lambda, the mean values of the training and test error measures, and the standard errors of those measures, for elastic net, ridge, and Lasso models.", "long_description": "By default, displays results in a table."}, "cvtestindices": {"uri": "equationcmd-cvtestindices", "anchor": "", "usage": "eq_name. cvtestindices ( options )", "description": "Matrix of the test set indices for observations and cross-validation sets.", "long_description": "By default, displays results in a table."}, "cvtrainindices": {"uri": "equationcmd-cvtrainindices", "anchor": "", "usage": "eq_name. cvtrainindices ( options )", "description": "Matrix of the training set indices for observations and cross-validation sets.", "long_description": "By default, displays results in a table."}, "depfreq": {"uri": "equationcmd-depfreq", "anchor": "", "usage": "equation_name. depfreq (options)", "description": "Dependent variable frequency table.", "long_description": "Displays the frequency table for the dependent variable in binary, count, and ordered equations."}, "derivs": {"uri": "equationcmd-derivs", "anchor": "", "usage": "equation_name. derivs (options)", "description": "Examine derivatives of the equation specification.", "long_description": "Display information about the derivatives of the equation specification in tabular, graphical, or summary form.\nThe (default) summary form shows information about how the derivative of the equation specification was computed, and will display the analytic expression for the derivative, or a note indicating that the derivative was computed numerically.\nYou may optionally choose a tabular or graphical display of the derivatives. The tabular form shows a spreadsheet view of the derivatives of the regression specification with respect to each coefficient (for each observation). The graphical form of the view shows this information in a multiple line graph."}, "did": {"uri": "equationcmd-did", "anchor": "", "usage": "equation. did (options) y [x1] [ @ treatment]", "description": "Estimate a equation in a panel structured workfile using the difference-in-difference estimator.", "long_description": "List the dependent variable, followed by an optional list of exogenous regressors, followed by an \u201c@\u201d and then the binary treatment variable. You should not include a constant in the specification."}, "didcs": {"uri": "equationcmd-didcs", "anchor": "", "usage": "eq_name. didcs ( options ) [additional_regs]", "description": "Display the Callaway-Sant\u2019Anna decomposition for difference-in-difference estimation.", "long_description": "For panel equations estimated using the difference-in-difference method.\nYou should follow the didcs keyword by an optional list of additional regressors added to the Callaway-Sant\u2019Anna estimation."}, "didgbdecomp": {"uri": "equationcmd-didgbdecomp", "anchor": "", "usage": "eq_name. didgbdecomp ( options )", "description": "Display the Goodman-Bacon decomposition for difference-in-difference estimation.", "long_description": "For panel equations estimated using the difference-in-difference method."}, "didmakeeq": {"uri": "equationcmd-didmakeeq", "anchor": "", "usage": "eq_name. didmakeeq new_eqname", "description": "Create an equation object with the underlying fixed-effects estimation of a difference-in-difference equation.", "long_description": "For panel equations estimated using the difference-in-difference method.\nYou should follow the didmakeeq keyword with the name of the new estimated equation with an equivalent specification to be created in the workfile."}, "didtrends": {"uri": "equationcmd-didtrends", "anchor": "", "usage": "eq_name. didtrends ( options )", "description": "Display difference-in-difference trends summary in graph or tabular form.", "long_description": "For panel equations estimated using the difference-in-difference method."}, "display": {"uri": "equationcmd-display", "anchor": "", "usage": "equation_name. display object_name", "description": "Display table, graph, or spool output in the equation object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the equation object."}, "displayname": {"uri": "equationcmd-displayname", "anchor": "", "usage": "equation_name. displayname display_name", "description": "Display name for equation objects.", "long_description": "Attaches a display name to an equation which may be used to label output in place of the standard equation object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in equation object names."}, "dynmult": {"uri": "equationcmd-dynmult", "anchor": "", "usage": "eq_name. dynmult ( options ) [horizon]", "description": "Dynamic multipliers for long-run regressors in ARDL equations.", "long_description": "Displays a spool object with the cumulative dynamic multiplier curve for each of the long-run regressors. The argument is a positive integer denoting the horizon length, and defaults to 15.\nhorizon is a positive integer denoting the horizon length, and defaults to 15."}, "ecresults": {"uri": "equationcmd-ecresults", "anchor": "", "usage": "eq_name. ecresults ( options )", "description": "Display a spool object showing tables with the conditional error correction (CEC) and error correction (EC) regression results in ARDL equations."}, "effects": {"uri": "equationcmd-effects", "anchor": "", "usage": "eq_name. effects", "description": "Display the estimates of the fixed and/or random effects.", "long_description": "The effects view of a panel equation shows the estimates of the fixed and/or random effects associated with the estimated equation. These effects are expressed as deviations from the overall intercept displayed in the main equation output.."}, "endogtest": {"uri": "equationcmd-endogtest", "anchor": "", "usage": "eq_name. endogtest regressors", "description": "Performs the regressor endogeneity test", "long_description": "The endogtest view of an equation carries out the Regressor Endogeneity/Donald-Wu Test for equations estimated via TSLS or GMM."}, "enet": {"uri": "equationcmd-enet", "anchor": "", "usage": "equation_name .enet (options) y x1 [x2 x3 ...] [@vw(...)]", "description": "Estimation of an elastic net model, including options for Lasso and ridge regression.", "long_description": "List the dependent variable first, followed by a list of the independent variables. Use a \u201c C\u201d if you wish to include a constant or intercept term. Variable weights should be incorporated with the \u201c@vw\u201d tag, e.g. , \u201c@vw(x1, 0.5)\u201d."}, "facbreak": {"uri": "equationcmd-facbreak", "anchor": "", "usage": "eq_name. facbreak (options) ser1 [ser2 ser3 ...] @ x1 x2 x3", "description": "Factor breakpoint test for stability.", "long_description": "Carries out a factor breakpoint test for parameter constancy.\nYou must provide one or more series to be used as the factors with which to split the sample into categories. To specify more than one factor, separate the factors by a space. If the equation is specified by list and contains no nonlinear terms, you may specify a subset of the regressors to be tested for a breakpoint after an \u201c@\u201d sign."}, "fit": {"uri": "equationcmd-fit", "anchor": "", "usage": "eq_name. fit (options) yhat [y_se]\neq_name. fit (options) yhat [y_se y_var]", "description": "Compute static forecasts or fitted values from an estimated equation.", "long_description": "When the regressor contains lagged dependent values or ARMA terms, fit uses the actual values of the dependent variable instead of the lagged fitted values. You may instruct fit to compare the forecasted data to actual data, and to compute forecast summary statistics.\nNot available for equations estimated using ordered methods; use Equation::makemodel to create a model using the ordered equation results (see example below).\nFollowing the fit keyword, you should type a name for the forecast series and, optionally, a name for the series containing the standard errors. For ARCH specifications, you may use the second form of the command, and optionally include a name for the conditional variance series.\nForecast standard errors are currently not available for binary, censored, and count models."}, "fixedtest": {"uri": "equationcmd-fixedtest", "anchor": "", "usage": "eq_name. fixedtest (options)", "description": "Test joint significance of the fixed effects estimates.", "long_description": "Tests the hypothesis that the estimated fixed effects are jointly significant using [img:../content/images/equationcmd.105.055.1.jpg] and LR test statistics. If the estimated specification involves two-way fixed effects, three separate tests will be performed; one for each set of effects, and one for the joint effects."}, "forecast": {"uri": "equationcmd-forecast", "anchor": "", "usage": "eq_name. forecast (options) yhat [y_se]\neq_name. forecast (options) yhat [y_se y_var]", "description": "Computes dynamic forecasts of an estimated equation.", "long_description": "forecast computes the forecast for all observations in a specified sample. In some settings, you may instruct forecast to compare the forecasted data to actual data, and to compute summary statistics.\nEnter a name for the forecast series and, optionally, a name for the series containing the standard errors. For ARCH specifications, you may use the second form of the command, and optionally enter a name for the conditional variance series. Forecast standard errors are currently not available for binary or censored models. forecast is not available for models estimated using ordered methods."}, "funbias": {"uri": "equationcmd-funbias", "anchor": "", "usage": "eq_name. funbias (options)", "description": "Display functional coefficients bias results in graphical form.", "long_description": "For equations estimated using the functional coefficients method."}, "funbw": {"uri": "equationcmd-funbw", "anchor": "", "usage": "eq_name. funbw (options)", "description": "Display functional coefficients final bandwidth selection results.", "long_description": "For equations estimated using the functional coefficients method."}, "funci": {"uri": "equationcmd-funci", "anchor": "", "usage": "eq_name. funci (options) ci_level", "description": "Display graphs showing estimated lower and upper functional confidence intervals for the functional coefficients.", "long_description": "For equations estimated using the functional coefficients method.\nwhere ci_level is a value between 0 and 1 specifying the confidence level you wish to display . If ci_level is omitted, EViews will use 0.95."}, "funcoef": {"uri": "equationcmd-funcoef", "anchor": "", "usage": "eq_name. funcoef ( options ) y x1 [x2 x3 ...] @ funcoef_series", "description": "Estimate a functional coefficient regression equation.", "long_description": "List the funcoef keyword, the dependent variable and a list of the regressor variables, followed by the \u201c@\u201d symbol and the name of the functional coefficient series."}, "funcov": {"uri": "equationcmd-funcov", "anchor": "", "usage": "eq_name. funcov (options)", "description": "Display functional coefficient covariance functions in graphical form.", "long_description": "For equations estimated using the functional coefficients method."}, "funtest": {"uri": "equationcmd-funtest", "anchor": "", "usage": "eq_name. funtest (options) arg\ncoefspec = restriction", "description": "Perform functional coefficients hypothesis and stability tests.", "long_description": "Test one or more functional coefficients for stability or equality with values in a specified series.\nFor equations estimated using the functional coefficients method.\nwhere arg is a comma separated list of functional coefficient restrictions for which you wish separately to test.\nThe coefficient restrictions\nwhere coefspec is a coefficient spec consisting of,\n\u2022 c( k )\n\u2022 @all\nfor individual coefficient k , and all coefficients, respectively, and restriction takes the form:\n\u2022 series_name or vector\n\u2022 scalar\n\u2022 @constant"}, "garch": {"uri": "equationcmd-garch", "anchor": "", "usage": "eq_name. garch (options)", "description": "Conditional variance/covariance of (G)ARCH estimation.", "long_description": "Displays the conditional variance, covariance or correlation of an equation estimated by ARCH."}, "glm": {"uri": "equationcmd-glm", "anchor": "", "usage": "eq_name. glm ( options ) spec", "description": "Estimate a Generalized Linear Model (GLM).", "long_description": "List the glm keyword, followed by the dependent variable and a list of the explanatory variables, or an explicit linear expression.\nIf you enter an explicit linear specification such as \u201cY=C(1)+C(2)*X\u201d, the response variable will be taken to be the variable on the left-hand side of the equality (\u201cY\u201d) and the linear predictor will be taken from the right-hand side of the expression (\u201cC(1)+C(2)*X\u201d).\nOffsets may be entered directly in an explicit linear expression or they may be entered as using the \u201coffset=\u201d option."}, "gmm": {"uri": "equationcmd-gmm", "anchor": "", "usage": "eq_name. gmm (options) y x1 [x2 x3...] @ z1 [z2 z3...]\neq_name. gmm (options) specification @ z1 [z2 z3...]", "description": "Estimation by generalized method of moments (GMM).", "long_description": "The equation object must be specified with a list of instruments.\nFollow the name of the dependent variable by a list of regressors, followed by the \u201c@\u201d symbol, and a list of instrumental variables which are orthogonal to the residuals. Alternatively, you can specify an expression using coefficients, an \u201c@\u201d symbol, and a list of instrumental variables. There must be at least as many instrumental variables as there are coefficients to be estimated.\nIn panel settings, you may specify dynamic instruments corresponding to predetermined variables. To specify a dynamic instrument, you should tag the instrument using \u201c@DYN\u201d, as in \u201c@DYN(X)\u201d. By default, EViews will use a set of period-specific instruments corresponding to lags from -2 to \u201c-infinity\u201d. You may also specify a restricted lag range using arguments in the \u201c@DYN\u201d tag. For example, to use lags from-5 to \u201c-infinity\u201d you may enter \u201c@DYN(X, -5)\u201d; to specify lags from -2 to -6, use \u201c@DYN(X, -2, -6)\u201d or \u201c@DYN(X, -6, -2)\u201d.\nNote that dynamic instrument specifications may easily generate excessively large numbers of instruments."}, "grads": {"uri": "equationcmd-grads", "anchor": "", "usage": "equation_name. grads (options)", "description": "Gradients of the objective function.", "long_description": "Displays the gradients of the objective function. Evaluating the gradients at current coefficient values allows you to examine the behavior of the objective function at starting values.\nThe (default) summary form shows the value of the gradient vector at the estimated parameter values (if valid estimates exist) or at the current coefficient values.\nYou may optionally choose to display the results in tabular or graphical form. The tabular form shows a spreadsheet view of the gradients for each observation. The graphical form shows this information in a multiple line graph."}, "heckit": {"uri": "equationcmd-heckit", "anchor": "", "usage": "equation_name. heckit ( options ) response_eqn @ selection_eqn", "description": "Estimate a selection equation using the Heckman ML or 2-step method.", "long_description": "The response equation should be the dependent variable followed by a list of regressors. The selection equation should be a binary dependent variable followed by a list of regressors."}, "hettest": {"uri": "equationcmd-hettest", "anchor": "", "usage": "equation_name. hettest (options) variables", "description": "Test for Heteroskedasticity.", "long_description": "Performs a test for heteroskedasticity among the residuals from an equation.\nThe test performed can be a Breusch-Pagan-Godfrey (the default option), Harvey, Glejser, ARCH or White style test."}, "hist": {"uri": "equationcmd-hist", "anchor": "", "usage": "equation_name. hist (options)", "description": "Histogram and descriptive statistics of the residual series of an equation."}, "icgraph": {"uri": "equationcmd-icgraph", "anchor": "", "usage": "equation_name. icgraph", "description": "Display a graph of the selection criteria for the top 20 models observed as part of model selection during estimation.", "long_description": "This view is only available for equations estimated using the ARDL or TAR methods."}, "ictable": {"uri": "equationcmd-ictable", "anchor": "", "usage": "equation_name.ictable", "description": "Display a table of the log-likelihood and selection criteria for the top 20 models observed as part of model selection during estimation.", "long_description": "This view is only available for equations estimated using the ARDL or TAR methods."}, "infbetas": {"uri": "equationcmd-infbetas", "anchor": "", "usage": "equation_name. infbetas (options) [base_name]", "description": "Scaled difference in the estimated betas for influence statistics.", "long_description": "DFBETAS are the scaled difference in the estimated betas between the original equation and an equation estimated without that observation.\nwhere base_name is an optional naming suffix used to store the DFBETAS into the workfile."}, "infstats": {"uri": "equationcmd-infstats", "anchor": "", "usage": "equation_name. infstats (options)\nequation_name. infstats (options) stats_list [@ save_names]", "description": "Influence statistics.", "long_description": "Displays influence statistics to discover influential observations, or outliers.\nIf no stats_list is provided all of the statistics will be displayed. save_names is an optional list of names for storing the statistics into series in the workfile. The save_names should match the order in which the keywords in stats_list are entered."}, "instsum": {"uri": "equationcmd-instsum", "anchor": "", "usage": "eq_name. instsum", "description": "Shows a summary of the equation instruments.", "long_description": "Changes the view of the equation to the Instrument Summary view. Note this is only available for equations estimated by TSLS, GMM, or LIML."}, "label": {"uri": "equationcmd-label", "anchor": "", "usage": "equation_name. label\nequation_name. label (options) [text]", "description": "Display or change the label view of an equation, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the equation label."}, "lambdasummary": {"uri": "equationcmd-lambdasummary", "anchor": "", "usage": "eq_name. lambdasummary ( options )", "description": "Display matrix of summary information ordered by lambda for elastic net, ridge, and Lasso models."}, "liml": {"uri": "equationcmd-liml", "anchor": "", "usage": "eq_name. liml (options) y c x1 [x2 x3 ...] @ z1 [z2 z3 ...]\neq_name. liml (options) specification @ z1 [z2 z3 ...]", "description": "Limited Information Maximum Likelihood and K-class Estimation.", "long_description": "To use the liml command, list the dependent variable first, followed by the regressors, then any AR or MA error specifications, then an \u201c@\u201d-sign, and finally, a list of exogenous instruments.\nYou may estimate nonlinear equations or equations specified with formulas by first providing a specification, then listing the instrumental variables after an \u201c@\u201d-sign. There must be at least as many instrumental variables as there are independent variables. All exogenous variables included in the regressor list should also be included in the instrument list. A constant is included in the list of instrumental variables, unless the noconst option is specified."}, "logit": {"uri": "equationcmd-logit", "anchor": "", "description": "Estimate binary models with logistic errors.", "long_description": "Provide for backward compatibility. Equivalent to issuing the command, binary with the option \u201c (d=l) \u201d.\nSee binary ."}, "ls": {"uri": "equationcmd-ls", "anchor": "", "usage": "eq_name. ls (options) y x1 [x2 x3 ...]\neq_name. ls (options) specification", "description": "Estimation by linear or nonlinear least squares regression.", "long_description": "When the current workfile has a panel structure, ls also estimates cross-section weighed least squares, feasible GLS, and fixed and random effects models.\nFor linear specifications, list the dependent variable first, followed by a list of the independent variables. Use a \u201c C\u201d if you wish to include a constant or intercept term; unlike some programs, EViews does not automatically include a constant in the regression. You may add AR, MA, SAR, and SMA error specifications, a D fractional differencing term, and PDL specifications for polynomial distributed lags. If you include lagged variables, EViews will adjust the sample automatically, if necessary.\nBoth dependent and independent variables may be created from existing series using standard EViews functions and transformations. EViews treats the equation as linear in each of the variables and assigns coefficients C(1), C(2), and so forth to each variable in the list.\nLinear or nonlinear single equations may also be specified by explicit equation. You should specify the equation as a formula. The parameters to be estimated should be included explicitly: \u201cC(1)\u201d, \u201cC(2)\u201d, and so forth (assuming that you wish to use the default coefficient vector \u201cC\u201d). You may also declare an alternative coefficient vector using coef and use these coefficients in your expressions."}, "lvageplot": {"uri": "equationcmd-lvageplot", "anchor": "", "usage": "equation_name. lvageplot (options) variables @ name_suffix", "description": "Leverage plots.", "long_description": "Displays leverage plots to discover influential observations, or outliers.\nwhere name_suffix is an optional naming suffix for storing the statistics into series in the workfile."}, "makecoint": {"uri": "equationcmd-makecoint", "anchor": "", "usage": "equation_name. makecoint [series_name]", "description": "Create a series containing the estimated cointegrating relationship from an ARDL estimated equation.", "long_description": "This view is only available for non-panel equations estimated using the ARDL method."}, "makederivs": {"uri": "equationcmd-makederivs", "anchor": "", "usage": "equation_name. makederivs (options) [ser1 ser2 ...]", "description": "Make a group containing individual series which hold the derivatives of the equation specification.", "long_description": "If desired, enclose the name of a new group object to hold the series in parentheses following the command name.\nThe argument specifying the names of the series is also optional. If not provided, EViews will name the series \u201cDERIV##\u201d where ## is a number such that \u201cDERIV##\u201d is the next available unused name. If the names are provided, the number of names must match the number of target series.\nnames must match the number of target series."}, "makefunobj": {"uri": "equationcmd-makefunobj", "anchor": "", "usage": "eq_name. makefunobj (options) matrix_name", "description": "Export functional objects to matrices in the workfile.", "long_description": "For equations estimated using the functional coefficients method.\nwhere matrix_name is the name of the output matrix."}, "makegarch": {"uri": "equationcmd-makegarch", "anchor": "", "usage": "eq_name. makegarch series1_name [ @ series2_name]", "description": "Generate conditional variance series.", "long_description": "Saves the estimated conditional variance (from an equation estimated using ARCH) as a named series.\nYou should provide a name for the saved conditional standard deviation series following the makegarch keyword. If you do not provide a name, EViews will name the series using the next available name of the form \u201cGARCH##\u201d (if GARCH01 already exists, it will be named GARCH02 , and so on).\nFor component GARCH equations, the permanent component portion of the conditional variance may be saved by adding \u201c@\u201d followed by a series name."}, "makegrads": {"uri": "equationcmd-makegrads", "anchor": "", "usage": "equation_name. makegrads (options) [ser1 ser2 ...]", "description": "Make a group containing individual series which hold the gradients of the objective function.", "long_description": "The argument specifying the names of the series is also optional. If the argument is not provided, EViews will name the series \u201cGRAD##\u201d where ## is a number such that \u201cGRAD##\u201d is the next available unused name. If the names are provided, the number of names must match the number of target series."}, "makelimits": {"uri": "equationcmd-makelimits", "anchor": "", "usage": "eq_name. makelimits [vector_name]", "description": "Create vector of limit points from ordered models.", "long_description": "makelimits creates a vector of the estimated limit points from equations estimated by Equation::ordered .\nProvide a name for the vector after the makelimits keyword. If you do not provide a name, EViews will name the vector with the next available name of the form LIMITS## (if LIMITS01 already exists, it will be named LIMITS02 , and so on)."}, "makemodel": {"uri": "equationcmd-makemodel", "anchor": "", "usage": "equation_name. makemodel (name) assign_statement", "description": "Make a model from an equation object.", "long_description": "If you provide a name for the model in parentheses after the keyword, EViews will create the named model in the workfile. If you do not provide a name, EViews will open an untitled model window if the command is executed from the command line."}, "makeregs": {"uri": "equationcmd-makeregs", "anchor": "", "usage": "equation_name. makeregs grp_name", "description": "Make regressor group.", "long_description": "Creates a group containing the dependent and independent variables from an equation specification.\nFollow the keyword makeregs with the name of the group."}, "makeresids": {"uri": "equationcmd-makeresids", "anchor": "", "usage": "equation_name. makeresids (options) [res1]", "description": "Create residual series.", "long_description": "Creates and saves residuals in the workfile from an estimated equation object.\nFollow the equation name with a period and the makeresids keyword, then provide a name to be given to the stored residual."}, "makergmprobs": {"uri": "equationcmd-makergmprobs", "anchor": "", "usage": "equation_name. makergmprobs (options) series_names", "description": "Save the regime probabilities for switching regression equation into series in the workfile.", "long_description": "where equation_name is the name of an equation estimated using switching regression. The series to be saved should be listed following the command name and options, with one name per regime for one up to the number of estimated regimes."}, "makestrwgts": {"uri": "equationcmd-makestrwgts", "anchor": "", "usage": "eq_name. makestrwgts ( options ) name", "description": "Save a series containing the smooth transition weights for each observation in the estimation sample in a smooth threshold regression.", "long_description": "The command makes weight series in the workfile using name or the next available name using name as a basename."}, "maketransprobs": {"uri": "equationcmd-maketransprobs", "anchor": "", "usage": "equation_name. maketransprobs (options) [base_name]\nequation_name. maketransprobs ( out=mat , options) [matrix_name]", "description": "Save the regime transition probabilities and expected durations for a switching regression equation into the workfile.", "long_description": "where equation_name is the name of an equation estimated using switching regression.\n\u2022 In the first form of the command, base_name will be used to generate series names for the series that will hold the transition probabilities or durations. The series names for regime transition probabilities will be of the form base_name ##, where ## are the indices representing elements of the transition matrix [img:../content/images/equationcmd.105.093.1.jpg] . The series names for expected durations will be of the form base_name # where # corresponds to the regime index. Thus, in a two-regime model, the base name \u201cTEMP\u201d corresponds to the transition probability series TEMP11, TEMP12, TEMP21, TEMP22, and the expected duration series TEMP1, TEMP2.\nIf base_name is not provided, EViews will use the default of \u201cTPROB\u201d\n\u2022 When the option \u201coutput=mat\u201d is provided, the matrix_name is the name of the output matrix that will hold the transition probabilities or durations.\nIf matrix_name are not provided, EViews will default to \u201cTPROB\u201d or the next available name of the form \u201cTPROB##\u201d.\nEViews will evaluate the transition probabilities or durations at the date specified by the \u201cobs=\u201d option. If no observation is specified, EViews will use the first date of the estimation sample to evaluate the transition probabilities. Note that if the transition probabilities are time-invariant, setting the observation will have no effect on the contents of the saved results."}, "means": {"uri": "equationcmd-means", "anchor": "", "usage": "eq_name. means (options)", "description": "Descriptive statistics by category of dependent variable.", "long_description": "Computes and displays descriptive statistics of the explanatory variables (regressors) of an equation categorized by values of the dependent variable for binary and censored/truncated models"}, "midas": {"uri": "equationcmd-midas", "anchor": "", "usage": "eq_name. midas (options) y x1 [x2 x3 ...] @ z1page\\z1 [z2page\\z2 ...]", "description": "Estimates an equation using Mixed Data Sampling (MIDAS) regression.", "long_description": "MIDAS regression is an estimation technique which allows for data sampled at different frequencies to be used in the same regression.\nwhere y , x1 , etc., are the dependent and explanatory variables in the current page frequency, and z1page\\z1 and z2page\\z2 are the high frequency variable page\\series specification.\nYou may not include ARMA terms in a MIDAS regression."}, "multibreak": {"uri": "equationcmd-multibreak", "anchor": "", "usage": "equation_name. multibreak (options) [list_of_breaking_regressors]", "description": "Multiple breakpoint testing.", "long_description": "The multibreak view of an equation displays the results of multiple breakpoint testing using sequential and global optimization methods.\nThis view is only available for (non-panel) equations specified by list without ARMA terms and estimated by ordinary least squares.\nwhere equation_name is the name on an equation specified by list and estimated using least squares. The multibreak may be followed by options, and an optional list of breaking regressor names. If the latter list is omitted, the coefficients for all of the regressors in the original equation will be allowed to vary across regimes."}, "newsimpact": {"uri": "equationcmd-newsimpact", "anchor": "", "usage": "eq_name. newsimpact ( options )", "description": "Display a news-impact graph of equations estimated using GARCH."}, "nyblom": {"uri": "equationcmd-nyblom", "anchor": "", "usage": "eq_name. nyblom (options)", "description": "Perform the Nyblom test of parameter stability or structural change in equations estimated using GARCH."}, "olepush": {"uri": "equationcmd-olepush", "anchor": "", "usage": "equation_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "ordered": {"uri": "equationcmd-ordered", "anchor": "", "usage": "equation name. ordered (options) y x1 [x2 x3 ...]\nequation name. ordered (options) specification", "description": "Estimation of ordered dependent variable models.", "long_description": "The ordered command estimates the model and saves the results as an equation object with the given name."}, "orthogtest": {"uri": "equationcmd-orthogtest", "anchor": "", "usage": "eq_name. orthogtest (options) instruments", "description": "Performs the Instrument Orthogonality Test", "long_description": "The Orthogtest view of an equation carries out the Instrument Orthogonality / C-test Test for equations estimated via TSLS or GMM."}, "outliers": {"uri": "equationcmd-outliers", "anchor": "", "usage": "equation_name. outliers", "description": "Display the outliers summary view for an equation estimated via least squares with automatic outlier indicator saturation."}, "output": {"uri": "equationcmd-output", "anchor": "", "usage": "eq_name. output (options)", "description": "Display estimation output.", "long_description": "The output command changes the default object view to display the equation output (equivalent to using Equation::results )."}, "paths": {"uri": "equationcmd-paths", "anchor": "", "usage": "equation_name. paths", "description": "Display the auto-gets paths view."}, "pmghausmantest": {"uri": "equationcmd-pmghausmantest", "anchor": "", "usage": "equation_name. pmghausmantest ( options )", "description": "Displays a spool object with the results of the Hausman test for similarity against mean-group and dynamic fixed effects estimators in PMG estimation."}, "predict": {"uri": "equationcmd-predict", "anchor": "", "usage": "eq_name. predict (n, options)", "description": "Prediction table for binary and ordered dependent variable models.", "long_description": "The prediction table displays the actual and estimated frequencies of each distinct value of the discrete dependent variable.\nFor binary models, you may optionally specify how large the estimated probability must be to be considered a success ( [img:../content/images/equationcmd.105.106.1.jpg] ). Specify the cutoff level as the first option in parentheses after the keyword predict ."}, "probit": {"uri": "equationcmd-probit", "anchor": "", "description": "Estimation of binary dependent variable models with normal errors.", "long_description": "Equivalent to \u201c binary(d=n) \u201d.\nSee binary ."}, "qreg": {"uri": "equationcmd-qreg", "anchor": "", "usage": "eq_name. qreg (options) y x1 [x2 x3 ...]\neq_name. qreg (options) linear_specification", "description": "Estimate a quantile regression specification."}, "qrprocess": {"uri": "equationcmd-qrprocess", "anchor": "", "usage": "eq_name. qrprocess ( options ) [arg] [ @coefs coeflist]", "description": "Display quantile process coefficient estimates (multiple quantile regression estimates).", "long_description": "where arg is a optional list containing the quantile values (specified using numbers, scalar objects, or vectors) for which you wish to compute estimates, and optionally the @ coefs keyword followed by a coeflist of the subset of coefficients to display.\n\u2022 If arg is not specified, EViews will display results for the original equation along with coefficients for equations estimated at a set of equally spaced number of quantiles as specified by the \u201cn=\u201d option. If \u201cn=\u201d is not specified, the default is to display results for the deciles.\n\u2022 If arg is specified, EViews will display results for the original equation along with coefficients for equations estimated at the specified quantiles.\n\u2022 If a coeflist is not provided, results for all coefficients will be displayed. For models that contain an intercept, the coeflist may consist of the @incptonly keyword, indicating that only results for the intercept will be displayed.\nYou may specify a maximum of 1000 total coefficients (number of display coefficients times the number of quantiles) and a maximum of 500 quantiles.\nAll estimation will be performed using the settings from the original equation."}, "qrslope": {"uri": "equationcmd-qrslope", "anchor": "", "usage": "eq_name. qrslope ( options ) [arg] [ @coefs coeflist]", "description": "Perform Wald test of equality of slope coefficients across multiple quantile regression estimates. The equality test restrictions are of the form: [img:../content/images/equationcmd.105.110.1.jpg] for the slope coefficients [img:../content/images/equationcmd.105.110.2.jpg] .", "long_description": "where arg is a optional list containing the quantile values (specified using numbers, scalar objects, or vectors) for which you wish to compute estimates, and optionally the @ coefs keyword followed by a coeflist of the subset of coefficients to display.\n\u2022 If arg is not specified, EViews will perform tests for the existing equation and coefficients for equations estimated at a set of equally spaced quantiles as specified by the \u201cn=\u201d option. If \u201cn=\u201d is not specified, the default is to display results for the quartiles (.25, .75).\n\u2022 If arg is specified, EViews will perform results for the original equation along with tests including coefficients for equations estimated at the specified quantiles.\n\u2022 If a coeflist is not provided, all of the slope coefficients will be employed in the test.\nYou may specify a maximum of 1000 total coefficients (number of coefficients in the equation specification times the number of quantiles) and a maximum of 500 quantiles in the test.\nAll estimation will be performed using the settings from the original equation."}, "qrsymm": {"uri": "equationcmd-qrsymm", "anchor": "", "usage": "eq_name. qrsymm ( options ) [arg] [ @coefs coeflist]", "description": "Perform Wald test of coefficients using symmetric quantiles. The symmetric quantile test restrictions are of the form: [img:../content/images/equationcmd.105.111.1.jpg] .", "long_description": "where arg is a optional list containing the quantile values (specified using numbers, scalar objects, or vectors) for which you wish to compute estimates, and optionally the @ coefs keyword followed by a coeflist of the subset of coefficients to display.\n\u2022 If arg is not specified, EViews will perform one of two tests, depending on the original equation specification:\nIf the original specification is a median regression ( [img:../content/images/equationcmd.105.111.2.jpg] ), EViews will test using estimates obtained at the specified outer quantiles as specified by the \u201cn=\u201d option. If \u201cn=\u201d is not specified, the default is to display results for the outer quartiles {0.25, 0.75}.\nFor specifications estimated with [img:../content/images/equationcmd.105.111.3.jpg] , EViews will include the original quantile in the set of quantiles to test. You may specify \u201cn=e\u201d to perform a test using only estimates obtained at the symmetric pair { [img:../content/images/equationcmd.105.111.4.jpg] , [img:../content/images/equationcmd.105.111.5.jpg] }.\n\u2022 If arg is specified, EViews will perform the test using only the specified quantiles and their complements. The original equation quantile will not be tested unless it is entered explicitly.\n\u2022 If a coeflist is not provided, results for all coefficients will be displayed. For models that contain an intercept, the coeflist may consist of the @incptonly keyword, indicating that only results for the intercept will be displayed.\nYou may specify a maximum of 1000 total coefficients (number of coefficients in the equation specification times the number of quantiles) and a maximum of 500 quantiles in the test.\nAll estimation will be performed using the settings from the original equation. Note that the original equation must include an intercept for you to perform this test"}, "ranhaus": {"uri": "equationcmd-ranhaus", "anchor": "", "usage": "eq_name. ranhaus (options)", "description": "Test for correlation between random effects and regressors using Hausman test.", "long_description": "Tests the hypothesis that the random effects (components) are correlated with the right-hand side variables in a panel or pool equation setting. Uses Hausman test methodology to compare the results from the estimated random effects specification and a corresponding fixed effects specification. If the estimated specification involves two-way random effects, three separate tests will be performed; one for each set of effects, and one for the joint effects.\nOnly valid for panel or pool regression equations estimated with random effects. Note that the test results may be suspect in cases where robust standard errors are employed."}, "rcomptest": {"uri": "equationcmd-rcomptest", "anchor": "", "usage": "equation_name. rcomptest", "description": "Tests for the presence of cross-sectional or time random components in a panel equation. estimated using pooled least squares.", "long_description": "Computes the conventional LM (Breusch-Pagan, 1980, uniformly most powerful LM (Honda, 1985), standardized Honda (Moulton and Randolph, 1989; Baltagi, Chang, and Li, 1998), locally mean most powerful (LMMP) (King and Wu, 1997), Standardized King-Wu, and Gourieroux, Holly, and Monfort (1982) test statistics.\nNote that the equation must be estimated with pooled least squares for this test to be applied."}, "representations": {"uri": "equationcmd-representations", "anchor": "", "usage": "equation_name. representation (options)", "description": "Display text of specification for equation objects."}, "reset": {"uri": "equationcmd-reset", "anchor": "", "usage": "eq_name. reset (n, options)", "description": "Compute Ramsey\u2019s regression specification error test.", "long_description": "You must provide the number of powers of fitted terms n to include in the test regression."}, "resids": {"uri": "equationcmd-resids", "anchor": "", "usage": "equation_name. resids (options)", "description": "Display residuals.", "long_description": "The resids command allows you to display the actual, fitted values and residuals in either tabular or graphical form."}, "rgmprobs": {"uri": "equationcmd-rgmprobs", "anchor": "", "usage": "eq_name. rgmprobs (options) [indices]", "description": "Display regime probabilities for a switching regression equation.", "long_description": "where eq_name is the name of an equation estimated using switching regression. The elements to display are given by the optional indices corresponding to the regimes ( e.g. , \u201c1 2 3\u201d or \u201c2 3\u201d). If indices is not provided, results for all of the regimes will be displayed."}, "rls": {"uri": "equationcmd-rls", "anchor": "", "usage": "eq_name. rls (options) c(1) c(2) \u2026", "description": "Recursive least squares regression.", "long_description": "The rls view of an equation displays the results of recursive least squares (rolling) regression. This view is only available for (non-panel) equations estimated by ordinary least squares without ARMA terms.\nYou may plot various statistics from rls by choosing an option."}, "robustls": {"uri": "equationcmd-robustls", "anchor": "", "description": "Estimates an equation using robust least squares.", "long_description": "You may perform three different types of robust estimation: M-estimation, S-estimation and MM-estimation."}, "setattr": {"uri": "equationcmd-setattr", "anchor": "", "usage": "equation_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "setpilotbw": {"uri": "equationcmd-setpilotbw", "anchor": "", "usage": "eq_name. setpilotbw (options)", "description": "Set or clear the local pilot bandwidth. Once set, the cached value may be used in all post-estimation routines that require a pilot bandwidth.", "long_description": "For equations estimated using the functional coefficients method."}, "signbias": {"uri": "equationcmd-signbias", "anchor": "", "usage": "eq_name. signbias ( options )", "description": "Perform the sign-bias test ( En gle and Ng, 1993) of misspecification in equations estimated using GARCH."}, "srcoefs": {"uri": "equationcmd-srcoefs", "anchor": "", "usage": "eq_name. srcoefs", "description": "Displays a spool object with the results of error-correction regressions for each cross-section in PMG estimation."}, "strconstant": {"uri": "equationcmd-strconstant", "anchor": "", "usage": "eq_name. strconstant ( options )", "description": "Compute tests of parameter constancy of the base specification against a smooth transition alternative in a smooth threshold regression."}, "strlinear": {"uri": "equationcmd-strlinear", "anchor": "", "usage": "eq_name. strlinear ( options )", "description": "Compute tests for linearity of the base specification against the smooth threshold alternative in a smooth threshold regression."}, "strnonlin": {"uri": "equationcmd-strnonlin", "anchor": "", "usage": "eq_name. strnonlin ( options )", "description": "Compute tests for additional nonlinearity against additive or encapsulated alternatives (for equations in a smooth threshold regression)."}, "strwgts": {"uri": "equationcmd-strwgts", "anchor": "", "usage": "eq_name. strwgts ( options )", "description": "Compute and display the transition weights in a smooth threshold regression.", "long_description": "The default display shows a graph of the transition function. You may also display the weights for each observation in the estimation sample."}, "switchreg": {"uri": "equationcmd-switchreg", "anchor": "", "usage": "eq_name. switchreg ( options ) dependent_var list_of_varying_regressors [ @nv list_of_nonvarying_regressors ] [ @prv list_of_probability_regressors ]", "description": "Estimate a switching regression model (simple exogenous or Markov).", "long_description": "List the switchreg keyword, followed by options, then the dependent variable and a list of the regressors with regime-varying coefficients, following optionally by the keyword @nv and a list of regressors with regime-invariant coefficients, and by the keyword @prv and a list of regressors that enter into the transition probability specification.\nThe dependent variable in switchreg may not be an expression. Dynamics may be specified by including lags of the dependent variable as regressors, or by specifying AR errors using the AR keyword. The latter incorporate mean adjusted lags of the form specified by the \u201cHamilton-model.\u201d"}, "symmtest": {"uri": "equationcmd-symmtest", "anchor": "", "usage": "eq_name. symmtest ( options )", "description": "Compute symmetry test for distributed lag variables in an equation estimated with a nonlinear ARDL (NARDL) specification.", "long_description": "This view displays a table object with the NARDL symmetry test. The top part of the table is a is a summary of the test. This is followed by three additional sections with test statistics and corresponding p -values for relevant regressors tests for: 1) long-run asymmetry, 2) short-run asymmetry, 3) both long and short-run asymmetry."}, "testadd": {"uri": "equationcmd-testadd", "anchor": "", "usage": "eq_name. testadd (options) arg1 [arg2 arg3 ...]\neq_name. testadd (options) arg1 [arg2 arg3 ...] [ @nv x1 x2 x3 ...]", "description": "Test whether to add regressors to an estimated equation.", "long_description": "Tests the hypothesis that the listed variables were incorrectly omitted from an estimated equation (only available for equations estimated by list). The test displays some combination of Wald and LR test statistics, as well as the auxiliary regression.\nList the names of the series or groups of series to test for omission after the keyword.\nFor equations estimated using breakls , there are two types of added series, those with coefficients that break, and those with coefficients that are non-breaking. The former should be listed before, and the latter should be listed after the optional @nv keyword."}, "testdrop": {"uri": "equationcmd-testdrop", "anchor": "", "usage": "eq_name. testdrop (options) arg1 [arg2 arg3 ...]", "description": "Test whether to drop regressors from a regression.", "long_description": "Tests the hypothesis that the listed variables were incorrectly included in the estimated equation (only available for equations estimated by list). The test displays some combination of [img:../content/images/equationcmd.105.133.1.jpg] and LR test statistics, as well as the test regression.\nList the names of the series or groups of series to test for omission after the keyword."}, "testfit": {"uri": "equationcmd-testfit", "anchor": "", "usage": "binary_equation. testfit (options)", "description": "Carry out the Hosmer-Lemeshow and/or Andrews goodness-of-fit tests for estimated binary models."}, "threshold": {"uri": "equationcmd-threshold", "anchor": "", "usage": "eq_name. threshold (options) y z1 [z2 z3 ...] [ @nv x1 x2 x3 ...] @thresh t1 [t2 t3 ...]", "description": "Estimation by discrete or smooth threshold least squares, including threshold autoregression.", "long_description": "List the dependent variable first, followed by a list of the independent variables that have coefficients that are allowed to vary across threshold, followed optionally by the keyword @nv and a list of non-varying coefficient variables.\nList a threshold variable or variables (for model selection) or a single integer or range pairs after the keyword @thresh . The integer or range pairs indicate a self-exciting model with the lagged dependent variable as the threshold variable.\nFor smooth threshold equations you may specify variables that are to be included only in the base specification or only in the alternative specification. Base-only variables should be specified in parentheses using the @base key, as in \u201c@base(x1) @base(x2) @base(x3 x4)\u201d. Alternative-only variables may be specified analogously using the @alt key."}, "transprobs": {"uri": "equationcmd-transprobs", "anchor": "", "usage": "equation_name. transprobs (options)", "description": "Display regime transition probabilities and expected durations for a switching regression equation.", "long_description": "where equation_name is the name of an equation estimated using switching regression."}, "tsls": {"uri": "equationcmd-tsls", "anchor": "", "usage": "eq_name. tsls (options) y x1 [x2 x3 ...] @ z1 [z2 z3 ...]\neq_name. tsls (options) specification @ z1 [z2 z3 ...]", "description": "Two-stage least squares.", "long_description": "Carries out estimation for equations using two-stage least squares.\nTo use the tsls command, list the dependent variable first, followed by the regressors, then any AR or MA error specifications, then an \u201c@\u201d-sign, and finally, a list of exogenous instruments. You may estimate nonlinear equations or equations specified with formulas by first providing a specification, then listing the instrumental variables after an \u201c@\u201d-sign.\nThere must be at least as many instrumental variables as there are independent variables. All exogenous variables included in the regressor list should also be included in the instrument list. A constant is included in the list of instrumental variables even if not explicitly specified."}, "tterrorgraph": {"uri": "equationcmd-tterrorgraph", "anchor": "", "usage": "eq_name. tterrorgraph ( options )", "description": "Display graph of lambda versus the training and test errors for elastic net, ridge, and Lasso models."}, "ubreak": {"uri": "equationcmd-ubreak", "anchor": "", "usage": "eq_name. ubreak (options) trimlevel @ x1 x2 x3", "description": "Andrews-Quandt test for unknown breakpoint.", "long_description": "Carries out the Andrews-Quandt test for parameter stability at some unknown breakpoint.\nYou must provide the level of trimming of the data. The level must be one of the following: 49, 48, 47, 45, 40, 35, 30, 25, 20, 15, 10, or 5. If the equation is specified by list and contains no nonlinear terms, you may specify a subset of the regressors to be tested for a breakpoint after an \u201c@\u201d sign."}, "updatecoefs": {"uri": "equationcmd-updatecoefs", "anchor": "", "usage": "equation_name. updatecoef", "description": "Update coefficient object values from an equation object.", "long_description": "Copies coefficients from the equation object into the appropriate coefficient vector or vectors.\nFollow the name of the equation object with a period and the keyword updatecoef ."}, "varinf": {"uri": "equationcmd-varinf", "anchor": "", "usage": "eq_name. varinf", "description": "Variance Inflation Factor (VIF).", "long_description": "Display the Variance Inflation Factors (VIFs). VIFs are a method of measuring the level of collinearity between the regressors in an equation."}, "varsel": {"uri": "equationcmd-varsel", "anchor": "", "usage": "eq_name. varsel (options) y x1 [x2 x3 ...] @ z1 z2 z3", "description": "Estimation using variable selection.", "long_description": "Specify the dependent variable followed by a list of variables to be included in the regression, but not part of the search routine, followed by an \u201c@\u201d symbol and a list of variables to be part of the search routine. If no included variables are required, simply follow the dependent variable with an \u201c@\u201d symbol and the list of search variables."}, "wald": {"uri": "equationcmd-wald", "anchor": "", "usage": "equation_name. wald restrictions", "description": "Wald coefficient restriction test.", "long_description": "The wald view carries out a Wald test of coefficient restrictions for an equation object.\nEnter the equation name, followed by a period, and the keyword. You must provide a list of the coefficient restrictions, with joint (multiple) coefficient restrictions separated by commas."}, "weakinst": {"uri": "equationcmd-weakinst", "anchor": "", "usage": "eq_name. weakinst", "description": "Displays the Weak Instruments Summary", "long_description": "The weakinst view of an equation displays the Weak Instrument Summary for equations estimated by TSLS, GMM or LIML. The summary includes both the Cragg-Donald test and Moment Selection Criteria (for TSLS and GMM only)."}, "white": {"uri": "equationcmd-white", "anchor": "", "usage": "eq_name. white @comp\neq_name. white (options)", "description": "Performs White\u2019s test for heteroskedasticity of residuals.", "long_description": "Carries out White\u2019s test for heteroskedasticity of the residuals of the specified equation. By default, the test is computed without the cross-product terms (using only the terms involving the original variables and squares of the original variables). You may elect to compute the original form of the White test that includes the cross-products.\nWhite\u2019s test is not available for equations estimated by binary , ordered , censored , or count .\nNote that a more general version of the White test is available using Equation::hettest . We also note that for equations estimated without a constant term, version 6 of the White command will, by default, generate results that differ from version 5. You may obtain version 5 compatible results by adding the @ comp keyword to white as in:"}}, "Factor": {"[Factor]": {"uri": "factorcmd-Factor", "anchor": "", "description": "Factor analysis object."}, "@agfi": {"uri": "factorcmd-Factor", "anchor": "ww2021212", "usage": "@agfi", "description": "[(0)] J\u00f6reskog and S\u00f6rbom Adjusted Generalized Fit Index."}, "@aic": {"uri": "factorcmd-Factor", "anchor": "ww2023553", "usage": "@aic", "description": "[(0] Akaike Information Criterion."}, "@anticov": {"uri": "factorcmd-Factor", "anchor": "ww2021228", "usage": "@anticov", "description": "Anti-image covariance matrix."}, "@attr": {"uri": "factorcmd-Factor", "anchor": "ww2085026", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@balanced": {"uri": "factorcmd-Factor", "anchor": "ww2021186", "usage": "@balanced", "description": "(0, 1) indicator for whether the covariance matrix uses a balanced sample (1=balanced)."}, "@bartlett": {"uri": "factorcmd-Factor", "anchor": "ww2021207", "usage": "@bartlett", "description": "[(0)] Bartlett\u2019s adjusted version of the Chi-square test statistic."}, "@bartlettprob": {"uri": "factorcmd-Factor", "anchor": "ww2021208", "usage": "@bartlettprob", "description": "[(0)] p -value for Bartlett\u2019s adjusted version of the chi-square statistic."}, "@cfi": {"uri": "factorcmd-Factor", "anchor": "ww2021193", "usage": "@cfi", "description": "Bentlers Comparative Fit Index."}, "@chisq": {"uri": "factorcmd-Factor", "anchor": "ww2021204", "usage": "@chisq", "description": "[(0)] Chi-square test statistic for model adequacy."}, "@chisqdf": {"uri": "factorcmd-Factor", "anchor": "ww2021205", "usage": "@chisqdf", "description": "[(0)] Degrees of freedom for the chi-square statistic."}, "@chisqprob": {"uri": "factorcmd-Factor", "anchor": "ww2021206", "usage": "@chisqprob", "description": "[(0)] p -value for the chi-square statistic"}, "@command": {"uri": "factorcmd-Factor", "anchor": "ww2042828", "usage": "@command", "description": "full command line form of the Factor estimation command. Note this is a combination of @method , @options , and @spec ."}, "@common": {"uri": "factorcmd-Factor", "anchor": "ww2021222", "usage": "@common", "description": "common variance fitted covariance matrix (fitted matrix with communality on the diagonal)."}, "@communal": {"uri": "factorcmd-Factor", "anchor": "ww2021233", "usage": "@communal", "description": "vector of final communality estimates."}, "@description": {"uri": "factorcmd-Factor", "anchor": "ww2072574", "usage": "@description", "description": "string containing the Factor object\u2019s description (if available)."}, "@detailedtype": {"uri": "factorcmd-Factor", "anchor": "ww2072566", "usage": "@detailedtype", "description": "returns a string with the object type: \u201cFACTOR\u201d."}, "@displayname": {"uri": "factorcmd-Factor", "anchor": "ww2042829", "usage": "@displayname", "description": "returns the Factor object\u2019s display name. If the Factor object has no display name set, the name is returned."}, "@ecvi": {"uri": "factorcmd-Factor", "anchor": "ww2021203", "usage": "@ecvi", "description": "[(0)] Expected Cross-validation Index."}, "@factcor": {"uri": "factorcmd-Factor", "anchor": "ww2021239", "usage": "@factcor", "description": "factor correlation matrix."}, "@factnames": {"uri": "factorcmd-Factor", "anchor": "ww2042830", "usage": "@factnames", "description": "factor names."}, "@factstruct": {"uri": "factorcmd-Factor", "anchor": "ww2021240", "usage": "@factstruct", "description": "factor structure matrix (correlation between factors and the variables)."}, "@fitted": {"uri": "factorcmd-Factor", "anchor": "ww2021221", "usage": "@fitted", "description": "fitted covariance matrix."}, "@gammahat": {"uri": "factorcmd-Factor", "anchor": "ww2021214", "usage": "@gammahat", "description": "[(0)] Gamma hat non-centrality."}, "@gfi": {"uri": "factorcmd-Factor", "anchor": "ww2021211", "usage": "@gfi", "description": "[(0)] J\u00f6reskog and S\u00f6rbom Generalized Fit Index."}, "@hq": {"uri": "factorcmd-Factor", "anchor": "ww2021202", "usage": "@hq", "description": "[(0)] Hannan-Quinn Information Criterion."}, "@icommunal": {"uri": "factorcmd-Factor", "anchor": "ww2021232", "usage": "@icommunal", "description": "vector initial communality estimates."}, "@ifi": {"uri": "factorcmd-Factor", "anchor": "ww2021192", "usage": "@ifi", "description": "Bollen\u2019s Incremental Fit Index."}, "@ireduced": {"uri": "factorcmd-Factor", "anchor": "ww2021227", "usage": "@ireduced", "description": "reduced covariance matrix using initial uniqueness estimates."}, "@iunique": {"uri": "factorcmd-Factor", "anchor": "ww2021230", "usage": "@iunique", "description": "vector of initial uniqueness estimates."}, "@loadings": {"uri": "factorcmd-Factor", "anchor": "ww2021235", "usage": "@loadings", "description": "estimated loadings matrix."}, "@mdnoncent": {"uri": "factorcmd-Factor", "anchor": "ww2021215", "usage": "@mdnoncent", "description": "[(0)] McDonald non-centrality."}, "@method": {"uri": "factorcmd-Factor", "anchor": "ww2042831", "usage": "@method", "description": "command line form of the Factor estimation method type."}, "@name": {"uri": "factorcmd-Factor", "anchor": "ww2042832", "usage": "@name", "description": "returns the Factor object\u2019s name."}, "@ncoefs": {"uri": "factorcmd-Factor", "anchor": "ww2021196", "usage": "@ncoefs", "description": "[(0)] same as @parms ."}, "@ncondition": {"uri": "factorcmd-Factor", "anchor": "ww2021187", "usage": "@ncondition", "description": "number of conditioning variables (including the constant term for centered covariances)."}, "@nfactors": {"uri": "factorcmd-Factor", "anchor": "ww2021184", "usage": "@nfactors", "description": "number of retained factors."}, "@nfi": {"uri": "factorcmd-Factor", "anchor": "ww2021191", "usage": "@nfi", "description": "Bentler-Bonnet\u2019s Incremental Fit Index."}, "@nnfi": {"uri": "factorcmd-Factor", "anchor": "ww2021189", "usage": "@nnfi", "description": "Non-normed Fit Index (generalized Tucker-Lewis index)."}, "@noncent": {"uri": "factorcmd-Factor", "anchor": "ww2021213", "usage": "@noncent", "description": "[(0)] Noncentrality parameter."}, "@nvars": {"uri": "factorcmd-Factor", "anchor": "ww2021183", "usage": "@nvars", "description": "number of variables to analyze."}, "@objective": {"uri": "factorcmd-Factor", "anchor": "ww2021197", "usage": "@objective", "description": "[(0)] value of the objective function in factor extraction."}, "@obs": {"uri": "factorcmd-Factor", "anchor": "ww2021185", "usage": "@obs", "description": "number of observations."}, "@obsmat": {"uri": "factorcmd-Factor", "anchor": "ww2021218", "usage": "@obsmat", "description": "matrix of number of observations used for each pair of variables."}, "@options": {"uri": "factorcmd-Factor", "anchor": "ww2042833", "usage": "@options", "description": "command line form of estimation options."}, "@partcor": {"uri": "factorcmd-Factor", "anchor": "ww2021229", "usage": "@partcor", "description": "partial correlation matrix."}, "@pratio": {"uri": "factorcmd-Factor", "anchor": "ww2021188", "usage": "@pratio", "description": "parsimony ratio."}, "@reduced": {"uri": "factorcmd-Factor", "anchor": "ww2021226", "usage": "@reduced", "description": "reduced covariance matrix using final uniqueness estimates."}, "@remarks": {"uri": "factorcmd-Factor", "anchor": "", "description": "Factor analysis object."}, "@resid": {"uri": "factorcmd-Factor", "anchor": "ww2021224", "usage": "@resid", "description": "residual matrix (observed\u2013fitted)."}, "@residcommon": {"uri": "factorcmd-Factor", "anchor": "ww2021225", "usage": "@residcommon", "description": "residual matrix using common variance."}, "@rfi": {"uri": "factorcmd-Factor", "anchor": "ww2021190", "usage": "@rfi", "description": "Bollen\u2019s Relative Fit Index."}, "@rloadings": {"uri": "factorcmd-Factor", "anchor": "ww2021236", "usage": "@rloadings", "description": "rotated loadings matrix."}, "@rmsea": {"uri": "factorcmd-Factor", "anchor": "ww2021216", "usage": "@rmsea", "description": "[(0)] Root MSE approximation."}, "@rmsr": {"uri": "factorcmd-Factor", "anchor": "ww2021209", "usage": "@rmsr", "description": "[(0)] Root mean square residuals."}, "@rotmat": {"uri": "factorcmd-Factor", "anchor": "ww2021237", "usage": "@rotmat", "description": "factor rotation matrix: [img:../content/images/factorcmd.106.01.1.jpg] ."}, "@rotmatinv": {"uri": "factorcmd-Factor", "anchor": "ww2021238", "usage": "@rotmatinv", "description": "loadings rotation matrix: [img:../content/images/factorcmd.106.01.2.jpg] ."}, "@rowadjust": {"uri": "factorcmd-Factor", "anchor": "ww2021234", "usage": "@rowadjust", "description": "vector of row standardization terms (used to rescale results so that the uniqueness and communality estimates add up to the observed diagonals)."}, "@sc": {"uri": "factorcmd-Factor", "anchor": "ww2023554", "usage": "@sc", "description": "[(0)] Schwarz Information Criterion."}, "@scaled": {"uri": "factorcmd-Factor", "anchor": "ww2021220", "usage": "@scaled", "description": "scaled covariance matrix."}, "@smpl": {"uri": "factorcmd-Factor", "anchor": "ww2042834", "usage": "@smpl", "description": "sample used for estimation."}, "@spec": {"uri": "factorcmd-Factor", "anchor": "ww2042835", "usage": "@spec", "description": "original factor specification."}, "@srmsr": {"uri": "factorcmd-Factor", "anchor": "ww2021210", "usage": "@srmsr", "description": "[(0)] Standardized root mean square residuals."}, "@type": {"uri": "factorcmd-Factor", "anchor": "ww2042836", "usage": "@type", "description": "returns a string with the object type: \u201cFACTOR\u201d."}, "@unique": {"uri": "factorcmd-Factor", "anchor": "ww2021231", "usage": "@unique", "description": "vector of final uniqueness estimates."}, "@updatetime": {"uri": "factorcmd-Factor", "anchor": "ww2042838", "usage": "@updatetime", "description": "returns a string representation of the time and date at which the Factor was last updated."}, "@valid": {"uri": "factorcmd-Factor", "anchor": "ww2042824", "usage": "@valid", "description": "(0, 1) indicator for whether the factor object has valid factor estimates (1=true)."}, "@varnames": {"uri": "factorcmd-Factor", "anchor": "ww2042839", "usage": "@varnames", "description": "variable names."}, "anticov": {"uri": "factorcmd-anticov", "anchor": "", "usage": "factor_name. anticov (options)", "description": "Display the anti-image covariance matrix based on the observed covariance matrix", "long_description": "The anti-image covariance is obtained by taking the inverse of the covariance matrix, and row and column scaling by the diagonals of the inverse.\nThe diagonal elements of the matrix are equal to 1 minus the squared multiple correlations (SMCs). The off-diagonal elements of the anti-image covariance are equal to the negative of the partial covariances multiplied by [img:../content/images/factorcmd.106.02.1.jpg] , where [img:../content/images/factorcmd.106.02.2.jpg] are the remaining variables."}, "clearhist": {"uri": "factorcmd-clearhist", "anchor": "", "usage": "factor_name. clearhist", "description": "Clear the contents of the history attribute.", "long_description": "Removes the factor\u2019s history attribute, as shown in the label view of the factor."}, "clearremarks": {"uri": "factorcmd-clearremarks", "anchor": "", "usage": "factor_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the factor\u2019s remarks attribute, as shown in the label view of the factor."}, "copy": {"uri": "factorcmd-copy", "anchor": "", "usage": "factor_name. copy\nfactor_name. copy dest_name", "description": "Creates a copy of the factor.", "long_description": "Creates either a named or unnamed copy of the factor."}, "display": {"uri": "factorcmd-display", "anchor": "", "usage": "factor_name. display object_name", "description": "Display table, graph, or spool output in the factor object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the factor object."}, "displayname": {"uri": "factorcmd-displayname", "anchor": "", "usage": "factor_name. displayname display_name", "description": "Set display name for factor object.", "long_description": "Attaches a display name to a factor object which may be used to label output in place of the standard factor object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in object names."}, "eigen": {"uri": "factorcmd-eigen", "anchor": "", "usage": "factor_name. eigen (options)", "description": "Display table or graph of eigenvalues of observed, scaled observed, or reduced covariance matrix.", "long_description": "By default, eigen will display a table of eigenvalues for the specified source matrix. You may add the option keywords \u201ceigvec\u201d and \u201cmatrix\u201d to include additional output.\nTo display a graph of the results, you should some combination of the \u201cscree\u201d, \u201cdiff\u201d and \u201ccproport\u201d option keywords."}, "factnames": {"uri": "factorcmd-factnames", "anchor": "", "usage": "factor_name. factnames [name1 ...]", "description": "Specify names for the unobserved factors.", "long_description": "Assign names to the unobserved factors in an estimated factor object. These names will subsequently be used in table and graphical output.\nYou should follow the keyword with a list of names for the factors. You may clear an existing set of factnames by using the factnames keyword with an empty list of factors."}, "fitstats": {"uri": "factorcmd-fitstats", "anchor": "", "usage": "factor_name. fitstats", "description": "Display Goodness-of-fit statistics for an estimated factor analysis object."}, "fitted": {"uri": "factorcmd-fitted", "anchor": "", "usage": "factor_name. fitted (options)", "description": "Display fitted and common covariances from a factor analysis object."}, "fsel": {"uri": "factorcmd-fsel", "anchor": "", "usage": "factor_name. fsel", "description": "Display results of Bai and Ng or Ahn and Horenstein factor selection techniques.", "long_description": "Only relevant for factor models estimated using the \u201cn=bn\u201d or \u201cn=ah\u201d methods for determining the number of factors to retain."}, "gls": {"uri": "factorcmd-gls", "anchor": "", "usage": "factor_name. gls (options) x1 [x2 x3...] [ @partial z1 z2 z3...]\nfactor_name. gls (options) matrix_name [[obs] [conditioning]] [ @ name1 name2 name3...]", "description": "Generalized least squares estimation of the factor model.", "long_description": "The first method computes the observed dispersion matrix from a set of series or group objects. Simply append a period and the gls keyword to the name of your object, followed by the names of your series and groups, You may optionally use the keyword @partial and append a list of conditioning series.\nIn the second method you will provide the name of the observed dispersion matrix, and optionally, the number of observations and the rank of the set of conditioning variables. If the latter is not provided, it will be set to 1 (representing the constant in the standard centered variance calculations). You may also provide names for the columns of the correlation matrix by entering the @-sign followed by a list of valid series names."}, "ipf": {"uri": "factorcmd-ipf", "anchor": "", "usage": "factor_name. ipf (options) x1 [x2 x3...] [ @partial z1 z2 z3...]\nfactor_name. ipf (options) matrix_name [[obs] [conditioning]] [@ name1 name2 name3...]", "description": "Iterated principal factors estimation of the factor model.", "long_description": "The first method computes the observed dispersion matrix from a set of series or group objects. Simply append a period and the ipf keyword to the name of your object, followed by the names of your series and groups, You may optionally use the keyword @partial and append a list of conditioning series.\nIn the second method you will provide the name of the observed dispersion matrix, and optionally, the number of observations and the rank of the set of conditioning variables. If the latter is not provided, it will be set to 1 (representing the constant in the standard centered variance calculations). You may also provide names for the columns of the correlation matrix by entering the @-sign followed by a list of valid series names."}, "label": {"uri": "factorcmd-label", "anchor": "", "usage": "factor_name. label\nfactor_name. label (options) [text]", "description": "Display or change the label view of the factor object."}, "loadings": {"uri": "factorcmd-loadings", "anchor": "", "usage": "factor_name. loadings (options)\nfactor_name. loadings ( graph , options) [graph_list]", "description": "Display factor loadings tables or graphs.", "long_description": "where the [graph_list] is an optional list of integers and/or vectors containing integers identifying the factors to plot. If graph_list is not provided, EViews will construct graphs using all of the retained factors.\nMultiple pairs are handled using the method specified in the \u201cmult=\u201d option. Note that the order of elements in the list matters; reversing the order of two indices reverses the axis on which each factor is displayed."}, "makescores": {"uri": "factorcmd-makescores", "anchor": "", "usage": "factor_name. makescores (options) [output_list] [@ observed_list]", "description": "Save estimated factor score series in the workfile", "long_description": "The optional output_list describes the factors that you wish to save. There are two formats for the list:\n\u2022 You may specify output_list using a list of integers and/or vectors containing integers identifying the factors that you wish to save ( e.g. , \u201c1 2 3 5\u201d).\nEViews will construct the output series names using the factor names previously specified in the factor object (using Factor::factnames ) or using the default names \u201cF1\u201d, \u201cF2\u201d, etc . If a name modifier is provided (using the \u201cappend=\u201d option), it will be appended to each name\n\u2022 You may provide an output_list containing names for factors to be saved ( e.g. , \u201cmath science verbal\u201d).\nIf you provide [img:../content/images/factorcmd.106.18.1.jpg] factor names, EViews will save the first [img:../content/images/factorcmd.106.18.2.jpg] factors to the workfile. The factors will be named using the specified list, appended with the name modifiers, if specified.\nBy default, EViews will save all of the factors using the names in the factor object, with modifiers if necessary.\nThe optional observed_list of observed input variables will be multiplied by the score coefficients to compute the scores. Note that:\n\u2022 If an observed_list is not provided, EViews will use the observed variables from factor estimation. For user-specified factor models (specified by providing a symmetric matrix) you must provide a list if you wish to obtain score values.\n\u2022 Scores values will be computed for the current workfile sample. Observations with input values that are missing will generate NAs."}, "maxcor": {"uri": "factorcmd-maxcor", "anchor": "", "usage": "factor_name. maxcor (options)", "description": "Display the maximum absolute correlations for each column of the observed covariance matrix.", "long_description": "The table also displays the observed covariance matrix."}, "ml": {"uri": "factorcmd-ml", "anchor": "", "usage": "factor_name. ml (options) x1 [x2 x3...] [ @partial z1 z2 z3...]\nfactor_name. ml (options) matrix_name [[obs] [conditioning]] [ @ name1 name2 name3...]", "description": "Maximum likelihood estimation of the factor model.", "long_description": "The first method computes the observed dispersion matrix from a set of series or group objects. Simply append a period and the ml keyword to the name of your object, followed by the names of your series and groups, You may optionally use the keyword @partial and append a list of conditioning series.\nIn the second method you will provide the name of the observed dispersion matrix, and optionally, the number of observations and the rank of the set of conditioning variables. If the latter is not provided, it will be set to 1 (representing the constant in the standard centered variance calculations). You may also provide names for the columns of the correlation matrix by entering the @-sign followed by a list of valid series names."}, "msa": {"uri": "factorcmd-msa", "anchor": "", "usage": "factor_name. msa (options)", "description": "Display Kaiser\u2019s Measure of Sampling Adequacy and matrix of partial correlations."}, "observed": {"uri": "factorcmd-observed", "anchor": "", "usage": "factor_name. observed (options)", "description": "Display observed covariance matrix, scaled observed covariance (correlation), or matrix of number of observations."}, "olepush": {"uri": "factorcmd-olepush", "anchor": "", "usage": "factor_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "output": {"uri": "factorcmd-output", "anchor": "", "usage": "factor_name. output (options)", "description": "Display factor estimation output."}, "pace": {"uri": "factorcmd-pace", "anchor": "", "usage": "factor_name. pace (options) x1 [x2 x3...] [ @partial z1 z2 z3...]\nfactor_name. pace (options) matrix_name [[obs] [conditioning]] [ @ name1 name2 name3...]", "description": "Non-iterative partitioned covariance estimation of the factor model", "long_description": "The first method computes the observed dispersion matrix from a set of series or group objects. Simply append a period and the pace keyword to the name of your object, followed by the names of your series and groups, You may optionally use the keyword @partial and append a list of conditioning series.\nIn the second method you will provide the name of the observed dispersion matrix, and optionally, the number of observations and the rank of the set of conditioning variables. If the latter is not provided, it will be set to 1 (representing the constant in the standard centered variance calculations). You may also provide names for the columns of the correlation matrix by entering the @-sign followed by a list of valid series names."}, "partcor": {"uri": "factorcmd-partcor", "anchor": "", "usage": "factor_name. partcor (options)", "description": "Display the partial correlation matrix derived from the observed covariance matrix.", "long_description": "The elements of the partial correlation matrix are the pairwise correlations conditional on the other variables.\nThe partial correlation matrix is computed by scaling the anti-image covariance to unit diagonal (or equivalently, by row and column scaling the inverse of the observed matrix by the square roots of its diagonals)."}, "pf": {"uri": "factorcmd-pf", "anchor": "", "usage": "factor_name. pf (options) x1 [x2 x3...] [ @partial z1 z2 z3...]\nfactor_name. pf (options) matrix_name [[obs] [conditioning]] [ @ name1 name2 name3...]", "description": "Principal factors estimation of the factor model.", "long_description": "The first method computes the observed dispersion matrix from a set of series or group objects. Simply append a period and the pf keyword to the name of your object, followed by the names of your series and groups, You may optionally use the keyword @partial and append a list of conditioning series.\nIn the second method you will provide the name of the observed dispersion matrix, and optionally, the number of observations and the rank of the set of conditioning variables. If the latter is not provided, it will be set to 1 (representing the constant in the standard centered variance calculations). You may also provide names for the columns of the correlation matrix by entering the @-sign followed by a list of valid series names."}, "reduced": {"uri": "factorcmd-reduced", "anchor": "", "usage": "factor_name. reduced (options)", "description": "Display reduced covariance matrix for the estimated factor analysis object.", "long_description": "By default, the reduced covariance is computed by subtracting the final uniqueness estimates from the observed covariance matrix. You may use the \u201cinitial\u201d option to evaluate the reduced matrix using the initial uniqueness estimates."}, "resids": {"uri": "factorcmd-resids", "anchor": "", "usage": "factor_name. resids (options)", "description": "Display residual covariance estimates for the factor analysis object.", "long_description": "By default, the residuals are computed by subtracting the estimate of the common variance and the final uniqueness estimates from the observed covariance matrix. You may use the \u201ccommon\u201d option to only subtract the common variance."}, "rotate": {"uri": "factorcmd-rotate", "anchor": "", "usage": "factor_name. rotate ( options)", "description": "Perform an orthogonal or oblique factor rotation of the loadings of an estimated factor object.", "long_description": "You may use the \u201ctype=\u201d and \u201cmethod=\u201d options to select from a variety of rotations methods."}, "rotateclear": {"uri": "factorcmd-rotateclear", "anchor": "", "usage": "factor_name. rotateclear", "description": "Clear existing rotation.", "long_description": "Clears any existing factor rotations."}, "rotateout": {"uri": "factorcmd-rotateout", "anchor": "", "usage": "factor_name. rotateout", "description": "Display rotated factors and other results of factor rotation estimation."}, "scores": {"uri": "factorcmd-scores", "anchor": "", "usage": "factor_name. scores ( options) [observed_list]\nfactor_name. scores ( options) [graph_list] [@ observed_list]", "description": "Compute factor score coefficients and scores and display results in table, sheet, or graph form.", "long_description": "There are two forms of the scores command. The first form of the command, which applies when displaying table results or spreadsheet displays of scores is given by:\nThe optional observed_list of observed input variables will be multiplied by the score coefficients to compute the scores.\nThe second form of the command applies when plotting scores. In this case, the syntax is:\nwhere the [graph_list] is an optional list of integers and/or vectors containing integers identifying the factors to plot. If graph_list is not provided, EViews will construct graphs using all of the retained factors.\nMultiple pairs are handled using the method specified in the \u201cmult=\u201d option. Note that the order of elements in the list matters; reversing the order of two indices reverses the axis on which each factor is displayed.\nYou should also bear in mind that:\n\u2022 Specification of the observed_list is required only for actually computing score values\u2014it is not required for computing score coefficient summaries and diagnostics (\u201cout=table\u201d).\n\u2022 If observed_list is not provided, EViews will use the observed variables from the factor estimation specification. For factor models specified using a symmetric matrix, you must provide a observed_list if you wish to obtain score values.\n\u2022 Scores values will be computed for observations in the current workfile sample that do not have missing values for the observed inputs."}, "setattr": {"uri": "factorcmd-setattr", "anchor": "", "usage": "factor_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "smc": {"uri": "factorcmd-smc", "anchor": "", "usage": "factor_name. smc (options)", "description": "Display the squared multiple correlations for the observed covariance matrix.", "long_description": "The SMCS are equal to 1 minus the diagonal elements of the anti-image covariance."}, "structure": {"uri": "factorcmd-structure", "anchor": "", "usage": "factor_name. structure (options)", "description": "Display the factor structure matrix.", "long_description": "Shows the factor structure matrix containing the correlations between the variables and factors implied by an estimated factor model. For orthogonal factors, the structure matrix is equal to the loadings matrix."}, "uls": {"uri": "factorcmd-uls", "anchor": "", "usage": "factor_name. uls (options) x1 [x2 x3...] [ @partial z1 z2 z3...]\nfactor_name. uls (options) matrix_name [[obs] [conditioning]] [ @ name1 name2 name3...]", "description": "Unweighted least squares estimation of the factor model.", "long_description": "The first method computes the observed dispersion matrix from a set of series or group objects. Simply append a period and the uls keyword to the name of your object, followed by the names of your series and groups, You may optionally use the keyword @partial and append a list of conditioning series.\nIn the second method you will provide the name of the observed dispersion matrix, and optionally, the number of observations and the rank of the set of conditioning variables. If the latter is not provided, it will be set to 1 (representing the constant in the standard centered variance calculations). You may also provide names for the columns of the correlation matrix by entering the @-sign followed by a list of valid series names."}}, "Geomap": {"[Geomap]": {"uri": "geomapcmd-Geomap", "anchor": "", "description": "Geomap object. Specialized object to display shapefile map data."}, "@attr": {"uri": "geomapcmd-Geomap", "anchor": "ww273793", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@count": {"uri": "geomapcmd-Geomap", "anchor": "ww269069", "usage": "@count", "description": "number of areas in the geomap."}, "@description": {"uri": "geomapcmd-Geomap", "anchor": "ww273795", "usage": "@description", "description": "string containing the geomap object\u2019s description (if available)."}, "@detailedtype": {"uri": "geomapcmd-Geomap", "anchor": "ww273797", "usage": "@detailedtype", "description": "string with the object type: \u201cGEOMAP\u201d."}, "@displayname": {"uri": "geomapcmd-Geomap", "anchor": "ww273799", "usage": "@displayname", "description": "string containing the geomap object\u2019s display name. If the geomap has no display name set, the name is returned."}, "@id": {"uri": "geomapcmd-Geomap", "anchor": "ww269071", "usage": "@id(\"attr\",\"val\")", "description": "the id number of the area which has the matching attribute value for the specified attribute name."}, "@ids": {"uri": "geomapcmd-Geomap", "anchor": "ww295885", "usage": "@ids(\"attr\", \"val\")", "description": "space delimited string containing the ID numbers of all the areas which has the matching attribute value for the specified attribute name."}, "@maxx": {"uri": "geomapcmd-Geomap", "anchor": "ww269063", "usage": "@maxx", "description": "maximum horizontal position of the geomap."}, "@maxy": {"uri": "geomapcmd-Geomap", "anchor": "ww269067", "usage": "@maxy", "description": "maximum vertical position of the geomap."}, "@minx": {"uri": "geomapcmd-Geomap", "anchor": "ww269061", "usage": "@minx", "description": "minimum horizontal position of the geomap."}, "@miny": {"uri": "geomapcmd-Geomap", "anchor": "ww269065", "usage": "@miny", "description": "minimum vertical position of the geomap."}, "@name": {"uri": "geomapcmd-Geomap", "anchor": "ww273801", "usage": "@name", "description": "string containing the geomap object\u2019s name."}, "@remarks": {"uri": "geomapcmd-Geomap", "anchor": "ww273803", "usage": "@remarks", "description": "string containing the geomap object\u2019s remarks (if available)."}, "@type": {"uri": "geomapcmd-Geomap", "anchor": "ww273805", "usage": "@type", "description": "string with the object type: \u201cGEOMAP\u201d."}, "@updatetime": {"uri": "geomapcmd-Geomap", "anchor": "ww273789", "usage": "@updatetime", "description": "string representation of the time and date at which the geomap was last updated."}, "addtext": {"uri": "geomapcmd-addtext", "anchor": "", "usage": "geomap_name. addtext (options) \"text\"", "description": "Place text in geomaps.", "long_description": "When adding text in one of the four predefined positions (left, right, top, bottom), EViews deletes any existing text that is in that position before adding the new text. Use the keep option to preserve the existing text.\nFollow the addtext keyword with the text to be placed in the geomap, enclosed in double quotes.\nTo include carriage returns in your text, use the control \u201c\\r\u201d or \u201c\\n\u201d to represent the return. Since the backslash \u201c\\\u201d is a special character in the addtext command, use a double slash \u201c\\\\\u201d to include the literal backslash character."}, "addtitle": {"uri": "geomapcmd-addtitle", "anchor": "", "usage": "geomap_name. addtitle ( options ) \"text\"", "description": "Place an individual title in geomaps.", "long_description": "A geomap is capable of storing one title. When adding a title to a geomap that already has a title, the existing title will be deleted.\nFollow the addtitle keyword with the text to be placed in the geomap, enclosed in double quotes.\nTo include carriage returns in your text, use the control \u201c\\r\u201d or \u201c\\n\u201d to represent the return. Since the backslash \u201c\\\u201d is a special character in the addtitle command, use a double slash \u201c\\\\\u201d to include the literal backslash character."}, "attr": {"uri": "geomapcmd-attr", "anchor": "", "usage": "geomap_name .attr", "description": "Display table view of the shapefile attributes for each of the areas defined in the geomap."}, "autocrop": {"uri": "geomapcmd-autocrop", "anchor": "", "usage": "geomap_name .autocrop", "description": "Calculates and resets the minimum viewable size of a geomap.", "long_description": "When adding, moving, or removing objects such as text or shapes from a geomap, the minimum viewable size of a geomap may change. This may cause distortions in the whitespace surrounding the map with respect to the on-screen scrollbar or external output like file saving. Autocrop will readjust the size of the geomap to make the whitespace proportional."}, "clearhist": {"uri": "geomapcmd-clearhist", "anchor": "", "usage": "geomap_name. clearhist", "description": "Clear the contents of the history attribute.", "long_description": "Removes the geomap\u2019s history attribute, as shown in the label view of the scalar."}, "clearremarks": {"uri": "geomapcmd-clearremarks", "anchor": "", "usage": "scalar_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the scalar\u2019s remarks attribute, as shown in the label view of the scalar."}, "copy": {"uri": "geomapcmd-copy", "anchor": "", "usage": "geomap_name. copy\ngeomap_name. copy dest_name", "description": "Creates a copy of the geomap.", "long_description": "Creates either a named or unnamed copy of the geomap."}, "display": {"uri": "geomapcmd-display", "anchor": "", "usage": "geomap_name .display", "description": "Display the default map view of the geomap."}, "displayname": {"uri": "geomapcmd-displayname", "anchor": "", "usage": "geomap_name. displayname display_name", "description": "Display name for a geomap object.", "long_description": "Attaches a display name to a geomap object. The display name may be used to label output in tables and graphs in place of the standard geomap object name.\nDisplay names are case-sensitive, and may contain various characters, such as spaces, that are not allowed in geomap object names."}, "formatshapelabel": {"uri": "geomapcmd-formatshapelabel", "anchor": "", "usage": "geomap_name. formatshapelabel ( options ) [ shapes ]\ngeomap_name. formatshapelabel ( shape_attribute , label_attributes ) attr_value", "description": "Adjusts the appearance and location of one or more shape labels.", "long_description": "where options is the set of the label characteristics to be changed, shapes is the list of shapes whose labels are to be modified.\nwhere shape_attribute is the name of the shape attribute used to match attr_value ."}, "hide": {"uri": "geomapcmd-hide", "anchor": "", "usage": "geomap_name. hide area_list", "description": "Hides the specified area(s) in the geomap.", "long_description": "where area_list is a list of areas that will be made hidden in addition to what is already hidden. area_list may be a list of area IDs or \u201call.\u201d The area ID for each area is listed in the attributes view of the geomap and corresponds to the EViews ID column."}, "label": {"uri": "geomapcmd-label", "anchor": "", "usage": "geomap_name. label\ngeomap_name. label (options) text", "description": "Display or change the label view of the geomap object, including the last modified date and display name (if any)."}, "legend": {"uri": "geomapcmd-legend", "anchor": "", "usage": "geomap_name .legend (options ) legend_arg", "description": "Set legend specific options in geomaps.", "long_description": "where legend_arg may include:\n\n[+/-] display Make the legend visible or invisible"}, "link": {"uri": "geomapcmd-link", "anchor": "", "usage": "geomap_name .link attribute_name series_name", "description": "Link an attribute in the geomap object to a series in the workfile.", "long_description": "associates individual shapes in the geomap with observations in the workfile by matching attribute values for shapes (defined in the loaded shapefile), with the values of the series.\nIf there are multiple matching series observations for a given attribute value, the first matching series observation value will be used."}, "load": {"uri": "geomapcmd-load", "anchor": "", "usage": "geomap_name .load file_description", "description": "Load a shapefile from disk.", "long_description": "where file_description is a local file found on disk."}, "makeattrser": {"uri": "geomapcmd-makeattrser", "anchor": "", "usage": "geomap_name .makeattrser attr_name [series_name]\ngeomap_name .makeattrser (options) attr_name1 series_name1 [attr_name2 series_name2 ... ]\ngeomap_name .makeattrser (options) @all [name_pattern]", "description": "Create series containing linked attribute values from the shapefile.", "long_description": "Saves the values of the specified attributes linked to each observation in the workfile in series.\nYou must first provide attr_name, the name of an attribute that exists in the shapefile. You may optionally provide a name for the series in the workfile to hold the linked values for the attribute. By default, EViews will use the attribute name for the series, or will construct a valid EViews name from the series.\nIf you wish to save linked values for more than one attribute in the shapefile, you should enter the names in pairs. You may optionally provide a name for a group to contain the series.\nYou may instruct EViews to save all of the attributes by using the keyword \u201c@all\u201d. EViews will attempt to use the attribute name for the series, unless you provide a wildcard pattern, in which case, EViews will construct the name from the pattern and the attribute names."}, "map": {"uri": "geomapcmd-map", "anchor": "", "usage": "geomap_name. map ( options )", "description": "map Geomap Views", "long_description": "Displays the map view of a geomap object."}, "mask": {"uri": "geomapcmd-mask", "anchor": "", "usage": "geomap_name. mask area_list", "description": "mask Geomap Procs", "long_description": "Make specified areas in the geomap invisible.\nwhere area_list is a space delimited integer list of the area IDs. To obtain the ID number of an area, see the @id geomap data member.\nThe keyword \u201c@unlinked\u201d may be used to specify all shapes that are not linked to observations in the workfile."}, "movetitle": {"uri": "geomapcmd-movetitle", "anchor": "", "usage": "geomap_name. movetitle ( position )", "description": "Moves the title in the geomap to the specified location.", "long_description": "where position can be one of the following:\n\nctm Center top map. ltm Left top map. rtm Right top map. cbm Center bottom map. lbm Left bottom map. rbm Right bottom map. lmm Left middle map. rmm Right middle map. lmp Left-middle of point. rmp Right-middle of point. lap Left above point. rap Right above point. lbp Left below point. rbp Right below point. cap Center above point. cbp Center below point.\nYou can also use explicit coordinates to specify the position of the upper left corner of the text.\nCoordinates are set by a pair of numbers h , v in map units. Use the geomap data members @minx, @miny, @maxx, and @maxy to obtain the position limits.\nCoordinates may be used with other options, but they must be in the first two positions of the options list. Coordinates are overridden by other options that specify location."}, "olepush": {"uri": "geomapcmd-olepush", "anchor": "", "usage": "geomap_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "options": {"uri": "geomapcmd-options", "anchor": "", "usage": "geomap_name .options options_list", "description": "Set display options for a geomap object including legend and outline color."}, "save": {"uri": "geomapcmd-save", "anchor": "", "usage": "geomap_name. save (options) [path\\]file_name", "description": "Save the default view of a geomap object to disk as a Windows metafile (.EMF or .WMF), PostScript (.EPS), bitmap (.BMP), Graphics Interchange Format (.GIF), Joint Photographic Experts Exchange (.JPEG), Portable Network Graphics (.PNG), Portable Document Format (.PDF), LaTeX (.TEX), or Markdown (.MD).", "long_description": "Follow the keyword with a name for the file. file_name may include the file type extension, or the file type may be specified using the \u201ct=\u201d option. A geomap may be saved with an EMF, WMF, EPS, BMP, GIF, JPG, PNG, PDF, or MD extension. The MD (Markdown) setting uses very basic syntax and should be usable in most editors.\nIf an explicit path is not specified, the file will be stored in the default directory, as set in the File Locations global options."}, "setattr": {"uri": "geomapcmd-setattr", "anchor": "", "usage": "geomap_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "setfillcolor": {"uri": "geomapcmd-setfillcolor", "anchor": "", "usage": "geomap_name. setfillcolor ( t= type ) fillcolor_args", "description": "Define the fill (background) color used in geomap shapes using values in a series.", "long_description": "where:\n\ntype = arg Type of fill coloring for spreadsheet cells: \u201csingle\u201d (single color), \u201cposneg\u201d (positive-negative single threshold), \u201crange\u201d (single range coloring), \u201chilo\u201d (high-low-median), \u201ccustom\u201d (custom coloring)."}, "setfont": {"uri": "geomapcmd-setfont", "anchor": "", "usage": "table_name. setfont font_args", "description": "Set the font for area labels in the geomap.", "long_description": "The font_args may include one or more of the following:\n\ntype([face], [pt] , [+/- b ], [+/- i ], [+/- u ], [+/- s ]) Set characteristics of the font for the graph element type . The font name (face) , size (pt) , and characteristics are all optional. face should be a valid font name, enclosed in double quotes. pt should be the font size in points. The remaining options specify whether to turn on/off boldface (b), italic (i), underline (u), and strikeout (s) styles.\nand type is one of \u201call\u201d, \u201caxes\u201d, \u201clegend\u201d, \u201ctext\u201d, \u201cobs\u201d, where \u201caxes\u201d refers to the axes labels, \u201clegend\u201d refers to the graph legend, \u201ctext\u201d refers to the text objects, \u201cobs\u201d refers to the observation scale, and \u201call\u201d refers to all of the elements."}, "setjust": {"uri": "geomapcmd-setjust", "anchor": "", "usage": "geomap_name. setjust format_arg", "description": "Set the horizontal justification for multi-line area labels.", "long_description": "where format_arg may be set to left, center, right, or auto (strings are left-justified and numbers are right-justified). Default display settings can be set in General Options; see \u201cSpreadsheet Data Display\u201d .\nNote that justification settings have no effect on single-line labels."}, "setshapelabel": {"uri": "geomapcmd-setshapelabel", "anchor": "", "usage": "geomap_name. setshapelabel ( attribute_name ) custom_label", "description": "Set which attribute to use or create a custom label to use when labeling shapes in the geomap.", "long_description": "where attribute_name is the name of an attributed in the geomap. In the case where attribute_name is equal to \u201ccustom\u201d, the custom_label will be used. In all other cases, the command will be ignored."}, "show": {"uri": "geomapcmd-show", "anchor": "", "usage": "geomap_name. show area_list", "description": "Shows the specified area(s) in the geomap.", "long_description": "where area_list is a list of areas that will be shown in addition to what is already shown. area_list may be a list of area IDs or \u201call.\u201d The area ID for each area is listed in the attributes view of the geomap and corresponds to the EViews ID column."}}, "Graph": {"[Graph]": {"uri": "graphcmd-Graph", "anchor": "", "description": "Graph object. Specialized object used to hold graphical output."}, "@attr": {"uri": "graphcmd-Graph", "anchor": "ww256650", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@axismax": {"uri": "graphcmd-Graph", "anchor": "ww248973", "usage": "@axismax( axis )", "description": "returns the maximum value for the specified axis. Acceptable values for axis are \u201ct\u201d, \u201cl\u201d, \u201cb\u201d, \u201cr\u201d, for top, left, bottom, right."}, "@axismin": {"uri": "graphcmd-Graph", "anchor": "ww248752", "usage": "@axismin( axis )", "description": "returns the minimum value for the specified axis. Acceptable values for axis are \u201ct\u201d, \u201cl\u201d, \u201cb\u201d, \u201cr\u201d, for top, left, bottom, right."}, "@axispos": {"uri": "graphcmd-Graph", "anchor": "ww248976", "usage": "@axispos( value , axis )", "description": "returns the location in virtual inches of the specified data value on the graph . value is in the same units as the specified axis. When specifying a date for value , the string must be quoted. Acceptable values for axis are \u201ct\u201d, \u201cl\u201d, \u201cb\u201d, \u201cr\u201d for top, left, bottom, right."}, "@description": {"uri": "graphcmd-Graph", "anchor": "ww256651", "usage": "@description", "description": "returns a string containing the object description (if available)."}, "@detailedtype": {"uri": "graphcmd-Graph", "anchor": "ww256652", "usage": "@detailedtype", "description": "returns a string with the object type: \u201cGRAPH\u201d."}, "@displayname": {"uri": "graphcmd-Graph", "anchor": "ww196342", "usage": "@displayname", "description": "returns a string containing the Graph\u2019s displayname. If the Graph has no display name set, the name is returned."}, "@name": {"uri": "graphcmd-Graph", "anchor": "ww196343", "usage": "@name", "description": "returns a string containing the Graph\u2019s name."}, "@remarks": {"uri": "graphcmd-Graph", "anchor": "ww196344", "usage": "@remarks", "description": "returns a string containing the Graph\u2019s remarks (if available)."}, "@type": {"uri": "graphcmd-Graph", "anchor": "ww196345", "usage": "@type", "description": "returns a string with the object type: \u201cGRAPH\u201d."}, "@updatetime": {"uri": "graphcmd-Graph", "anchor": "ww196347", "usage": "@updatetime", "description": "returns a string representation of the time and date at which the Graph was last updated."}, "addarrow": {"uri": "graphcmd-addarrow", "anchor": "", "usage": "graph_name. addarrow [ pos ( x1 , y1 , x2 , y2 ) axispos ( x1 , y1 , x2 , y2 , x-axis,y-axis ) axispos ( x1 , y1 , x2 , y2 , y-axis ) axispt ( x2 , y2 , angle , length , x-axis,y-axis )] linewidth (lwidth) arrowwidth (awidth) color (color) pattern ( pattern ) startsym ( ssym ) endsym ( esym ) label ( str ) labelpos ( position ) frame ( size ) indicator", "description": "Draw a line or arrow on a graph.", "long_description": "Follow the addarrow keyword a set of specifications determining the position and style of the line/arrow to be drawn.\nThe position and size of the arrow/line can be specified with one of the pos , axispos or axispt arguments.\nThe pos argument specifies coordinates of the line in virtual space. x1 is the starting X (horizontal) coordinate, and y1 is the starting Y (vertical) coordinate. Similarly x2 and y2 are the end point coordinates. Coordinates are set in virtual inches. Individual graphs are always [img:../content/images/graphcmd.108.02.1.jpg] virtual inches (scatter diagrams are [img:../content/images/graphcmd.108.02.2.jpg] virtual inches) or a user-specified size, regardless of their current display size.\nThe origin of the coordinate is the upper left hand corner of the graph. The x1 number specifies how many virtual inches to offset to the right from the origin. The second number y1 specifies how many virtual inches to offset below the origin. The start point of the line will be set at the specified coordinates.\nThe axispos argument specifies coordinates in units of the graph scale. x1 is the starting X (horizontal) coordinate, and y1 is the starting Y (vertical) coordinate. Similarly x2 and y2 are the end point coordinates.\nFor time-series graphs you must also specify which non-time based axis the y-coordinates\u2019s scale are based on, using l,t,r,b for left, top, right, bottom respectively. x-coordinates should be specified as a date/time.\nFor non-time series graphs you must specify the axis of scale of both x and y coordinates.\nThe axispt argument specifies the end point coordinates of the line, along with the angle and length of the line. Angles are measured in degrees, and length in virtual inches.\nThe linewidth argument specifies the thickness of the line. lwidth should be a number between \u201c.25\u201d and \u201c5\u201d, indicating the width in points.\nArrowwidth determines the size of the arrow head on the line. awidth can be either \u201csmall\u201d, \u201cmedium\u201d or \u201clarge\u201d.\ncolor specifies the color of the line. The color value may set by using one of the color keywords (e.g., \u201cblue\u201d), by using the RGB values (e.g., \u201c@RGB(255, 255, 0)\u201d), or by specifying the components in hexadecimal ( e.g., \u201c@HEX(ff0000)\u201d).\nThe predefined colors are given by the keywords (with their RGB and HEX equivalents):\n\nblue @rgb(0, 0, 255) @hex(0000ff) red @rgb(255, 0, 0) @hex(ff0000) ltred @rgb(255, 168, 168) @hex(ffa8a8) green @rgb(0, 128, 0) @hex(008000) black @rgb(0, 0, 0) @hex(000000) white @rgb(255, 255, 255) @hex(ffffff) purple @rgb(128, 0, 128) @hex(800080) orange @rgb(255, 128, 0) @hex(ff8000) yellow @rgb(255, 255, 0) @hex(ffff00) gray @rgb(128, 128, 128) @hex(808080) ltgray @rgb(192, 192, 192) @hex(c0c0c0)\nThe pattern argument specifies the line pattern. pattern can take a numerical value, or one of the corresponding keywords:\n\nThe startsym and endsym arguments define the arrowhead at the start or end of the line. You may specify \u201cnone\u201d, \u201cfilled\u201d, \u201coutline\u201d, or \u201crangeline\u201d.\nlabel adds a text label to the start point of the arrow. labelpos specifies the location of the text relative to the start point of the line. The following position s are available:\n\nVert left or right of the start point depending on the angle of the line Horz left or right of the start point depending on the angle of the line AR above and right of the start point AL above and left of the start point BR below and right of the start point BL below and left of the start point L left of the start point R right of the start point A above the start point B below the start point\nFrame encloses the text in a box. Size specifies whether the box should be a small box ( sb ) or a large box ( lb ).\nIndicator places a red indicator within the text frame , indicating the start point location relative to the text. NOTE: The indicator will only appear if the label position ( labelpos ) is set to AR , AL , BR , or BL"}, "addellipse": {"uri": "graphcmd-addellipse", "anchor": "", "usage": "graph_name. addellipse [ pos ( x1 , y1 , x2 , y2 ) axisctr ( x1 , y1 , x-axis,y-axis ) axispos ( x1 , y1 , y-axis )] linewidth (lwidth) color (color) pattern ( pattern ) height( height ) width( width ) angle( angle )", "description": "Draw an ellipse on a graph.", "long_description": "Follow the addellipse keyword a set of specifications determining the position and style of the ellipse to be drawn.\nThe position and size of the ellipse can be specified with either the pos or axisctr arguments.\nThe pos argument specifies coordinates of the center of the ellipse in virtual space. x1 is the center point X (horizontal) coordinate, and y1 is the center point Y (vertical) coordinate. Coordinates are set in virtual inches. Individual graphs are always [img:../content/images/graphcmd.108.03.1.jpg] virtual inches (scatter diagrams are [img:../content/images/graphcmd.108.03.2.jpg] virtual inches) or a user-specified size, regardless of their current display size.\nThe origin of the coordinate is the upper left hand corner of the graph. The x1 number specifies how many virtual inches to offset to the right from the origin. The second number y1 specifies how many virtual inches to offset below the origin.\nThe axisctr argument specifies coordinates in units of the graph scale. x1 is the center point X (horizontal) coordinate, and y1 is the center point Y (vertical) coordinate.\nFor time-series graphs you must also specify which non-time based axis the y-coordinates\u2019s scale are based on, using l,t,r,b for left, top, right, bottom respectively. x-coordinates should be specified as a date/time.\nFor non-time series graphs you must specify the axis of scale of both x and y coordinates.\nThe height argument specifies the height of the ellipse. Similarly the width argument specifies its width. angle controls the rotation of the ellipse (in degrees).\nThe linewidth argument specifies the thickness of the ellipse outline. lwidth should be a number between \u201c.25\u201d and \u201c5\u201d, indicating the width in points.\ncolor specifies the color of the ellipse outline. The color value may set by using one of the color keywords (e.g., \u201cblue\u201d), by using the RGB values (e.g., \u201c@RGB(255, 255, 0)\u201d), or by specifying the components in hexadecimal ( e.g., \u201c@HEX(ff0000)\u201d).\nThe predefined colors are given by the keywords (with their RGB and HEX equivalents):\n\nblue @rgb(0, 0, 255) @hex(0000ff) red @rgb(255, 0, 0) @hex(ff0000) ltred @rgb(255, 168, 168) @hex(ffa8a8) green @rgb(0, 128, 0) @hex(008000) black @rgb(0, 0, 0) @hex(000000) white @rgb(255, 255, 255) @hex(ffffff) purple @rgb(128, 0, 128) @hex(800080) orange @rgb(255, 128, 0) @hex(ff8000) yellow @rgb(255, 255, 0) @hex(ffff00) gray @rgb(128, 128, 128) @hex(808080) ltgray @rgb(192, 192, 192) @hex(c0c0c0)\nThe pattern argument specifies the ellipse outline pattern. pattern can take a numerical value, or one of the corresponding keywords:\n\nExamples\nThe commands\ncreate m 1990 2000\nsmpl 1990 1995\nseries y=nrnd\nsmpl 1995 2000\ny = 6+nrnd\nsmpl @all\nfreeze(gr) y.line\ngr.addellipse pos(1,1)  width(2) height(.7) angle(110) color(red) pattern(2) linewidth(3)\ncreate a graph and adds a red ellipse that is centered 1 virtual inch from the top and 1 virtual inch from the left of the graph that is 2 virtual inches wide and 0.7 virtual inches tall. It uses a 3 pt dash1 line pattern. The ellipse is also rotated 110 degrees\nThe command\ngr.addellipse axisctr(1995, @mean(x),l)  width(30) height(.2) angle(-50) color(blue)\nadds to a blue ellipse that is centered at 1995 and the mean of x in left axis units. It is 30 observations wide and 0.2 left axis units tall. It is also rotated -50 degrees"}, "addrect": {"uri": "graphcmd-addrect", "anchor": "", "usage": "graph_name. addrect [ pos ( x1 , y1 , x2 , y2 ) axisctr ( x1 , y1 , x-axis,y-axis ) axispos ( x1 , y1 , y-axis )] linewidth (lwidth) color (color) pattern ( pattern ) height( height ) width( width ) angle( angle )", "description": "Draw a rectangle on a graph.", "long_description": "Follow the addrect keyword a set of specifications determining the position and style of the rectangle to be drawn.\nThe position and size of the rectangle can be specified with either the pos or axisctr arguments.\nThe pos argument specifies coordinates of the center of the rectangle in virtual space. x1 is the center point X (horizontal) coordinate, and y1 is the center point Y (vertical) coordinate. Coordinates are set in virtual inches. Individual graphs are always [img:../content/images/graphcmd.108.04.1.jpg] virtual inches (scatter diagrams are [img:../content/images/graphcmd.108.04.2.jpg] virtual inches) or a user-specified size, regardless of their current display size.\nThe origin of the coordinate is the upper left hand corner of the graph. The x1 number specifies how many virtual inches to offset to the right from the origin. The second number y1 specifies how many virtual inches to offset below the origin.\nThe axisctr argument specifies coordinates in units of the graph scale. x1 is the center point X (horizontal) coordinate, and y1 is the center point Y (vertical) coordinate.\nFor time-series graphs you must also specify which non-time based axis the y-coordinates\u2019s scale are based on, using l,t,r,b for left, top, right, bottom respectively. x-coordinates should be specified as a date/time.\nFor non-time series graphs you must specify the axis of scale of both x and y coordinates.\nThe height argument specifies the height of the rectangle. Similarly the width argument specifies its width. angle controls the rotation of the rectangle (in degrees).\nThe linewidth argument specifies the thickness of the rectangle outline. lwidth should be a number between \u201c.25\u201d and \u201c5\u201d, indicating the width in points.\narrowwidth determines the size of the arrow head on the line. awidth can be either \u201csmall\u201d, \u201cmedium\u201d or \u201clarge\u201d.\ncolor specifies the color of the rectangle outline. The color value may set by using one of the color keywords (e.g., \u201cblue\u201d), by using the RGB values (e.g., \u201c@RGB(255, 255, 0)\u201d), or by specifying the components in hexadecimal ( e.g., \u201c@HEX(ff0000)\u201d).\nThe predefined colors are given by the keywords (with their RGB and HEX equivalents):\n\nblue @rgb(0, 0, 255) @hex(0000ff) red @rgb(255, 0, 0) @hex(ff0000) ltred @rgb(255, 168, 168) @hex(ffa8a8) green @rgb(0, 128, 0) @hex(008000) black @rgb(0, 0, 0) @hex(000000) white @rgb(255, 255, 255) @hex(ffffff) purple @rgb(128, 0, 128) @hex(800080) orange @rgb(255, 128, 0) @hex(ff8000) yellow @rgb(255, 255, 0) @hex(ffff00) gray @rgb(128, 128, 128) @hex(808080) ltgray @rgb(192, 192, 192) @hex(c0c0c0)\nThe pattern argument specifies the rectangle outline pattern. pattern can take a numerical value, or one of the corresponding keywords:\n"}, "addtext": {"uri": "graphcmd-addtext", "anchor": "", "usage": "graph_name. addtext (options) \"text\"", "description": "Place text in graphs.", "long_description": "When adding text in one of the four predefined positions (left, right, top, bottom), EViews deletes any existing text that is in that position before adding the new text. Use the keep option to preserve the existing text.\nFollow the addtext keyword with the text to be placed in the graph, enclosed in double quotes.\nTo include carriage returns in your text, use the control \u201c\\r\u201d or \u201c\\n\u201d to represent the return. Since the backslash \u201c\\\u201d is a special character in the addtext command, use a double slash \u201c\\\\\u201d to include the literal backslash character."}, "align": {"uri": "graphcmd-align", "anchor": "", "usage": "graph_name. align ( n,h,v )", "description": "Align placement of multiple graphs."}, "area": {"uri": "graphmaster-area", "anchor": "", "usage": "area (options) o1 [o2 o3 ... ]\nobject_name. area (options) [categorical_spec(arg)]", "description": "Display an area graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the area keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "axis": {"uri": "graphcmd-axis", "anchor": "", "usage": "graph_name. axis (axis_id) options_list", "description": "Sets axis scaling and display characteristics for the graph.", "long_description": "By default, EViews optimally chooses the axis scaling to fit the graph data.\nThe axis_id parameter identifies which of the axes the command modifies. If no option is specified, the proc will modify all of the axes. axis_id may take on one of the following values:\n\nleft / l Left vertical axis. right / r Right vertical axis. bottom / b Bottom axis for XY and scatter graphs ( scat , xyarea , xybar , xyline , xypair ). top / t Top axis for XY and scatter graphs ( scat , xyarea , xybar , xyline , xypair ). zerotop / zeroback Draw zero line on [top / bottom] of other graph elements. all / a All axes."}, "band": {"uri": "graphmaster-band", "anchor": "", "usage": "band (options) o1 [o2 o3 ... ]\nobject_name. band (options)", "description": "Display an area band graph view (if possible).", "long_description": "An area band graph fills the area between pairs of series or columns of a matrix.\nwhere o1 , o2 , ..., are series or group objects. Following the band keyword, you may specify general graph characteristics using options . Available options include axis settings and template application."}, "bar": {"uri": "graphmaster-bar", "anchor": "", "usage": "bar (options) o1 [o2 o3 ... ]\nobject_name. bar (options) [categorical_spec(arg)]", "description": "Display a bar graph.", "long_description": "(Note: when the individual bars in a bar graph become too thin to be distinguished, the graph will automatically be converted into an area graph; see area .)\nwhere o1 , o2 , ..., are series or group objects. Following the bar keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "boxplot": {"uri": "graphmaster-boxplot", "anchor": "", "usage": "boxplot (options) o1 [o2 o3 ... ]\nobject_name. boxplot (options) [categorical_spec(arg)]", "description": "Display boxplots for each series or column.", "long_description": "where o1 , o2 , ..., are series or group objects. You may specify general options after the boxplot keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "bplabel": {"uri": "graphcmd-bplabel", "anchor": "", "description": "Specify labeling of a boxplot axis.", "long_description": "Note that bplabel is no longer supported. See instead, Graph::setobslabel ."}, "clearhist": {"uri": "graphcmd-clearhist", "anchor": "", "usage": "graph_name. clearhist", "description": "Clear the contents of the history attribute for graph objects.", "long_description": "Removes the graph\u2019s history attribute, as shown in the label view of the graph."}, "clearremarks": {"uri": "graphcmd-clearremarks", "anchor": "", "usage": "graph_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the graph\u2019s remarks attribute, as shown in the label view of the graph."}, "copy": {"uri": "graphcmd-copy", "anchor": "", "usage": "graph_name. copy\ngraph_name. copy dest_name", "description": "Creates a copy of the graph.", "long_description": "Creates either a named or unnamed copy of the graph."}, "datalabel": {"uri": "graphcmd-datalabel", "anchor": "", "usage": "graph_name. datalabel option_list", "description": "Control labeling of the data points in graphs.", "long_description": "datelabel sets options that are control the labeling of individual data points in graphs"}, "datelabel": {"uri": "graphcmd-datelabel", "anchor": "", "usage": "graph_name. datelabel option_list", "description": "Control labeling of the bottom date/time axis in time plots.", "long_description": "datelabel sets options that are specific to the appearance of time/date labeling. Many of the options that also affect the appearance of the date axis are set by the Graph::axis command with the \u201cbottom\u201d option. These options include tick control, label and font options, and grid lines."}, "delete": {"uri": "graphcmd-delete", "anchor": "", "description": "Removes all objects of specified type from a graph object.", "long_description": "graph_name.delete object_type\nwhere object_type includes one or more of the following: \u2018line\u2019, \u2018shade\u2019, \u2018text\u2019, \u2018ellipse\u2019, \u2018rectangle\u2019, and \u2018arrow\u2019."}, "display": {"uri": "graphcmd-display", "anchor": "", "usage": "graph_name. display object_name", "description": "Display table, graph, or spool output in the graph object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the graph object."}, "displayname": {"uri": "graphcmd-displayname", "anchor": "", "usage": "graph_name. displayname display_name", "description": "Display name for a graph object.", "long_description": "Attaches a display name to a graph object which may be used to label output in place of the standard graph object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in graph object names."}, "distplot": {"uri": "graphmaster-distplot", "anchor": "", "usage": "distplot (options) o1 [o2 o3 ... ]\nobject_name. distplot (options) analytical_spec ( arg ) [categorical_spec(arg)]", "description": "Display a distribution graph.", "long_description": "where o1 , o2 , ..., are series or group objects.\nWhen used as a command, distplot only allows you to display the default histogram view.\nWhen used as an object view, you must specify the type of distribution graph you wish to create in the analytical_spec . You may select from: histogram, histogram polygon, histogram edge polygon, average shifted histogram, kernel density, theoretical distribution, empirical CDF, empirical survivor, empirical log survivor, or empirical quantile (see \u201cAnalytical Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )"}, "dot": {"uri": "graphmaster-dot", "anchor": "", "usage": "dot (options) o1 [o2 o3 ... ]\nobject_name. dot (options) [categorical_spec(arg)]", "description": "Display a dot plot graph view.", "long_description": "A dot plot is a symbol only version of the line and symbol graph that uses circles to represent the value of each observation.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the dot keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "draw": {"uri": "graphcmd-draw", "anchor": "", "usage": "graph_name. draw ( draw_type , axis_id [,options] ) position [position2]", "description": "Place horizontal or vertical lines and shaded areas on the graph.", "long_description": "where draw_type may be one of the following:\n\nline / l A line shade A shaded area\nNote that the \u201cdashline\u201d option has been removed (though it is supported for backward compatibility). You should use the \u201cpattern\u201d option to specify whether the line is solid or patterned.\naxis_id may take the values:\n\nleft / l Draw a horizontal line or shade using the left axis to define the drawing position right / r Draw a horizontal line or shade using the right axis to define the drawing position bottom / b Draw a vertical line or shade using the bottom axis to define the drawing position\nIf drawing a line, the drawing position is taken from position . If drawing a shaded area, you can either specify a start and end position ( position and position2 ), sample object, or sample string to define the boundaries of the shaded region."}, "drawdefault": {"uri": "graphcmd-drawdefault", "anchor": "", "usage": "graph_name. drawdefault draw_options", "description": "Change default settings for lines and shaded areas in the graph.", "long_description": "This command specifies changes in the default settings which will be applied to line and shade objects added subsequently to the graph. If you include the \u201cexisting\u201d option, all of the drawing default settings will also be applied to existing line and shade objects in the graph.\nwhere draw_options may include one or more of the following:\n\nlinecolor( arg ) Sets the default color for lines. arg may be one of the predefined color keywords, or it may be specified using individual red-green-blue (RGB) components using the \u201c@RGB\u201d or \u201c@HEX\u201d functions. The arguments to the @RGB function are a set of three integers from 0 to 255, representing the RGB values of the color. The arguments to the \u201c@HEX\u201d function are a set of six characters representing the RGB values of the color in hexadecimal. Each two character set represents a red, green or blue component in the range '00' to 'FF'. For a full description of the keywords, see \u201cColor definitions\u201d . shadecolor( arg ) Sets the default color for shades. arg may be one of the predefined color keywords, or it may be specified using individual red-green-blue (RGB) components using the \u201c@RGB\u201d or \u201c@HEX\u201d functions. The arguments to the @RGB function are a set of three integers from 0 to 255, representing the RGB values of the color. The arguments to the \u201c@HEX\u201d function are a set of six characters representing the RGB values of the color in hexadecimal. Each two character set represents a red, green or blue component in the range '00' to 'FF'. For a full description of the keywords, see \u201cColor definitions\u201d width( n1 ) Specify the width, where n1 is the line width in points (used only if object_type is \u201cline\u201d or \u201cdashline\u201d). The default is 0.5 points. pattern( index ) Sets the default line pattern to the type specified by index . index can be an integer from 1 to 12 or one of the matching keywords (\u201csolid\u201d, \u201cdash1\u201d through \u201cdash10\u201d, \u201cnone\u201d). Sets the line pattern to the type specified by index . index can be an integer from 1 to 12 or one of the matching keywords (\u201csolid\u201d, \u201cdash1\u201d through \u201cdash10\u201d, \u201cnone\u201d). The \u201cnone\u201d keyword turns on solid lines. existing Apply the default settings to all existing line/shade objects in the graph.\nColor definitions\ncolor_arg specifies the color to be employed in the arguments above. The color may be specified using predefined color names, by specifying the individual red-green-blue (RGB) components using the special \u201c@RGB\u201d function , or by specifying the individual red-green-blue (RGB) components in hexadecimal using the special \u201c@HEX\u201d function .\nThe predefined colors are given by the keywords (with their RGB and HEX equivalents):\n\nblue @rgb(0, 0, 255) @hex(0000ff) red @rgb(255, 0, 0) @hex(ff0000) ltred @rgb(255, 168, 168) @hex(ffa8a8) green @rgb(0, 128, 0) @hex(008000) black @rgb(0, 0, 0) @hex(000000) white @rgb(255, 255, 255) @hex(ffffff) purple @rgb(128, 0, 128) @hex(800080) orange @rgb(255, 128, 0) @hex(ff8000) yellow @rgb(255, 255, 0) @hex(ffff00) gray @rgb(128, 128, 128) @hex(808080) ltgray @rgb(192, 192, 192) @hex(c0c0c0)"}, "errbar": {"uri": "graphmaster-errbar", "anchor": "", "usage": "errbar (options) o1 o2 [o3 ...]\nobject_name. errbar (options)", "description": "Display an error bar graph view (if possible).", "long_description": "If there are two series or columns, the error bar will show the high and low values in the bar. The optional third series or column will be plotted as a symbol.\nwhere o1 , o2 , ..., are series or group objects."}, "hilo": {"uri": "graphmaster-hilo", "anchor": "", "usage": "hilo (options) o1 o2 [o3 ...]\nobject_name. hilo (options)", "description": "Display a high-low[-open-close] graph view (if possible).", "long_description": "where o1 , o2 , ..., are series or group objects. For a high-low[-open-close] graph, EViews uses the first series or column as the high series, the second series or column as the low series, and an optional third series or column as the close series. If four series or columns are provided, EViews will use them in the following order: high-low-open-close.\nNote that if you wish to display a high-low-open graph, you should use an \u201cNA\u201d-series for the close values."}, "label": {"uri": "graphcmd-label", "anchor": "", "usage": "graph_name. label\ngraph_name. label (options) [text]", "description": "Display or change the label view of a graph object, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the graph label."}, "legend": {"uri": "graphcmd-legend", "anchor": "", "usage": "graph_name. legend option_list", "description": "Set legend appearance and placement in graphs.", "long_description": "When legend is used with a multiple graph, the legend settings apply to all graphs. See Graph::setelem for setting legends for individual graphs in a multiple graph."}, "line": {"uri": "graphmaster-line", "anchor": "", "usage": "line (options) o1 [o2 o3 ... ]\nobject_name. line (options) [categorical_spec(arg)]", "description": "Display a line graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the line keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "metafile": {"uri": "graphcmd-metafile", "anchor": "", "description": "Save graph to disk as an enhanced or ordinary Windows metafile.", "long_description": "Provided for backward compatibility, metafile has been replaced by the more general graph proc Graph::save , which allows for saving graphs in metafile or postscript files, with additional options for controlling the output."}, "name": {"uri": "graphcmd-name", "anchor": "", "usage": "graph_name. name (n) legend_text", "description": "Change the names used for legends or axis labels in XY graphs.", "long_description": "Allows you to provide an alternative to the names used for legends or for axis labels in XY graphs. The name command is available only for single graphs and will be ignored in multiple graphs.\nProvide a series number in parentheses and legend_text for the legend (or axis label) after the keyword. If you do not provide text, the current legend will be removed from the legend/axis label."}, "olepush": {"uri": "graphcmd-olepush", "anchor": "", "usage": "graph_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "options": {"uri": "graphcmd-options", "anchor": "", "usage": "graph_name. options option_list", "description": "Set options for a graph object.", "long_description": "Allows you to change the option settings of an existing graph object. When options is used with a multiple graph, the options are applied to all graphs."}, "pie": {"uri": "graphmaster-pie", "anchor": "", "usage": "pie (options) o1 o2 [o3 ... ]\nobject_name. pie (options) [categorical_spec(arg)]", "description": "Display a pie chart view.", "long_description": "In the default setting, there will be one pie for each date or observation number. Each series or column of data is shown as a wedge in a different color/pattern, where the width of the wedge equals the percentage contribution of the series or column to the total of all listed series or columns. Negative and missing values are treated as zeros.\nwhere o1 , o2 , ..., are series or group objects. You may specify general graph characteristics by including options following the pie keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "qqplot": {"uri": "graphmaster-qqplot", "anchor": "", "usage": "qqplot (options) o1 [o2 o3 ... ]\nobject_name. qqplot (options) analytical_spec(arg) [categorical_spec(arg)]", "description": "Display a quantile-quantile graph.", "long_description": "Plots the (empirical) quantiles of a series or matrix column against either the quantiles of a theoretical distribution or the empirical quantiles of other series or columns in the group or matrix. You may specify the theoretical distribution and/or the method used to compute the empirical quantiles as options.\nwhere o1 , o2 , ..., are series or group objects.\nWhen used as a command, qqplot displays the theoretical qq-plot against a fitted normal distribution.\nWhen used to display the view of an object, you must specify a theoretical or empirical quantile graph in the analytical_spec (see \u201cAnalytical Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "save": {"uri": "graphcmd-save", "anchor": "", "usage": "graph_name. save (options) [path\\]file_name", "description": "Save a graph object to disk as a Windows metafile (.EMF or .WMF), PostScript (.EPS), bitmap (.BMP), Graphics Interchange Format (.GIF), Joint Photographic Experts Exchange (.JPEG), Portable Network Graphics (.PNG), Portable Document Format (.PDF), LaTeX (.TEX), Markdown (.MD), or MPEG-4 (.mp4).", "long_description": "Follow the keyword with a name for the file. file_name may include the file type extension, or the file type may be specified using the \u201ct=\u201d option. A graph may be saved with an EMF, WMF, EPS, BMP, GIF, JPG, PNG, PDF, TEX, MD, or MP4 extension. The MD (Markdown) setting uses very basic syntax and should be usable in most editors.\nIf an explicit path is not specified, the file will be stored in the default directory, as set in the File Locations global options."}, "scat": {"uri": "graphmaster-scat", "anchor": "", "usage": "scat (options) o1 o2 [o3 ... ]\nobject_name. scat (options) [auxiliary_spec(arg)] [categorical_spec(arg)]", "description": "Display a scatterplot (if possible).", "long_description": "A scatterplot graph plots the values of one series or column against another using symbols.\nThere must be at least two series or columns to create a scatterplot. By default, the first series or column will be located along the horizontal axis, and the remaining data on the vertical axis. You may optionally choose to plot the data in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth, or to construct graphs using all possible pairs (or the lower triangular set of pairs).\nScatterplots are simply XY-line plots with symbols turned on and lines turned off (see Graph::setelem ).\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the scat keyword, you may specify general graph characteristics using options . Available options include plotting the data in pairs or in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "scatmat": {"uri": "graphmaster-scatmat", "anchor": "", "usage": "scatmat (options) o1 o2 [o3 ... ]\nobject_name. scatmat (options) [auxiliary_spec(arg)]", "description": "Display a matrix of scatterplots.", "long_description": "The scatmat view forms pairs using all possible pairwise combinations for the series or columns and constructs a plot for each pair, using specialized positioning and axis labeling.\nScatterplots are simply XY-line plots with symbols turned on and lines turned off (see Graph::setelem ). The scatmat graph type is equivalent to using scat with the \u201cmult=mat\u201d or \u201cmult=lower\u201d option indicating that the data should be graphed using the full or lower-triangular matrix of pairs.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the scatmat keyword, you may specify general graph characteristics using options . Available options include template application and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d )."}, "scatpair": {"uri": "graphmaster-scatpair", "anchor": "", "usage": "scatpair (options) o1 o2 [o3 ... ]\nobject_name. scatpair (options) [auxiliary_spec(arg)]", "description": "Display a scatterplot pairs graph (if possible).", "long_description": "The data will be plotted in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth. If the number of series or columns is odd, the last one will be ignored.\nScatterplots are simply XY plots with symbols turned on and lines turned off (see Graph::setelem ). The scatpair graph type is equivalent to using scat with the \u201cmult=pairs\u201d option indicating that the data should be graphed in pairs.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the scatpair keyword, you may specify general graph characteristics using options . Available options include plotting the data in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d )."}, "seasplot": {"uri": "graphmaster-seasplot", "anchor": "", "usage": "seasplot (options) o1 [o2 o3 ... ]\nobject_name. seasplot (options)", "description": "Display a seasonal line graph view.", "long_description": "seasplot displays a paneled line graph view of a series or column ordered by season. This view is only available for workfiles with quarterly, monthly, or semi-annual frequencies.\nwhere o1 , o2 , ..., are series or group objects."}, "setattr": {"uri": "graphcmd-setattr", "anchor": "", "usage": "graph_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "setbpelem": {"uri": "graphcmd-setbpelem", "anchor": "", "usage": "graph_name. setbpelem element_list", "description": "Enable/disable individual boxplot elements.", "long_description": "The element_list may contain one or more of the following:\n\nmedian, med / -median, -med [Show / Do not show] the medians. mean / -mean [Show / Do not show] the means. whiskers, w / -whiskers, -w [Show / Do not show] the whiskers (lines from the box to the staples). staples, s / -staples, -s [Show / Do not show] the staples (lines drawn at the last data point within the inner fences). near / -near [Show /Do not show] the near outliers (values between the inner and outer fences). far / -far [Show / Do not show] the far outliers (values beyond the outer fences). width (arg) (default =\u201cfixed\u201d ) Set the width settings for the boxplots, where arg is one of: \u201cfixed\u201d (uniform width), \u201cn\u201d (proportional to sample size), \u201crootn\u201d (proportional to the square root of sample size). ci( arg) (default= \u201cshade\u201d ) Set the display method for the median confidence intervals, where arg is one of: \u201cnone\u201d (do not display), \u201cshade\u201d (shaded intervals), \u201cnotch\u201d (notched intervals)."}, "setelem": {"uri": "graphcmd-setelem", "anchor": "", "usage": "graph_name. setelem ( graph_elem ) argument_list", "description": "Set individual line, bar and legend options for each series in the graph.", "long_description": "where graph_elem is the identifier for the graph element whose options you wish to modify:\n\ninteger Index for graph element (for non-boxplot graphs). For example, if you provide the integer \u201c2\u201d, EViews will modify the second line in the graph. box_elem Boxplot element to be modified: box (\u201cb\u201d), median (\u201cmed\u201d), mean (\u201cmean\u201d), near outliers (\u201cnear\u201d or \u201cno\u201d), far outliers (\u201cfar\u201d or \u201cfo\u201d), whiskers (\u201cw\u201d), staples (\u201cs\u201d). For boxplot graphs only.\nThe argument list for setelem may contain one or more of the following:\n\nsymbol( arg ) Sets the drawing symbol: arg can be an integer from 1\u201318, or one of the matching keywords. \u201cobslabel\u201d and \u201cdotobslabel\u201d, and \u201cdotobslabelcircle\u201d use the observation label as the symbol. Selecting a symbol automatically turns on symbol use. The \u201cnone\u201d option turns off symbol use. symbolsize( arg ), symsize( arg ) Sets the symbol size. arg may be an integer between 1-8, where 1 is the smallest symbol and 8 is the largest, or one of the keywords: \u201cXS\u201d (X-Small), \u201cS\u201d (Small), \u201cM\u201d (Medium), \u201cL\u201d (Large), \u201cXL\u201d (X-Large), \u201c2XL\u201d (2X-Large), \u201c3XL\u201d (3X-Large), \u201c4XL\u201d (4X-Large). linecolor( arg ), lcolor( arg ) Sets the line and symbol color. arg may be one of the predefined color keywords, or it may be specified using individual red-green-blue (RGB) components using the \u201c@RGB\u201d or \u201c@HEX\u201d functions. The arguments to the @RGB function are a set of three integers from 0 to 255, representing the RGB values of the color. The arguments to the \u201c@HEX\u201d function are a set of six characters representing the RGB values of the color in hexadecimal. Each two character set represents a red, green or blue component in the range '00' to 'FF'. For a description of the available color keywords see \u201cColor definitions\u201d . linewidth( n1 ), lwidth( n1 ) Sets the line and symbol width: n1 should be a number between \u201c.25\u201d and \u201c5\u201d, indicating the width in points. linepattern( arg ), lpat( arg ) Sets the line pattern to the type specified by arg . arg can be an integer from 1\u201312 or one of the matching keywords. Note that the option interacts with the graph options for \u201ccolor\u201d, \u201clineauto\u201d, \u201clinesolid\u201d, \u201clinepat\u201d (see Graph::options , for details). You may need to set the graph option for \u201clinepat\u201d to enable the display of line patterns. See Graph::options . Note also that the patterns with index values 7\u201311 have been modified since version 5.0. In particular, the \u201cnone\u201d option has been moved to position 12. The \u201cnone\u201d option turns off lines and uses only symbols. lineopacity( arg ), Sets the line opacity to the value specified by arg . arg can be an value from 0 to 1. Setting the level to 0.0 will make the object completely transparent (0% opacity) while a value of 1.0 will make the object completely opaque (100% opacity). fillcolor( arg ), fcolor( arg ) Sets the fill color for symbols, bars, and pies. arg may be one of the predefined color keywords, or it may be specified using individual red-green-blue (RGB) components using the \u201c@RGB\u201d function or \u201c@HEX\u201d functions. The arguments to the @RGB function are a set of three integers from 0 to 255, representing the RGB values of the color. The arguments to the \u201c@HEX\u201d function are a set of six characters representing the RGB values of the color in hexadecimal. Each two character set represents a red, green or blue component in the range '00' to 'FF'. For a description of the available color keywords see \u201cColor definitions\u201d . fillgray( n1 ), gray( n1 ) Sets the gray scale for bars and pies: n1 should be an integer from 1\u201315 corresponding to one of the predefined gray scale settings (from lightest to darkest). fillhatch( arg ), hatch( arg ) Sets the hatch characteristics for bars and pies: arg can be an integer from 1\u20137, or one of the matching keywords. fillopacity( arg ), Sets the fill opacity to the value specified by arg . arg can be an value from 0 to 1. Setting the level to 0.0 will make the object completely transparent (0% opacity) while a value of 1.0 will make the object completely opaque (100% opacity). preset( n1 ) Sets line and fill characteristics to the specified EViews preset values, where n1 is an integer from 1\u201330. Simultaneously sets \u201clinecolor\u201d, \u201clinepattern\u201d, \u201clinewidth\u201d, \u201csymbol\u201d, \u201cfillcolor\u201d, \u201cfillgray\u201d, and \u201cfillhatch\u201d to the EViews predefined definitions for graph element n1 . When applied to boxplots, the line color of the specified element will be applied to the box, whiskers, and staples. default( n1 ) Sets line and fill characteristics to the specified user-defined default settings where n1 is an integer from 1\u201330. Simultaneously sets \u201clinecolor\u201d, \u201clinepattern\u201d, \u201clinewidth\u201d, \u201csymbol\u201d, \u201cfillcolor\u201d, \u201cfillgray\u201d, and \u201cfillhatch\u201d to the values in the user-defined global defaults for graph element n1 . When applied to boxplots, the line color of the specified settings will be applied to the box, whiskers, and staples. axis( arg ), scale( arg ) Assigns the element to an axis: left (\u201cl\u201d), right (\u201cr\u201d), bottom (\u201cb\u201d), top (\u201ct\u201d). The latter two options are only applicable for XY and scatter graphs ( scat , xyarea , xybar , xyline , xypair ). legend( str ) Assigns legend text for the element. str will be used in the legend to label the element.\nColor definitions\ncolor_arg specifies the color to be employed in the arguments above. The color may be specified using predefined color names, by specifying the individual red-green-blue (RGB) components using the special \u201c@RGB\u201d function , or by specifying the individual red-green-blue (RGB) components in hexadecimal using the special \u201c@HEX\u201d function .\nThe predefined colors are given by the keywords (with their RGB and HEX equivalents):\n\nblue @rgb(0, 0, 255) @hex(0000ff) red @rgb(255, 0, 0) @hex(ff0000) ltred @rgb(255, 168, 168) @hex(ffa8a8) green @rgb(0, 128, 0) @hex(008000) black @rgb(0, 0, 0) @hex(000000) white @rgb(255, 255, 255) @hex(ffffff) purple @rgb(128, 0, 128) @hex(800080) orange @rgb(255, 128, 0) @hex(ff8000) yellow @rgb(255, 255, 0) @hex(ffff00) gray @rgb(128, 128, 128) @hex(808080) ltgray @rgb(192, 192, 192) @hex(c0c0c0)"}, "setfont": {"uri": "graphcmd-setfont", "anchor": "", "usage": "graph_name. setfont font_args", "description": "Set the font for text in the graph.", "long_description": "The font_args may include one or more of the following:\n\ntype([face], [pt] , [+/- b ], [+/- i ], [+/- u ], [+/- s ]) Set characteristics of the font for the graph element type . The font name (face) , size (pt) , and characteristics are all optional. face should be a valid font name, enclosed in double quotes. pt should be the font size in points. The remaining options specify whether to turn on/off boldface (b), italic (i), underline (u), and strikeout (s) styles.\nand type is one of \u201call\u201d, \u201caxes\u201d, \u201clegend\u201d, \u201ctext\u201d, \u201cobs\u201d, where \u201caxes\u201d refers to the axes labels, \u201clegend\u201d refers to the graph legend, \u201ctext\u201d refers to the added text, \u201cobs\u201d refers to the observation scale, and \u201call\u201d refers to all of the elements."}, "setobslabel": {"uri": "graphcmd-setobslabel", "anchor": "", "usage": "graph_name. setobslabel ([step_options,] init_options) [string1 string2 ...]", "description": "Sets custom axis labels for the observation scale of a graph.", "long_description": "Follow the keyword with a list of axis labels, or the name of a series when the \u201cseries\u201d init_option is used.\nTo preserve case, enclose the label in quotation marks. To hide a label, use \u201c\u201d. If the number of labels provided is less than the number of existing labels, the remaining labels will not be affected."}, "setupdate": {"uri": "graphcmd-setupdate", "anchor": "", "usage": "graph_name. setupdate (options) [sample]", "description": "Set the update state of a graph object.", "long_description": "Follow the name of the graph with a period, the keyword setupdate , and the update setting.\nOptionally, include a sample with the \u201cmanual\u201d or \u201cautomatic\u201d options to restrict updates to data changes made within the sample period. If you do not include a sample, updates will occur according to changes in the workfile sample."}, "sort": {"uri": "graphcmd-sort", "anchor": "", "usage": "graph_name. sort (series1[, series2, series3])", "description": "Sort the series in a graph.", "long_description": "The sort command sorts all series in the graph on the basis of the values of up to three series. For purposes of sorting, NAs are considered to be smaller than any other value. By default, EViews will sort the series in ascending order. You may use options to override the sort order.\nNote that sorting cannot be undone. You may wish to freeze or copy the graph before applying the sort.\nFollow the keyword with a list of the series by which you wish to sort the graph. If you list two or more series, sort uses the values of the second series to resolve ties from the first series, and values of the third series to resolve ties from the second.\nThe series may be specified using the series display name or the index of the series in the graph. For example, if you provide the integer \u201c2\u201d, EViews will use the second series. To sort by observation labels, use the integer \u201c0\u201d or the keyword \u201cObs label\u201d.\nTo sort in descending order, precede the series name with a minus sign (\u201c-\u201d).\nNote that a graph with more than 500 observations cannot be sorted."}, "spike": {"uri": "graphmaster-spike", "anchor": "", "usage": "spike (options) o1 [o2 o3 ... ]\nobject_name. spike (options) [categorical_spec(arg)]", "description": "Display a spike graph view.", "long_description": "where o1 , o2 , ..., are series or group objects.\nFollowing the spike keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "template": {"uri": "graphcmd-template", "anchor": "", "usage": "graph_name. template (options) template", "description": "Apply a template to a graph object.", "long_description": "If you apply template to a multiple graph object, the template options will be applied to each graph in the multiple graph. If the template graph is a multiple graph, the options of the first graph will be used.\nFollow the name of the graph to which you want to apply the template options with a period, the keyword template , and the name of a graph template. template may be one of the predefined template keywords: \u201cdefault\u201d (current global defaults), \u201cclassic\u201d, \u201cmodern\u201d, \u201creverse\u201d, \u201cmidnight\u201d, \u201cspartan\u201d, \u201cmonochrome\u201d, or a named graph in the workfile."}, "textdefault": {"uri": "graphcmd-textdefault", "anchor": "", "usage": "graph_name. textdefault text_options", "description": "Change default settings for text objects in the graph.", "long_description": "This command specifies changes in the default settings which will be applied to text objects added subsequently to the graph. If you include the \u201cexisting\u201d option, all of the text default settings will also be applied to existing text objects in the graph.\nwhere text_options include one or more of one of the following:\n\nfont( [face], [pt], [+/- b ], [+/- i ], [+/- u ], [+/- s ] ) Set characteristics of default text font. The font name (face) , size (pt) , and characteristics are all optional. face should be a valid font name, enclosed in double quotes. pt . should be the font size in points. The remaining options specify whether to turn on/off boldface (b), italic (i), underline (u), and strikeout (s) styles. textcolor( arg ) Sets the default color of the text. arg may be one of the predefined color keywords, or it may be specified using individual red-green-blue (RGB) components using the \u201c@RGB\u201d or \u201c@HEX\u201d functions. The arguments to the @RGB function are a set of three integers from 0 to 255, representing the RGB values of the color. The arguments to the \u201c@HEX\u201d function are a set of six characters representing the RGB values of the color in hexadecimal. Each two character set represents a red, green or blue component in the range '00' to 'FF'. For a description of the available color keywords see \u201cColor definitions\u201d . fillcolor( arg ) Sets the default background fill color of the text box. arg may be one of the predefined color keywords, or it may be specified using individual red-green-blue (RGB) components using the \u201c@RGB\u201d or \u201c@HEX\u201d functions. The arguments to the @RGB function are a set of three integers from 0 to 255, representing the RGB values of the color. The arguments to the \u201c@HEX\u201d function are a set of six characters representing the RGB values of the color in hexadecimal. Each two character set represents a red, green or blue component in the range '00' to 'FF'. For a description of the available color keywords see \u201cColor definitions\u201d . framecolor( arg ) Sets the default color of the text box frame. arg may be one of the predefined color keywords, or it may be specified using individual red-green-blue (RGB) components using the \u201c@RGB\u201d or \u201c@HEX\u201d functions. The arguments to the @RGB function are a set of three integers from 0 to 255, representing the RGB values of the color. The arguments to the \u201c@HEX\u201d function are a set of six characters representing the RGB values of the color in hexadecimal. Each two character set represents a red, green or blue component in the range '00' to 'FF'. For a description of the available color keywords see \u201cColor definitions\u201d . existing Apply the default settings to all existing text objects in the graph.\nThe options which support the \u201c\u2013\u201d may be preceded by a \u201c+\u201d or \u201c\u2013\u201d indicating whether to turn on or off the option. The \u201c+\u201d is optional.\nColor definitions\ncolor_arg specifies the color to be employed in the arguments above. The color may be specified using predefined color names, by specifying the individual red-green-blue (RGB) components using the special \u201c@RGB\u201d function , or by specifying the individual red-green-blue (RGB) components in hexadecimal using the special \u201c@HEX\u201d function .\nThe predefined colors are given by the keywords (with their RGB and HEX equivalents):\n\nblue @rgb(0, 0, 255) @hex(0000ff) red @rgb(255, 0, 0) @hex(ff0000) ltred @rgb(255, 168, 168) @hex(ffa8a8) green @rgb(0, 128, 0) @hex(008000) black @rgb(0, 0, 0) @hex(000000) white @rgb(255, 255, 255) @hex(ffffff) purple @rgb(128, 0, 128) @hex(800080) orange @rgb(255, 128, 0) @hex(ff8000) yellow @rgb(255, 255, 0) @hex(ffff00) gray @rgb(128, 128, 128) @hex(808080) ltgray @rgb(192, 192, 192) @hex(c0c0c0)"}, "update": {"uri": "graphcmd-update", "anchor": "", "usage": "graph_name. update", "description": "Update graph.", "long_description": "This command updates a graph that has updating turned on."}, "xyarea": {"uri": "graphmaster-xyarea", "anchor": "", "usage": "xyarea (options) o1 o2 [o3 ... ]\nobject_name. xyarea (options)", "description": "Display an XY area graph view (if possible).", "long_description": "An XY area graph plots the values of one series or column against another. It is similar to a XY line, but with the region between the line and the zero horizontal axis filled.\n(Note that XY area graphs are typically employed only when data along the horizontal axis are ordered.)\nThere must be at least two series or columns to create an XY area graph. By default, the first series or column will be located along the horizontal axis, with the remaining data on the vertical axis. You may optionally choose to plot the data in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth, or to construct graphs using all possible pairs (or the lower triangular set of pairs).\nwhere o1 , o2 , ..., are series or group objects."}, "xybar": {"uri": "graphmaster-xybar", "anchor": "", "usage": "xybar (options) o1 o2 [o3 ... ]\nobject_name. xybar (options)", "description": "Display an XY bar graph view (if possible).", "long_description": "An XY bar graph displays the data in sets of three series or columns as a vertical bar. For a given observation, the values in the first two series or columns define a region along the horizontal axis, while the value in the third series or column defines the vertical height of the bar.\nXY bar graphs may, for example, be used to construct variable width histograms.\nwhere o1 , o2 , ..., are series or group objects."}, "xyerrbar": {"uri": "graphmaster-xyerrbar", "anchor": "", "usage": "xyerrbar (options) o1 o2 o3 o4 [o5 ... ]\nobject_name. xyerrbar (options)", "description": "Display an XY error bar graph view (if possible).", "long_description": "The data must be in the form of a multiple of four series or columns. The first series is the x-axis points. The second series is the high error bar and the third series is the low error bar. The fourth series or column is the data of interest plotted as a symbol.\nwhere o1, o2, o3, o4,... are series or group objects."}, "xyline": {"uri": "graphmaster-xyline", "anchor": "", "usage": "xyline (options) o1 o2 [o3 ... ]\nobject_name. xyline (options) [auxiliary_spec(arg)] [categorical_spec(arg)]", "description": "Display an XY line graph view (if possible).", "long_description": "There must be at least two series or columns to create an XY line graph. By default, the first series or column will be located along the horizontal axis, with the remaining data on the vertical axis. You may optionally choose to plot the data in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth, or to construct graphs using all possible pairs (or the lower triangular set of pairs).\nXY line graphs are simply XY plots with lines turned on and symbols turned off (see Graph::setelem ).\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the xyline keyword, you may specify general graph characteristics using options . Available options include plotting the data in pairs or in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "xypair": {"uri": "graphmaster-xypair", "anchor": "", "usage": "xypair (options) o1 o2 [o3 ... ]\nobject_name. xypair (options) [auxiliary_spec(arg)]", "description": "Display an XY pairs graph (if possible).", "long_description": "The data will be plotted in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth. If the number of series or columns is odd, the last one will be ignored.\nXY line graphs are simply XY plots with lines turned on and symbols turned off (see Graph::setelem ). The xypair graph type is equivalent to using xyline with the \u201cmult=pairs\u201d option indicating that the data should be graphed in pairs.\nFollowing the xypair keyword, you may specify general graph characteristics using options . Available options include plotting the data in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d )."}}, "Group": {"[Group]": {"uri": "groupcmd-Group", "anchor": "", "description": "Group of series. Groups are used for working with collections of series objects (series, alphas, links)."}, "@attr": {"uri": "groupcmd-Group", "anchor": "ww227893", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@comobs": {"uri": "groupcmd-Group", "anchor": "ww227887", "usage": "@comobs", "description": "number of observations in the current sample for which each series in the group has a non-missing value (observations in the common sample)."}, "@count": {"uri": "groupcmd-Group", "anchor": "ww227889", "usage": "@count", "description": "number of series in the group."}, "@depends": {"uri": "groupcmd-Group", "anchor": "ww238840", "usage": "@depends", "description": "string containing a list of the series in the current workfile on which this group depends."}, "@description": {"uri": "groupcmd-Group", "anchor": "ww227894", "usage": "@description", "description": "string containing the object description (if available)."}, "@detailedtype": {"uri": "groupcmd-Group", "anchor": "ww227895", "usage": "@detailedtype", "description": "string with the object type: \u201cGROUP\u201d."}, "@displayname": {"uri": "groupcmd-Group", "anchor": "ww227896", "usage": "@displayname", "description": "string containing the Group\u2019s display name. If the Group has no display name set, the name is returned."}, "@maxobs": {"uri": "groupcmd-Group", "anchor": "ww227891", "usage": "@maxobs", "description": "number of non-missing observations in the current sample for the the longest series in the group."}, "@members": {"uri": "groupcmd-Group", "anchor": "ww227897", "usage": "@members", "description": "string containing a space delimited list of the names of the series contained in the Group."}, "@minobs": {"uri": "groupcmd-Group", "anchor": "ww227890", "usage": "@minobs", "description": "number of non-missing observations in the current sample for the shortest series in the group."}, "@name": {"uri": "groupcmd-Group", "anchor": "ww227898", "usage": "@name", "description": "string containing the Group\u2019s name."}, "@remarks": {"uri": "groupcmd-Group", "anchor": "ww227899", "usage": "@remarks", "description": "string containing the Group\u2019s remarks (if available)."}, "@seriesname": {"uri": "groupcmd-Group", "anchor": "ww227904", "usage": "@seriesname(i)", "description": "string containing the name of the i -th series in the group."}, "@type": {"uri": "groupcmd-Group", "anchor": "ww227906", "usage": "@type", "description": "string with the object type: \u201cGROUP\u201d."}, "@updatetime": {"uri": "groupcmd-Group", "anchor": "ww227908", "usage": "@updatetime", "description": "string representation of the time and date at which the Group was last updated."}, "add": {"uri": "groupcmd-add", "anchor": "", "usage": "group_name. add arg1 [arg2 arg3 ...]", "description": "Add series to a group.", "long_description": "List the names of series or a group of series to add to the group."}, "area": {"uri": "graphmaster-area", "anchor": "", "usage": "area (options) o1 [o2 o3 ... ]\nobject_name. area (options) [categorical_spec(arg)]", "description": "Display an area graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the area keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "band": {"uri": "graphmaster-band", "anchor": "", "usage": "band (options) o1 [o2 o3 ... ]\nobject_name. band (options)", "description": "Display an area band graph view (if possible).", "long_description": "An area band graph fills the area between pairs of series or columns of a matrix.\nwhere o1 , o2 , ..., are series or group objects. Following the band keyword, you may specify general graph characteristics using options . Available options include axis settings and template application."}, "bar": {"uri": "graphmaster-bar", "anchor": "", "usage": "bar (options) o1 [o2 o3 ... ]\nobject_name. bar (options) [categorical_spec(arg)]", "description": "Display a bar graph.", "long_description": "(Note: when the individual bars in a bar graph become too thin to be distinguished, the graph will automatically be converted into an area graph; see area .)\nwhere o1 , o2 , ..., are series or group objects. Following the bar keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "boxplot": {"uri": "graphmaster-boxplot", "anchor": "", "usage": "boxplot (options) o1 [o2 o3 ... ]\nobject_name. boxplot (options) [categorical_spec(arg)]", "description": "Display boxplots for each series or column.", "long_description": "where o1 , o2 , ..., are series or group objects. You may specify general options after the boxplot keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "bubble": {"uri": "graphmaster-bubble", "anchor": "", "usage": "group_name. bubble (options)", "description": "Displays a XY..YZ bubble plot.", "long_description": "At least three series must be present in the group. The first series will be plotted on the horizontal axis. The remaining series, aside from the last, will be plotted on the vertical axis. The last series will be used to determine the size of the bubbles."}, "bubbletrip": {"uri": "graphmaster-bubbletrip", "anchor": "", "usage": "group_name. bubbletrip (options)", "description": "Display a bubble triplet plot.", "long_description": "Groups should contain series in multiples of three (triplets). Series not part of a triplet will be ignored. The first series of each triplet will be plotted on the horizontal axis. The second series of the triplet will be plotted on the vertical axis. The last series of the triplet will be used to determine the size of the bubbles."}, "cause": {"uri": "groupcmd-cause", "anchor": "", "usage": "group_name. cause (n, options)", "description": "Granger causality test.", "long_description": "Performs pairwise Granger causality tests between (all possible) pairs of the group of series. If performed on series in a panel workfile, you may optionally choose to perform the Dumitrescu-Hurlin (2012) version of the test."}, "clearcontents": {"uri": "groupcmd-clearcontents", "anchor": "", "usage": "group_name. clearcontents ( start_point , col_range ) n", "description": "Clear (i.e., replace with NAs) a contiguous block of observations in a group.", "long_description": "where start_point specifies the first of n observations to clear. If n is negative, start_point specifies the last of | n | observations to clear. For dated workfiles, start_point should be entered as a date. For panels and undated workfiles, start_point should be an observation number.\nThe col_range option is used to specify the columns to be cleared in the group. It may take one of the following forms:\n\n@all Apply to all series in the group. col Column number or letter ( e.g. , \u201c2\u201d, \u201cB\u201d). Apply to the series corresponding to the column. first_col [ : ] last_col Colon-delimited range of columns (from low to high, e.g. , \u201c3:5\u201d). Apply to all series corresponding to the column range. first_series [ : ] last_series Colon-delimited range of columns (from low to high, e.g. , \u201cseries01:series05\u201d) specified by series names. Apply to all series corresponding to the column range."}, "clearhist": {"uri": "groupcmd-clearhist", "anchor": "", "usage": "group_name. clearhist", "description": "Clear the contents of the history attribute for group objects.", "long_description": "Removes the group\u2019s history attribute, as shown in the label view of the graph."}, "clearremarks": {"uri": "groupcmd-clearremarks", "anchor": "", "usage": "group_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the group\u2019s remarks attribute, as shown in the label view of the group."}, "coint": {"uri": "groupcmd-coint", "anchor": "", "description": "Perform either (1) Johansen\u2019s system cointegration test, (2) Engle-Granger or Phillips-Ouliaris single equation cointegration testing, or (3) Pedroni, Kao, or Fisher panel cointegration testing for the series in the group.", "long_description": "There are three forms for the coint command depending on which form of the test you wish to perform."}, "copy": {"uri": "groupcmd-copy", "anchor": "", "usage": "group_name. copy\ngroup_name. copy dest_name", "description": "Creates a copy of the group.", "long_description": "Creates either a named or unnamed copy of the group."}, "cor": {"uri": "groupcmd-cor", "anchor": "", "usage": "group_name. cor ( options ) [keywords [ @partial z1 z2 z3...]]", "description": "Compute covariances, correlations and other measures of association for the series in a group.", "long_description": "You may compute measures related to Pearson product-moment (ordinary) covariances and correlations, Spearman rank covariances, or Kendall\u2019s tau along with test statistics for evaluating whether the correlations are equal to zero.\nYou should specify keywords indicating the statistics you wish to display from the list below, optionally followed by the keyword @partial and a list of conditioning series or groups (for the group view), or the name of a conditioning matrix (for the matrix view). In the matrix view setting, the columns of the matrix should contain the conditioning information, and the number or rows should match the original matrix.\nYou may specify keywords from one of the four sets (Pearson correlation, Spearman correlation, Kendall\u2019s tau, Uncentered Pearson) corresponding the computational method you wish to employ. (You may not select keywords from more than one set.)\nIf you do not specify keywords , EViews will assume \u201ccorr\u201d and compute the Pearson correlation matrix. Note that Group::cor is equivalent to the Group::cov command with a different default setting.\nPearson Correlation\n\ncov Product moment covariance. corr Product moment correlation. sscp Sums-of-squared cross-products. stat Test statistic ( t -statistic) for evaluating whether the correlation is zero. prob Probability under the null for the test statistic. cases Number of cases. obs Number of observations. wgts Sum of the weights.\nSpearman Rank Correlation\n\nrcov Spearman\u2019s rank covariance. rcorr Spearman\u2019s rank correlation. rsscp Sums-of-squared cross-products. rstat Test statistic ( t -statistic) for evaluating whether the correlation is zero. rprob Probability under the null for the test statistic. cases Number of cases. obs Number of observations. wgts Sum of the weights.\nKendall\u2019s tau\n\ntaub Kendall\u2019s tau-b. taua Kendall\u2019s tau-a. taucd Kendall\u2019s concordances and discordances. taustat Kendall\u2019s score statistic for evaluating whether the Kendall\u2019s tau-b measure is zero. tauprob Probability under the null for the score statistic. cases Number of cases. obs Number of observations. wgts Sum of the weights.\nUncentered Pearson\n\nucov Product moment covariance. ucorr Product moment correlation. usscp Sums-of-squared cross-products. ustat Test statistic ( t -statistic) for evaluating whether the correlation is zero. uprob Probability under the null for the test statistic. cases Number of cases. obs Number of observations. wgts Sum of the weights.\nNote that cases , obs , and wgts are available for each of the methods."}, "correl": {"uri": "groupcmd-correl", "anchor": "", "usage": "group_name. correl (n, options)", "description": "Display autocorrelation and partial correlations.", "long_description": "Displays the autocorrelation and partial correlation functions of the first series in the group , together with the Q -statistics and p -values associated with each lag.\nYou must specify the largest lag n to use when computing the autocorrelations as the first option."}, "cov": {"uri": "groupcmd-cov", "anchor": "", "usage": "group_name. cov ( options ) [keywords [ @partial z1 z2 z3...]]", "description": "Compute covariances, correlations and other measures of association for the series in a group.", "long_description": "You may compute measures related to Pearson product-moment (ordinary) covariances and correlations, Spearman rank covariances, or Kendall\u2019s tau along with test statistics for evaluating whether the correlations are equal to zero.\nYou should specify keywords indicating the statistics you wish to display from the list below, optionally followed by the keyword @partial and a list of conditioning series or groups (for the group view), or the name of a conditioning matrix (for the matrix view).\nYou may specify keywords from one of the four sets (Pearson correlation, Spearman correlation, Kendall\u2019s tau, Uncentered Pearson) corresponding the computational method you wish to employ. (You may not select keywords from more than one set.)\nIf you do not specify keywords , EViews will assume \u201ccov\u201d and compute the Pearson covariance matrix. Note that Group::cov is equivalent to the Group::cor command with a different default setting.\nPearson Correlation\n\ncov Product moment covariance. corr Product moment correlation. sscp Sums-of-squared cross-products. stat Test statistic ( t -statistic) for evaluating whether the correlation is zero. prob Probability under the null for the test statistic. cases Number of cases. obs Number of observations. wgts Sum of the weights.\nSpearman Rank Correlation\n\nrcov Spearman\u2019s rank covariance. rcorr Spearman\u2019s rank correlation. rsscp Sums-of-squared cross-products. rstat Test statistic ( t -statistic) for evaluating whether the correlation is zero. rprob Probability under the null for the test statistic. cases Number of cases. obs Number of observations. wgts Sum of the weights.\nKendall\u2019s tau\n\ntaub Kendall\u2019s tau-b. taua Kendall\u2019s tau-a. taucd Kendall\u2019s concordances and discordances. taustat Kendall\u2019s score statistic for evaluating whether the Kendall\u2019s tau-b measure is zero. tauprob Probability under the null for the score statistic. cases Number of cases. obs Number of observations. wgts Sum of the weights.\nUncentered Pearson\n\nucov Product moment covariance. ucorr Product moment correlation. usscp Sums-of-squared cross-products. ustat Test statistic ( t -statistic) for evaluating whether the correlation is zero. uprob Probability under the null for the test statistic. cases Number of cases. obs Number of observations. wgts Sum of the weights.\nNote that cases , obs , and wgts are available for each of the methods.\n"}, "cross": {"uri": "groupcmd-cross", "anchor": "", "usage": "group_name. cross (n,options)", "description": "Displays cross correlations (correlograms) for a pair of series.", "long_description": "You must specify the number of lags n to use in computing the cross correlations as the first option. Cross correlations will be computed for the first two series in the group."}, "ddloadtmpl": {"uri": "groupcmd-ddloadtmpl", "anchor": "", "usage": "group_name. ddloadtmpl( options ) template_name", "description": "Loads a dated data table template for the group.", "long_description": "template_name should be the name of a previously saved dated data table template."}, "ddrowopts": {"uri": "groupcmd-ddrowopts", "anchor": "", "usage": "group_name. ddrowopts( series, row ) args", "description": "Set row-specific options for dated date tables.", "long_description": "This proc sets row specific options for the group\u2019s dated data table view. To set default settings for the dated data table, use the ddtabopts proc.\nYou should provide integers to indicate the series and row number you wish to modify as an option to the command, followed by a list of arguments containing the display options for that row."}, "ddsavetmpl": {"uri": "groupcmd-ddsavetmpl", "anchor": "", "usage": "group_name. ddsavetmpl( options ) template_name", "description": "Saves the current dated data table settings as a new template."}, "ddtabopts": {"uri": "groupcmd-ddtabopts", "anchor": "", "usage": "group_name. ddtabopts args", "description": "Set table default options for dated data tables.", "long_description": "Specifies the table default options for the group\u2019s dated data table view. To set row specific options that override the defaults, use the ddrowopts proc."}, "deleteobs": {"uri": "groupcmd-deleteobs", "anchor": "", "usage": "group_name. deleteobs( col, row ) [num_obs]", "description": "Delete observations from a group.", "long_description": "where col is an integer specifying the column to delete, row is an integer specifying the first row to delete, and num_obs specifies the number of observations to delete from the table."}, "display": {"uri": "groupcmd-display", "anchor": "", "usage": "group_name. display object_name", "description": "Display table, graph, or spool output in the group object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the group object."}, "displayname": {"uri": "groupcmd-displayname", "anchor": "", "usage": "group_name. displayname display_name", "description": "Display name for the group object.", "long_description": "Attaches a display name to a group object which may be used to label output in tables and graphs in place of the standard group object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in group object names."}, "distdata": {"uri": "groupcmd-distdata", "anchor": "", "usage": "groupname. distdata ( dtype= dist_type, dist_options ) matrix_name_pattern", "description": "Save distribution plot data to a matrix.", "long_description": "Saves the data used to construct a distribution plot to the workfile.\nsaves the distribution plot data specified by dist_type where dist_type must be one of the following keywords:\n\nkernfit Kernel regression (default) . nnfit Nearest neighbor (local) regression. empqq Empirical quantile-quantile plot.\nThe matrix_name_pattern is used to define a naming pattern for the output matrices; if the pattern is \u201cNAME\u201d, the resulting matrices will be named \u201cNAME01\u201d, \u201cNAME02\u201d, \u2026 and so on, using the next available name."}, "distplot": {"uri": "graphmaster-distplot", "anchor": "", "usage": "distplot (options) o1 [o2 o3 ... ]\nobject_name. distplot (options) analytical_spec ( arg ) [categorical_spec(arg)]", "description": "Display a distribution graph.", "long_description": "where o1 , o2 , ..., are series or group objects.\nWhen used as a command, distplot only allows you to display the default histogram view.\nWhen used as an object view, you must specify the type of distribution graph you wish to create in the analytical_spec . You may select from: histogram, histogram polygon, histogram edge polygon, average shifted histogram, kernel density, theoretical distribution, empirical CDF, empirical survivor, empirical log survivor, or empirical quantile (see \u201cAnalytical Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )"}, "dot": {"uri": "graphmaster-dot", "anchor": "", "usage": "dot (options) o1 [o2 o3 ... ]\nobject_name. dot (options) [categorical_spec(arg)]", "description": "Display a dot plot graph view.", "long_description": "A dot plot is a symbol only version of the line and symbol graph that uses circles to represent the value of each observation.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the dot keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "drop": {"uri": "groupcmd-drop", "anchor": "", "usage": "group_name. drop ser1 [ser2 ser3 ...]", "description": "Drops series from a group.", "long_description": "List the series to be dropped from the group object."}, "dtable": {"uri": "groupcmd-dtable", "anchor": "", "usage": "group_name. dtable (options)", "description": "Dated data report table.", "long_description": "This group view is designed to make tables for reporting and presenting data, forecasts, and simulation results. You can display various transformations and various frequencies of the data in the same table.\nThe dtable view is currently available only for annual, semi-annual, quarterly, or monthly workfiles."}, "dups": {"uri": "groupcmd-dups", "anchor": "", "usage": "group_name. dups ( opts )", "description": "Duplicate observations display for observations in the group.", "long_description": "A duplicate is defined as two observations with the same values for all series in the group.\nBy default, EViews displays a summary table showing the number of duplicate groups of a given size, but you may use the options to display an alternative view.\nOf particular note is that the spreadsheet and individual duplicates displays are interactive - clicking on rows in one will open the display to show the other. Thus, clicking on a duplicate in the spreadsheet view will jump to show all of the observations that share that duplicate. Similarly, clicking on an observation in the shared individual duplicates view will jump to the corresponding observation in the full spreadsheet."}, "errbar": {"uri": "graphmaster-errbar", "anchor": "", "usage": "errbar (options) o1 o2 [o3 ...]\nobject_name. errbar (options)", "description": "Display an error bar graph view (if possible).", "long_description": "If there are two series or columns, the error bar will show the high and low values in the bar. The optional third series or column will be plotted as a symbol.\nwhere o1 , o2 , ..., are series or group objects."}, "freq": {"uri": "groupcmd-freq", "anchor": "", "usage": "group_name. freq (options)", "description": "Compute frequency tables.", "long_description": "When used with a group containing a single series, freq performs a one-way frequency tabulation. The options allow you to control binning (grouping) of observations.\nWhen used with a group containing multiple series, freq produces an N -way frequency tabulation for all of the series in the group."}, "hilo": {"uri": "graphmaster-hilo", "anchor": "", "usage": "hilo (options) o1 o2 [o3 ...]\nobject_name. hilo (options)", "description": "Display a high-low[-open-close] graph view (if possible).", "long_description": "where o1 , o2 , ..., are series or group objects. For a high-low[-open-close] graph, EViews uses the first series or column as the high series, the second series or column as the low series, and an optional third series or column as the close series. If four series or columns are provided, EViews will use them in the following order: high-low-open-close.\nNote that if you wish to display a high-low-open graph, you should use an \u201cNA\u201d-series for the close values."}, "insertobs": {"uri": "groupcmd-insertobs", "anchor": "", "usage": "group_name. insertobs (startpoint, col_range) n", "description": "Shift the observations of the series in the group up or downwards, inserting blank observations.", "long_description": "Where startpoint specifies the first or last observation from which the observations are shifted. For dated workfiles, startpoint should be entered as a date. For panels and non-dated workfiles startpoint should be an observation number.\nThe col_range option is used to describe the columns to be shifted in the group. It may take one of the following forms:\n\n@all Apply to all series in the group. col Column number or letter ( e.g. , \u201c2\u201d, \u201cB\u201d). Apply to the series corresponding to the column. first_col [ : ] last_col Colon delimited range of columns (from low to high, e.g. , \u201c3:5\u201d). Apply to all series corresponding to the column range. first_series [ : ] last_series Colon delimited range of columns (from low to high, e.g. , \u201cseries01:series05\u201d) specified by the series names. Apply to all series corresponding to the column range.\nn specifies the number of observations shifted."}, "label": {"uri": "groupcmd-label", "anchor": "", "usage": "group_name. label\ngroup_name. label (options) [text]", "description": "Display or change the label view of a group, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the group label."}, "line": {"uri": "graphmaster-line", "anchor": "", "usage": "line (options) o1 [o2 o3 ... ]\nobject_name. line (options) [categorical_spec(arg)]", "description": "Display a line graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the line keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "lrcov": {"uri": "groupcmd-lrcov", "anchor": "", "usage": "Group View:\tgroup_name. lrcov ( options )", "description": "Compute the symmetric, one-sided, or strict one-sided long-run covariance matrix for a group of series."}, "makepcomp": {"uri": "groupcmd-makepcomp", "anchor": "", "usage": "group_name. makepcomp (options) output_list", "description": "Save the scores from a principal components analysis of the series in a group.", "long_description": "where the output_list is a list of names identifying the saved components. EViews will save the first [img:../content/images/groupcmd.109.33.1.jpg] components corresponding to the [img:../content/images/groupcmd.109.33.2.jpg] elements in output_list , up to the total number of series in the group."}, "makesystem": {"uri": "groupcmd-makesystem", "anchor": "", "usage": "group_name. makesystem (options) [x1 x2 x3 ...] [ @eqreg w1 w2 ...] [ @inst z1 z2 ...] [ @eqinst z3 z4 ...]", "description": "Create system from a group.", "long_description": "Creates a system of equations out of the variables in the group. Each series in the group will be used as the dependent variable in an equation. The [ x1 x2 x3 ...] list consists of regressors with common coefficients in the system. The @eqreg list consists of regressors with different coefficients in each equation. The list of variables that follow @inst are the common instruments. The list of variables that follow @eqinst are the equation specific instruments."}, "makewhiten": {"uri": "groupcmd-makewhiten", "anchor": "", "usage": "Group View:\tgroup_name. makewhiten ( options ) out_specification", "description": "Whiten the series in the group.", "long_description": "Estimate a VAR( [img:../content/images/groupcmd.109.35.1.jpg] ) for the series in the group, compute the residuals, and save the results into whitened series.\nwhere out_specification is either a list of names for the output series, one per series in the original group, or is a wildcard expression. Note that wildcards may not be used if the original group contains series expressions."}, "members": {"uri": "groupcmd-members", "anchor": "", "usage": "Group View:\tgroup_name. members", "description": "Display the members of the group."}, "mixed": {"uri": "graphmaster-mixed", "anchor": "", "usage": "group_name. mixed (options) type_list", "description": "Plots a graph with various graph types.", "long_description": "The type_list argument controls the types of graphs included. Include a space delimited list of graph type keywords along with the series attached to that type. Available graph types are \u201cline\u201d, \u201cbar\u201d, \u201carea\u201d, \u201cspike\u201d, \u201cband\u201d, \u201cstackedline\u201d, \u201cstackedbar\u201d, \u201cstackedarea\u201d, and \u201cstackedspike\u201d.\nEach keyword should be followed by parenthesis containing a comma separated list of series which will be graphed with that type. Series can be specified by name or by a number corresponding to their position in the group."}, "olepush": {"uri": "groupcmd-olepush", "anchor": "", "usage": "group_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "pcomp": {"uri": "groupcmd-pcomp", "anchor": "", "usage": "group_name. pcomp (options) [indices]", "description": "Principal components analysis.", "long_description": "where the elements to display in loadings, scores, and biplot graph form (\u201cout=loadings\u201d, \u201cout=scores\u201d or \u201cout=biplot\u201d) are given by the optional indices , ( e.g. , \u201c1 2 3\u201d or \u201c2 3\u201d). If indices is not provided, the first two elements will be displayed."}, "pie": {"uri": "graphmaster-pie", "anchor": "", "usage": "pie (options) o1 o2 [o3 ... ]\nobject_name. pie (options) [categorical_spec(arg)]", "description": "Display a pie chart view.", "long_description": "In the default setting, there will be one pie for each date or observation number. Each series or column of data is shown as a wedge in a different color/pattern, where the width of the wedge equals the percentage contribution of the series or column to the total of all listed series or columns. Negative and missing values are treated as zeros.\nwhere o1 , o2 , ..., are series or group objects. You may specify general graph characteristics by including options following the pie keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "qqplot": {"uri": "graphmaster-qqplot", "anchor": "", "usage": "qqplot (options) o1 [o2 o3 ... ]\nobject_name. qqplot (options) analytical_spec(arg) [categorical_spec(arg)]", "description": "Display a quantile-quantile graph.", "long_description": "Plots the (empirical) quantiles of a series or matrix column against either the quantiles of a theoretical distribution or the empirical quantiles of other series or columns in the group or matrix. You may specify the theoretical distribution and/or the method used to compute the empirical quantiles as options.\nwhere o1 , o2 , ..., are series or group objects.\nWhen used as a command, qqplot displays the theoretical qq-plot against a fitted normal distribution.\nWhen used to display the view of an object, you must specify a theoretical or empirical quantile graph in the analytical_spec (see \u201cAnalytical Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "reorder": {"uri": "groupcmd-reorder", "anchor": "", "usage": "group_name. reorder ( options ) arg", "description": "Reorder the members of the group.", "long_description": "The members of the group will be re-ordered based on the ordering given by arg . arg is either a list of variable names denoting the new ordering, or a keyword specifying a metric to use to compute the re-ordering:\n\n@first Order the group members based upon their first value (ignoring NAs). @firstna Order the group members based upon their first value (treating NAs as a value). @last Order the group members based upon their last value (ignoring NAs). @lastna Order the group members based upon their last value (treating NAs as a value). @max Order the group members based upon their maximum value. @mean Order the group members based upon their mean. @median Order the group members based upon their median value. @min Order the group members based upon their minimum value. @obs Order the group members based upon the number of non-NA observations. @rand Randomize the ordering. @reverse Reverse the current ordering."}, "resample": {"uri": "groupcmd-resample", "anchor": "", "usage": "group_name. resample (options) [output_spec]", "description": "Resample from observations in a group.", "long_description": "You should follow the resample keyword and options with and an output_spec containing a list of names or a wildcard expression identifying the series to hold the output. If a list is used to identify the targets, the number of target series must match the number of names implied by the keyword. If you do not provide an output_spec , the output names will be formed using the names of the original series combined with the string specified by the suffix option."}, "scat": {"uri": "graphmaster-scat", "anchor": "", "usage": "scat (options) o1 o2 [o3 ... ]\nobject_name. scat (options) [auxiliary_spec(arg)] [categorical_spec(arg)]", "description": "Display a scatterplot (if possible).", "long_description": "A scatterplot graph plots the values of one series or column against another using symbols.\nThere must be at least two series or columns to create a scatterplot. By default, the first series or column will be located along the horizontal axis, and the remaining data on the vertical axis. You may optionally choose to plot the data in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth, or to construct graphs using all possible pairs (or the lower triangular set of pairs).\nScatterplots are simply XY-line plots with symbols turned on and lines turned off (see Graph::setelem ).\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the scat keyword, you may specify general graph characteristics using options . Available options include plotting the data in pairs or in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "scatmat": {"uri": "graphmaster-scatmat", "anchor": "", "usage": "scatmat (options) o1 o2 [o3 ... ]\nobject_name. scatmat (options) [auxiliary_spec(arg)]", "description": "Display a matrix of scatterplots.", "long_description": "The scatmat view forms pairs using all possible pairwise combinations for the series or columns and constructs a plot for each pair, using specialized positioning and axis labeling.\nScatterplots are simply XY-line plots with symbols turned on and lines turned off (see Graph::setelem ). The scatmat graph type is equivalent to using scat with the \u201cmult=mat\u201d or \u201cmult=lower\u201d option indicating that the data should be graphed using the full or lower-triangular matrix of pairs.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the scatmat keyword, you may specify general graph characteristics using options . Available options include template application and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d )."}, "scatpair": {"uri": "graphmaster-scatpair", "anchor": "", "usage": "scatpair (options) o1 o2 [o3 ... ]\nobject_name. scatpair (options) [auxiliary_spec(arg)]", "description": "Display a scatterplot pairs graph (if possible).", "long_description": "The data will be plotted in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth. If the number of series or columns is odd, the last one will be ignored.\nScatterplots are simply XY plots with symbols turned on and lines turned off (see Graph::setelem ). The scatpair graph type is equivalent to using scat with the \u201cmult=pairs\u201d option indicating that the data should be graphed in pairs.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the scatpair keyword, you may specify general graph characteristics using options . Available options include plotting the data in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d )."}, "seasplot": {"uri": "graphmaster-seasplot", "anchor": "", "usage": "seasplot (options) o1 [o2 o3 ... ]\nobject_name. seasplot (options)", "description": "Display a seasonal line graph view.", "long_description": "seasplot displays a paneled line graph view of a series or column ordered by season. This view is only available for workfiles with quarterly, monthly, or semi-annual frequencies.\nwhere o1 , o2 , ..., are series or group objects."}, "setattr": {"uri": "groupcmd-setattr", "anchor": "", "usage": "group_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "setfillcolor": {"uri": "groupcmd-setfillcolor", "anchor": "", "usage": "group_name. setfillcolor ( spec ) fill_color_args", "description": "Set the fill (background) color used in the group spreadsheet using values in the spreadsheet or in a different series.", "long_description": "where the required spec is one of the following:\n\ntype = arg Type of fill coloring for spreadsheet cells: \u201csingle\u201d (single color), \u201cposneg\u201d (positive-negative single threshold), \u201crange\u201d (single range coloring), \u201chilo\u201d (high-low-median), \u201ccustom\u201d (custom coloring). s = arg Colormap source: \u201cnone\u201d (do not use a colormap and therefore do not color) or \u201cseries\u201d (use the same colormap used by the individual series.\nThe first form specifies a colormap for all of the series in the group. The second form, uses individual colormaps obtained from the individual series."}, "setformat": {"uri": "groupcmd-setformat", "anchor": "", "usage": "group_name. setformat ( col_range ) format_arg", "description": "Set the display format for cells in a group spreadsheet view.", "long_description": "where format_arg is a set of arguments used to specify format settings. If necessary, you should enclose the format_arg in double quotes.\nThe col_range option is used to describe the columns to be updated in groups. It may take one of the following forms:\n\n@all Apply to all series in the group. col Column number or letter ( e.g. , \u201c2\u201d, \u201cB\u201d). Apply to the series corresponding to the column. first_col [ : ] last_col Colon delimited range of columns (from low to high, e.g. , \u201c3:5\u201d). Apply to all series corresponding to the column range. first_series [ : ] last_series Colon delimited range of columns (from low to high, e.g. , \u201cseries01:series05\u201d) specified by the series names. Apply to all series corresponding to the column range.\nTo format numeric values, you should use one of the following format specifications:\n\ng [.precision] significant digits f [.precision] fixed decimal places c [.precision] fixed characters e [.precision] scientific/float p [.precision] percentage r [.precision] fraction\nTo specify a format that groups digits into thousands using a comma separator, place a \u201ct\u201d after the format character. For example, to obtain a fixed number of decimal places with commas used to separate thousands, use \u201cft [.precision] \u201d.\nTo use the period character to separate thousands and commas to denote decimal places, use \u201c..\u201d (two periods) when specifying the precision. For example, to obtain a fixed number of characters with a period used to separate thousands, use \u201cct [..precision] \u201d.\nIf you wish to display negative numbers surrounded by parentheses ( i.e. , display the number -37.2 as \u201c(37.2)\u201d), you should enclose the format string in \u201c()\u201d ( e.g. , \u201cf(.8)\u201d).\nTo format numeric values using date and time formats, you may use a subset of the possible date format strings (see \u201cDate Formats\u201d ). The possible format arguments, along with an example of the date number 730856.944793113 (January 7, 2002 10:40:30.125 p.m) formatted using the argument are given by:\n\nWF (uses current EViews workfile period display format) YYYY \u201c2002\u201d YYYY-Mon \u201c2002-Jan\u201d YYYYMon \u201c2002 Jan\u201d YYYY[M]MM \u201c2002[M]01\u201d YYYY:MM \u201c2002:01\u201d YYYY[Q]Q \u201c2002[Q]1\u201d YYYY:Q \u201c2002:Q YYYY[S]S \u201c2002[S]1\u201d (semi-annual) YYYY:S \u201c2002:1\u201d YYYY-MM-DD \u201c2002-01-07\u201d YYYY Mon dd \u201c2002 Jan 7\u201d YYYY Month dd \u201c2002 January 7\u201d YYYY-MM-DD HH:MI \u201c2002-01-07 22:40\u201d YYYY-MM-DD HH:MI:SS \u201c2002-01-07 22:40:30\u201d YYYY-MM-DD HH:MI:SS.SSS \u201c2002-01-07 22:40:30.125\u201d Mon-YYYY \u201cJan-2002\u201d Mon dd YYYY \u201cJan 7 2002\u201d Mon dd, YYYY \u201cJan 7, 2002\u201d Month dd YYYY \u201cJanuary 7 2002\u201d Month dd, YYYY \u201cJanuary 7, 2002\u201d MM/DD/YYYY \u201c01/07/2002\u201d mm/DD/YYYY \u201c1/07/2002\u201d mm/DD/YYYY HH:MI \u201c1/07/2002 22:40\u201d mm/DD/YYYY HH:MI:SS \u201c1/07/2002 22:40:30\u201d mm/DD/YYYY HH:MI:SS.SSS \u201c1/07/2002 22:40:30.125\u201d mm/dd/YYYY \u201c1/7/2002\u201d mm/dd/YYYY HH:MI \u201c1/7/2002 22:40\u201d mm/dd/YYYY HH:MI:SS \u201c1/7/2002 22:40:30\u201d mm/dd/YYYY HH:MI:SS.SSS \u201c1/7/2002 22:40:30.125\u201d dd/MM/YYYY \u201c7/01/2002\u201d dd/mm/YYYY \u201c7/1/2002\u201d DD/MM/YYYY \u201c07/01/2002\u201d dd Mon YYYY \u201c7 Jan 2002\u201d dd Mon, YYYY \u201c7 Jan, 2002\u201d dd Month YYYY \u201c7 January 2002\u201d dd Month, YYYY \u201c7 January, 2002\u201d dd/MM/YYYY HH:MI \u201c7/01/2002 22:40\u201d dd/MM/YYYY HH:MI:SS \u201c7/01/2002 22:40:30\u201d dd/MM/YYYY HH:MI:SS.SSS \u201c7/01/2002 22:40:30.125\u201d dd/mm/YYYY hh:MI \u201c7/1/2002 22:40\u201d dd/mm/YYYY hh:MI:SS \u201c7/1/2002 22:40:30\u201d dd/mm/YYYY hh:MI:SS.SSS \u201c7/1/2002 22:40:30.125\u201d hm:MI am \u201c10:40 pm\u201c hm:MI:SS am \u201c10:40:30 pm\u201d hm:MI:SS.SSS am \u201c10:40:30.125 pm\u201d HH:MI \u201c22:40\u201d HH:MI:SS \u201c22:40:30\u201d HH:MI:SS.SSS \u201c22:40:30.125\u201d hh:MI \u201c22:40\u201d hh:MI:SS \u201c22:40:30\u201d hh:MI:SS.SSS \u201c22:40:30.125\u201d\nNote that the \u201chh\u201d formats display 24-hour time without leading zeros. In our examples above, there is no difference between the \u201cHH\u201d and \u201chh\u201d formats for 10 p.m.\nAlso note that all of the \u201cYYYY\u201d formats above may be displayed using two-digit year \u201cYY\u201d format."}, "setindent": {"uri": "groupcmd-setindent", "anchor": "", "usage": "group_name. setindent ( col_range ) indent_arg", "description": "Set the display indentation for cells in a group object spreadsheet view.", "long_description": "where indent_arg is an indent value specified in 1/5 of a width unit. The width unit is computed from representative characters in the default font for the current spreadsheet (the EViews spreadsheet default font at the time the spreadsheet was created), and corresponds roughly to a single character. Indentation is only relevant for non-center justified cells.\nThe default indentation setttings are taken from the Global Defaults for spreadsheet views ( \u201cSpreadsheet Data Display\u201d ) at the time the spreadsheet was created.\nThe col_range option is used to describe the columns to be updated. See Group::setformat for the syntax for col_range specifications."}, "setjust": {"uri": "groupcmd-setjust", "anchor": "", "usage": "group_name. setjust ( col_range ) format_arg", "description": "Set the justification for cells in the spreadsheet view of the group object.", "long_description": "where format_arg may consist of the following:\n\ntop / middle / bottom Vertical justification setting. auto / left / center / right Horizontal justification setting. Strings are left-justified and numbers are right-justified under \u201cauto\u201d.\nThe col_range option is used to specify the columns to be justified in the group. See Group::setformat for syntax.\nDefault display settings can be set in General Options; see \u201cSpreadsheet Data Display\u201d ."}, "settextcolor": {"uri": "groupcmd-settextcolor", "anchor": "", "usage": "group_name. settextcolor ( spec ) fill_color_args", "description": "Set the text color used in the group spreadsheet using values in the spreadsheet or in a different series.", "long_description": "where the required spec is one of the following:\n\ntype = arg Type of fill coloring for spreadsheet cells: \u201csingle\u201d (single color), \u201cposneg\u201d (positive-negative single threshold), \u201crange\u201d (single range coloring), \u201chilo\u201d (high-low-median), \u201ccustom\u201d (custom coloring). s = arg Colormap source: \u201cnone\u201d (do not use a colormap and therefore do not color) or \u201cseries\u201d (use the same colormap used by the individual series.\nThe first form specifies a colormap for all of the series in the group. The second form, uses individual colormaps obtained from the individual series."}, "setwidth": {"uri": "groupcmd-setwidth", "anchor": "", "usage": "group_name. setwidth ( col_range ) width_arg", "description": "Set the column width for selected columns in a group spreadsheet.", "long_description": "where col_range is either a single column number or letter ( e.g. , \u201c5\u201d, \u201cE\u201d), a colon delimited range of columns (from low to high, e.g. , \u201c3:5\u201d, \u201cC:E\u201d), or the keyword \u201c@ALL\u201d, and width_arg specifies the width unit value. The width unit is computed from representative characters in the default font for the current spreadsheet (the EViews spreadsheet default font at the time the spreadsheet was created), and corresponds roughly to a single character. width_arg values may be non-integer values with resolution up to 1/10 of a width unit."}, "sheet": {"uri": "groupcmd-sheet", "anchor": "", "usage": "group_name. sheet (options)", "description": "Spreadsheet view of a group object."}, "sort": {"uri": "groupcmd-sort", "anchor": "", "usage": "group_name. sort (series1[, series2, series3])", "description": "Change display order for group spreadsheet.", "long_description": "The sort command changes the sort order settings for spreadsheet display of the group.\nFollow the keyword with a list of the series you wish to use to determine display order. You may specify up to three series for sorting. If you list two or more series, sort uses the values of the second series to resolve ties in the first series, and values of the third series to resolve ties in the first and second. By default, EViews will sort in ascending order. For purposes of sorting, NAs are considered to be smaller than any other value.\nThe series may be specified using the name or index of a series in the group. For example, if you provide the integer \u201c2\u201d, EViews will use the second series. To sort by the original workfile observation order, use the integer \u201c0\u201d, or the keyword \u201cobs\u201d.\nTo sort in descending order, precede the series name or index with a minus sign (\u201c-\u201d)."}, "spike": {"uri": "graphmaster-spike", "anchor": "", "usage": "spike (options) o1 [o2 o3 ... ]\nobject_name. spike (options) [categorical_spec(arg)]", "description": "Display a spike graph view.", "long_description": "where o1 , o2 , ..., are series or group objects.\nFollowing the spike keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "stats": {"uri": "groupcmd-stats", "anchor": "", "usage": "group_name. stats (options)", "description": "Descriptive statistics.", "long_description": "Computes and displays a table of means, medians, maximum and minimum values, standard deviations, and other descriptive statistics of a group of series."}, "testbtw": {"uri": "groupcmd-testbtw", "anchor": "", "usage": "group_name. testbtw (options)", "description": "Test equality of the mean, median or variance between (among) series in a group.", "long_description": "Specify the type of test as an option."}, "uroot": {"uri": "groupcmd-uroot", "anchor": "", "usage": "group_name. uroot (options)", "description": "Carries out (panel) unit root tests on a group of series.", "long_description": "When used on a group of series, the procedure will perform panel unit root testing. The panel unit root tests include Levin, Lin and Chu (LLC), Breitung, Im, Pesaran, and Shin (IPS), Fisher - ADF, Fisher - PP, and Hadri tests on levels, or first or second differences."}, "uroot2": {"uri": "groupcmd-uroot2", "anchor": "", "usage": "group_name. uroot2 (options)", "description": "Compute dependent (second generation) panel unit root tests on a group of series.", "long_description": "where group_name is the name of a group object."}, "xyarea": {"uri": "graphmaster-xyarea", "anchor": "", "usage": "xyarea (options) o1 o2 [o3 ... ]\nobject_name. xyarea (options)", "description": "Display an XY area graph view (if possible).", "long_description": "An XY area graph plots the values of one series or column against another. It is similar to a XY line, but with the region between the line and the zero horizontal axis filled.\n(Note that XY area graphs are typically employed only when data along the horizontal axis are ordered.)\nThere must be at least two series or columns to create an XY area graph. By default, the first series or column will be located along the horizontal axis, with the remaining data on the vertical axis. You may optionally choose to plot the data in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth, or to construct graphs using all possible pairs (or the lower triangular set of pairs).\nwhere o1 , o2 , ..., are series or group objects."}, "xybar": {"uri": "graphmaster-xybar", "anchor": "", "usage": "xybar (options) o1 o2 [o3 ... ]\nobject_name. xybar (options)", "description": "Display an XY bar graph view (if possible).", "long_description": "An XY bar graph displays the data in sets of three series or columns as a vertical bar. For a given observation, the values in the first two series or columns define a region along the horizontal axis, while the value in the third series or column defines the vertical height of the bar.\nXY bar graphs may, for example, be used to construct variable width histograms.\nwhere o1 , o2 , ..., are series or group objects."}, "xyerrbar": {"uri": "graphmaster-xyerrbar", "anchor": "", "usage": "xyerrbar (options) o1 o2 o3 o4 [o5 ... ]\nobject_name. xyerrbar (options)", "description": "Display an XY error bar graph view (if possible).", "long_description": "The data must be in the form of a multiple of four series or columns. The first series is the x-axis points. The second series is the high error bar and the third series is the low error bar. The fourth series or column is the data of interest plotted as a symbol.\nwhere o1, o2, o3, o4,... are series or group objects."}, "xyline": {"uri": "graphmaster-xyline", "anchor": "", "usage": "xyline (options) o1 o2 [o3 ... ]\nobject_name. xyline (options) [auxiliary_spec(arg)] [categorical_spec(arg)]", "description": "Display an XY line graph view (if possible).", "long_description": "There must be at least two series or columns to create an XY line graph. By default, the first series or column will be located along the horizontal axis, with the remaining data on the vertical axis. You may optionally choose to plot the data in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth, or to construct graphs using all possible pairs (or the lower triangular set of pairs).\nXY line graphs are simply XY plots with lines turned on and symbols turned off (see Graph::setelem ).\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the xyline keyword, you may specify general graph characteristics using options . Available options include plotting the data in pairs or in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "xypair": {"uri": "graphmaster-xypair", "anchor": "", "usage": "xypair (options) o1 o2 [o3 ... ]\nobject_name. xypair (options) [auxiliary_spec(arg)]", "description": "Display an XY pairs graph (if possible).", "long_description": "The data will be plotted in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth. If the number of series or columns is odd, the last one will be ignored.\nXY line graphs are simply XY plots with lines turned on and symbols turned off (see Graph::setelem ). The xypair graph type is equivalent to using xyline with the \u201cmult=pairs\u201d option indicating that the data should be graphed in pairs.\nFollowing the xypair keyword, you may specify general graph characteristics using options . Available options include plotting the data in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d )."}}, "Logl": {"[Logl]": {"uri": "loglcmd-Logl", "anchor": "", "description": "Likelihood object. Used for performing maximum likelihood estimation of user-specified likelihood functions."}, "@aic": {"uri": "loglcmd-Logl", "anchor": "ww175557", "usage": "@aic", "description": "Akaike information criterion."}, "@attr": {"uri": "loglcmd-Logl", "anchor": "ww196145", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@coefcov": {"uri": "loglcmd-Logl", "anchor": "ww175558", "usage": "@coefcov(i,j)", "description": "covariance of coefficients i and j ."}, "@coefs": {"uri": "loglcmd-Logl", "anchor": "ww175559", "usage": "@coefs(i)", "description": "coefficient i ."}, "@description": {"uri": "loglcmd-Logl", "anchor": "ww191071", "usage": "@description", "description": "string containing the Logl object\u2019s description (if available)."}, "@detailedtype": {"uri": "loglcmd-Logl", "anchor": "ww191049", "usage": "@detailedtype", "description": "returns a string with the object type: \u201cLOGL\u201d."}, "@displayname": {"uri": "loglcmd-Logl", "anchor": "ww181381", "usage": "@displayname", "description": "returns the Logl\u2019s display name. If the Logl has no display name set, the name is returned."}, "@hq": {"uri": "loglcmd-Logl", "anchor": "ww175560", "usage": "@hq", "description": "Hannan-Quinn information criterion."}, "@line": {"uri": "loglcmd-Logl", "anchor": "ww181385", "usage": "@line(i)", "description": "returns a string containing the i -th line of the Logl object."}, "@linecount": {"uri": "loglcmd-Logl", "anchor": "ww181373", "usage": "@linecount", "description": "scalar containing the number of lines in the Logl object."}, "@logl": {"uri": "loglcmd-Logl", "anchor": "ww175561", "usage": "@logl", "description": "value of the log likelihood function."}, "@method": {"uri": "loglcmd-Logl", "anchor": "", "description": "Likelihood object. Used for performing maximum likelihood estimation of user-specified likelihood functions."}, "@name": {"uri": "loglcmd-Logl", "anchor": "ww181386", "usage": "@name", "description": "returns the Logl\u2019s name."}, "@ncoefs": {"uri": "loglcmd-Logl", "anchor": "ww175562", "usage": "@ncoefs", "description": "number of estimated coefficients."}, "@pvals": {"uri": "loglcmd-Logl", "anchor": "", "description": "Likelihood object. Used for performing maximum likelihood estimation of user-specified likelihood functions."}, "@regobs": {"uri": "loglcmd-Logl", "anchor": "ww175563", "usage": "@regobs", "description": "number of observations used in estimation."}, "@remarks": {"uri": "loglcmd-Logl", "anchor": "", "description": "Likelihood object. Used for performing maximum likelihood estimation of user-specified likelihood functions."}, "@sc": {"uri": "loglcmd-Logl", "anchor": "ww175564", "usage": "@sc", "description": "Schwarz information criterion."}, "@smpl": {"uri": "loglcmd-Logl", "anchor": "ww181387", "usage": "@smpl", "description": "sample used for Logl estimation."}, "@stderrs": {"uri": "loglcmd-Logl", "anchor": "ww175565", "usage": "@stderrs(i)", "description": "standard error for coefficient i ."}, "@svector": {"uri": "loglcmd-Logl", "anchor": "ww181388", "usage": "@svector", "description": "returns an Svector where each element is a line of the Logl object."}, "@svectornb": {"uri": "loglcmd-Logl", "anchor": "ww181389", "usage": "@svectornb", "description": "same as @svector, with blank lines removed."}, "@tstats": {"uri": "loglcmd-Logl", "anchor": "ww175569", "usage": "@tstats(i)", "description": "t -statistic value for coefficient i ."}, "@type": {"uri": "loglcmd-Logl", "anchor": "ww181390", "usage": "@type", "description": "returns a string with the object type: \u201cLOGL\u201d."}, "@updatetime": {"uri": "loglcmd-Logl", "anchor": "ww181392", "usage": "@updatetime", "description": "returns a string representation of the time and date at which the Logl was last updated."}, "append": {"uri": "loglcmd-append", "anchor": "", "usage": "logl_name. append text", "description": "Append a specification line to a logl.", "long_description": "Type the text to be added after the append keyword."}, "cellipse": {"uri": "loglcmd-cellipse", "anchor": "", "usage": "logl_name. cellipse (options) restrictions", "description": "Confidence ellipses for coefficient restrictions.", "long_description": "The cellipse view displays confidence ellipses for pairs of coefficient restrictions for an estimation object.\nEnter the object name, followed by a period, and the keyword cellipse . This should be followed by a list of the coefficient restrictions. Joint (multiple) coefficient restrictions should be separated by commas."}, "checkderivs": {"uri": "loglcmd-checkderivs", "anchor": "", "usage": "logl_name. checkderiv (options )", "description": "Check derivatives of likelihood object.", "long_description": "Displays a table containing information on numeric derivatives and, if available, the user-supplied analytic derivatives."}, "clearhist": {"uri": "loglcmd-clearhist", "anchor": "", "usage": "logl_name. clearhist", "description": "Clear the contents of the history attribute for logl objects.", "long_description": "Removes the logl\u2019s history attribute, as shown in the label view of the logl."}, "clearremarks": {"uri": "loglcmd-clearremarks", "anchor": "", "usage": "logl_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the logl\u2019s remarks attribute, as shown in the label view of the logl."}, "coefcov": {"uri": "loglcmd-coefcov", "anchor": "", "usage": "logl_name. coefcov (options)", "description": "Coefficient covariance matrix.", "long_description": "Displays the covariances of the coefficient estimates for an estimated likelihood object."}, "copy": {"uri": "loglcmd-copy", "anchor": "", "usage": "logl_name. copy\nlogl_name. copy dest_name", "description": "Creates a copy of the logl.", "long_description": "Creates either a named or unnamed copy of the logl."}, "display": {"uri": "loglcmd-display", "anchor": "", "usage": "logl_name. display object_name", "description": "Display table, graph, or spool output in the logl object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the logl object."}, "displayname": {"uri": "loglcmd-displayname", "anchor": "", "usage": "logl_name. displayname display_name", "description": "Display names for likelihood objects.", "long_description": "Attaches a display name to a likelihood object which may be used to label output in place of the standard object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in likelihood object names."}, "grads": {"uri": "loglcmd-grads", "anchor": "", "usage": "logl_name. grads (options)", "description": "Gradients of the objective function.", "long_description": "Displays the gradients of the objective function (where available) for an estimated likelihood object.\nThe (default) summary form shows the value of the gradient vector at the estimated parameter values (if valid estimates exist) or at the current coefficient values. Evaluating the gradients at current coefficient values allows you to examine the behavior of the objective function at starting values. The tabular form shows a spreadsheet view of the gradients for each observation. The graphical form shows this information in a multiple line graph."}, "label": {"uri": "loglcmd-label", "anchor": "", "usage": "logl_name. label\nlogl_name. label (options) [text]", "description": "Display or change the label view of likelihood object, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the likelihood object label."}, "makegrads": {"uri": "loglcmd-makegrads", "anchor": "", "usage": "logl_name. makegrads (options) [ser1 ser2 ...]", "description": "Make a group containing individual series which hold the gradients of the objective function.", "long_description": "The argument specifying the names of the series is also optional. If the argument is not provided, EViews will name the series \u201cGRAD##\u201d where ## is a number such that \u201cGRAD##\u201d is the next available unused name. If the names are provided, the number of names must match the number of target series."}, "makemodel": {"uri": "loglcmd-makemodel", "anchor": "", "usage": "logl_name. makemodel (name) assign_statement", "description": "Make a model from a likelihood object.", "long_description": "If you provide a name for the model in parentheses after the keyword, EViews will create the named model in the workfile. If you do not provide a name, EViews will open an untitled model window if the command is executed from the command line."}, "ml": {"uri": "loglcmd-ml", "anchor": "", "usage": "logl_name. ml (options)", "description": "Maximum likelihood estimation of logl models."}, "olepush": {"uri": "loglcmd-olepush", "anchor": "", "usage": "logl_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "results": {"uri": "loglcmd-results", "anchor": "", "usage": "logl_name. results (options)", "description": "Displays the results view of an estimated likelihood object."}, "setattr": {"uri": "loglcmd-setattr", "anchor": "", "usage": "logl_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "spec": {"uri": "loglcmd-spec", "anchor": "", "usage": "logl_name. spec (options)", "description": "Display the text specification view for logl objects."}, "updatecoefs": {"uri": "loglcmd-updatecoefs", "anchor": "", "usage": "logl_name. updatecoefs", "description": "Update coefficient object values from likelihood object.", "long_description": "Copies coefficients from the likelihood object into the appropriate coefficient vector or vectors.\nFollow the name of the likelihood object by a period and the keyword updatecoefs ."}, "wald": {"uri": "loglcmd-wald", "anchor": "", "usage": "logl_name. wald restrictions", "description": "Wald coefficient restriction test.", "long_description": "Enter the likelihood object name, followed by a period, and the keyword. You must provide a list of the coefficient restrictions, with joint (multiple) coefficient restrictions separated by commas."}}, "Matrix": {"[Matrix]": {"uri": "matrixcmd-Matrix", "anchor": "", "description": "Matrix (two-dimensional array)."}, "@attr": {"uri": "matrixcmd-Matrix", "anchor": "ww215224", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@col": {"uri": "matrixcmd-Matrix", "anchor": "ww215105", "usage": "@col( arg )", "description": "Returns the columns defined by arg . arg may be an integer, vector of integers, string, or svector of strings. Integers correspond to column numbers so that, for example, arg = 2 specifies the second column. Strings correspond to column labels so that arg = \"2\" specifies the first column labeled \u201c2\u201d."}, "@collabels": {"uri": "matrixcmd-Matrix", "anchor": "ww231316", "usage": "@collabels", "description": "string containing the column labels of the matrix."}, "@cols": {"uri": "matrixcmd-Matrix", "anchor": "ww215089", "usage": "@cols", "description": "number of columns in the matrix."}, "@description": {"uri": "matrixcmd-Matrix", "anchor": "ww190748", "usage": "@description", "description": "string containing the Matrix object\u2019s description (if available)."}, "@detailedtype": {"uri": "matrixcmd-Matrix", "anchor": "ww203142", "usage": "@detailedtype", "description": "string with the object type: \u201cMATRIX\u201d."}, "@diag": {"uri": "matrixcmd-Matrix", "anchor": "ww215106", "usage": "@diag", "description": "vector containing the diagonal elements of the matrix."}, "@displayname": {"uri": "matrixcmd-Matrix", "anchor": "ww190749", "usage": "@displayname", "description": "string containing the Matrix object\u2019s display name. If the Matrix has no display name set, the name is returned."}, "@dropboth": {"uri": "matrixcmd-Matrix", "anchor": "ww257798", "usage": "@dropboth( arg1, arg2 )", "description": "Returns the matrix with the rows defined by arg1 and columns defined by arg2 removed. The args may be integers, vectors of integers, strings, or svectors of strings. Integers correspond to row or column numbers so that, for example, arg1 = 2 specifies the second row. Strings correspond to row or column labels so that arg2 = \"2\" specifies the first column labeled \u201c2\u201d."}, "@dropcol": {"uri": "matrixcmd-Matrix", "anchor": "ww215107", "usage": "@dropcol( arg )", "description": "Returns the matrix with the columns defined by arg removed. arg may be an integer, vector of integers, string, or svector of strings. Integers correspond to column numbers so that, for example, arg = 2 specifies the second column. Strings correspond to column labels so that arg = \"2\" specifies the first column labeled \u201c2\u201d."}, "@droprow": {"uri": "matrixcmd-Matrix", "anchor": "ww215108", "usage": "@droprow( arg )", "description": "Returns the matrix with rows defined by arg removed. arg may be an integer, vector of integers, string, or svector of strings. Integers correspond to row numbers so that, for example, arg = 2 specifies the second row. Strings correspond to row labels so that arg = \"2\" specifies the first row labeled \u201c2\u201d."}, "@name": {"uri": "matrixcmd-Matrix", "anchor": "ww190750", "usage": "@name", "description": "string containing the Matrix object\u2019s name."}, "@remarks": {"uri": "matrixcmd-Matrix", "anchor": "ww190751", "usage": "@remarks", "description": "string containing the Matrix object\u2019s remarks (if available)."}, "@row": {"uri": "matrixcmd-Matrix", "anchor": "ww215109", "usage": "@row( arg )", "description": "Returns the rows defined by arg . arg may be an integer, vector of integers, string, or svector of strings. Integers correspond to row numbers so that, for example, arg = 2 specifies the second row. Strings correspond to row labels so that arg = \"2\" specifies the first row labeled \u201c2\u201d."}, "@rowlabels": {"uri": "matrixcmd-Matrix", "anchor": "ww231374", "usage": "@rowlabels", "description": "string containing the row labels of the matrix."}, "@rows": {"uri": "matrixcmd-Matrix", "anchor": "ww215070", "usage": "@rows", "description": "number of rows in the matrix."}, "@sub": {"uri": "matrixcmd-Matrix", "anchor": "ww215110", "usage": "@sub( arg1 , arg2 )", "description": "Returns the matrix with rows defined by arg1 and columns with defined by arg2 . The args may be integers, vectors of integers, strings, or svectors of strings. Integers correspond to row or column numbers so that, for example, arg1 = 2 specifies the second row. Strings correspond to row or column labels so that arg2 = \"2\" specifies the first column labeled \u201c2\u201d."}, "@t": {"uri": "matrixcmd-Matrix", "anchor": "ww215111", "usage": "@t", "description": "transpose of the matrix."}, "@type": {"uri": "matrixcmd-Matrix", "anchor": "ww190753", "usage": "@type", "description": "string with the object type: \u201cMATRIX\u201d."}, "@updatetime": {"uri": "matrixcmd-Matrix", "anchor": "ww190755", "usage": "@updatetime", "description": "string representation of the time and date at which the Matrix was last updated."}, "area": {"uri": "graphmaster-area", "anchor": "", "usage": "area (options) o1 [o2 o3 ... ]\nobject_name. area (options) [categorical_spec(arg)]", "description": "Display an area graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the area keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "band": {"uri": "graphmaster-band", "anchor": "", "usage": "band (options) o1 [o2 o3 ... ]\nobject_name. band (options)", "description": "Display an area band graph view (if possible).", "long_description": "An area band graph fills the area between pairs of series or columns of a matrix.\nwhere o1 , o2 , ..., are series or group objects. Following the band keyword, you may specify general graph characteristics using options . Available options include axis settings and template application."}, "bar": {"uri": "graphmaster-bar", "anchor": "", "usage": "bar (options) o1 [o2 o3 ... ]\nobject_name. bar (options) [categorical_spec(arg)]", "description": "Display a bar graph.", "long_description": "(Note: when the individual bars in a bar graph become too thin to be distinguished, the graph will automatically be converted into an area graph; see area .)\nwhere o1 , o2 , ..., are series or group objects. Following the bar keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "boxplot": {"uri": "graphmaster-boxplot", "anchor": "", "usage": "boxplot (options) o1 [o2 o3 ... ]\nobject_name. boxplot (options) [categorical_spec(arg)]", "description": "Display boxplots for each series or column.", "long_description": "where o1 , o2 , ..., are series or group objects. You may specify general options after the boxplot keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "bubble": {"uri": "graphmaster-bubble", "anchor": "", "usage": "group_name. bubble (options)", "description": "Displays a XY..YZ bubble plot.", "long_description": "At least three series must be present in the group. The first series will be plotted on the horizontal axis. The remaining series, aside from the last, will be plotted on the vertical axis. The last series will be used to determine the size of the bubbles."}, "bubbletrip": {"uri": "graphmaster-bubbletrip", "anchor": "", "usage": "group_name. bubbletrip (options)", "description": "Display a bubble triplet plot.", "long_description": "Groups should contain series in multiples of three (triplets). Series not part of a triplet will be ignored. The first series of each triplet will be plotted on the horizontal axis. The second series of the triplet will be plotted on the vertical axis. The last series of the triplet will be used to determine the size of the bubbles."}, "clearcollabels": {"uri": "matrixcmd-clearcollabels", "anchor": "", "usage": "matrix_name. clearcollabels", "description": "Clear the column labels in a matrix object."}, "clearhist": {"uri": "matrixcmd-clearhist", "anchor": "", "usage": "matrix_name. clearhist", "description": "Clear the contents of the history attribute for matrix objects.", "long_description": "Removes the matrix\u2019s history attribute, as shown in the label view of the matrix."}, "clearremarks": {"uri": "matrixcmd-clearremarks", "anchor": "", "usage": "matrix_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the matrix\u2019s remarks attribute, as shown in the label view of the matrix."}, "clearrowlabels": {"uri": "matrixcmd-clearrowlabels", "anchor": "", "usage": "matrix_name. clearrowlabels", "description": "Clear the row labels in a matrix object."}, "copy": {"uri": "matrixcmd-copy", "anchor": "", "usage": "matrix_name. copy\nmatrix_name. copy dest_name", "description": "Creates a copy of the matrix.", "long_description": "Creates either a named or unnamed copy of the matrix."}, "cor": {"uri": "matrixcmd-cor", "anchor": "", "usage": "matrix_name. cor ( options ) [keywords [ @partial z1 z2 z3...]]", "description": "Compute covariances, correlations, and other measures of association for the columns in a matrix.", "long_description": "You may compute measures related to Pearson product-moment (ordinary) covariances and correlations, Spearman rank covariances, or Kendall\u2019s tau along with test statistics for evaluating whether the correlations are equal to zero.\nYou should specify keywords indicating the statistics you wish to display from the list below, optionally followed by the keyword @partial and the name of a conditioning matrix. The columns should contain the conditioning variables, and the number of rows should match the original matrix.\nYou may specify keywords from one of the four sets (Pearson correlation, Spearman correlation, Kendall\u2019s tau, Uncentered Pearson) corresponding the computational method you wish to employ. (You may not select keywords from more than one set.)\nIf you do not specify keywords , EViews will assume \u201ccorr\u201d and compute the Pearson correlation matrix. Note that Matrix::cor is equivalent to the Matrix::cov command with a different default setting.\nPearson Correlation\n\ncov Product moment covariance. corr Product moment correlation. sscp Sums-of-squared cross-products. stat Test statistic ( t -statistic) for evaluating whether the correlation is zero. prob Probability under the null for the test statistic. cases Number of cases. obs Number of observations. wgts Sum of the weights.\nSpearman Rank Correlation\n\nrcov Spearman\u2019s rank covariance. rcorr Spearman\u2019s rank correlation. rsscp Sums-of-squared cross-products. rstat Test statistic ( t -statistic) for evaluating whether the correlation is zero. rprob Probability under the null for the test statistic. cases Number of cases. obs Number of observations. wgts Sum of the weights.\nKendall\u2019s tau\n\ntaub Kendall\u2019s tau-b. taua Kendall\u2019s tau-a. taucd Kendall\u2019s concordances and discordances. taustat Kendall\u2019s score statistic for evaluating whether the Kendall\u2019s tau-b measure is zero. tauprob Probability under the null for the score statistic. cases Number of cases. obs Number of observations. wgts Sum of the weights.\nUncentered Pearson\n\nucov Product moment covariance. ucorr Product moment correlation. usscp Sums-of-squared cross-products. ustat Test statistic ( t -statistic) for evaluating whether the correlation is zero. uprob Probability under the null for the test statistic. cases Number of cases. obs Number of observations. wgts Sum of the weights.\nNote that cases , obs , and wgts are available for each of the methods."}, "display": {"uri": "matrixcmd-display", "anchor": "", "usage": "matrix_name. display object_name", "description": "Display table, graph, or spool output in the matrix object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the matrix object."}, "displayname": {"uri": "matrixcmd-displayname", "anchor": "", "usage": "matrix_name. displayname display_name", "description": "Display names for matrix objects.", "long_description": "Attaches a display name to a matrix object which may be used to label output in place of the standard matrix object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in matrix object names."}, "distplot": {"uri": "graphmaster-distplot", "anchor": "", "usage": "distplot (options) o1 [o2 o3 ... ]\nobject_name. distplot (options) analytical_spec ( arg ) [categorical_spec(arg)]", "description": "Display a distribution graph.", "long_description": "where o1 , o2 , ..., are series or group objects.\nWhen used as a command, distplot only allows you to display the default histogram view.\nWhen used as an object view, you must specify the type of distribution graph you wish to create in the analytical_spec . You may select from: histogram, histogram polygon, histogram edge polygon, average shifted histogram, kernel density, theoretical distribution, empirical CDF, empirical survivor, empirical log survivor, or empirical quantile (see \u201cAnalytical Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )"}, "dot": {"uri": "graphmaster-dot", "anchor": "", "usage": "dot (options) o1 [o2 o3 ... ]\nobject_name. dot (options) [categorical_spec(arg)]", "description": "Display a dot plot graph view.", "long_description": "A dot plot is a symbol only version of the line and symbol graph that uses circles to represent the value of each observation.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the dot keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "errbar": {"uri": "graphmaster-errbar", "anchor": "", "usage": "errbar (options) o1 o2 [o3 ...]\nobject_name. errbar (options)", "description": "Display an error bar graph view (if possible).", "long_description": "If there are two series or columns, the error bar will show the high and low values in the bar. The optional third series or column will be plotted as a symbol.\nwhere o1 , o2 , ..., are series or group objects."}, "export": {"uri": "matrixcmd-export", "anchor": "", "usage": "matrix_name. export (options) [path\\]file_name\nmatrix_name. export ( options ) [path\\]file_name [table_description]", "description": "Export matrix to disk as an Excel 2007 XLSX, CSV, tab-delimited ASCII text, RTF, HTML, Enhanced Metafile, LaTeX, PDF, or Markdown file.", "long_description": "Follow the keyword with a name for the file. file_name may include the file type extension, or the file type may be specified using the \u201ct=\u201d option.\nIf an explicit path is not specified, the file will be stored in the default directory, as set in the File Locations global options.\nThe base syntax for writing Excel 2007 files is:\nwhere the table_description may contain:\n\u2022 \u201crange = arg \u201d, where arg is top left cell of the destination Excel workbook, following the standard Excel format [worksheet!][topleft_cell[:bottomright_cell]] .\nIf the worksheet name contains spaces, it should be placed in single quotes. If the worksheet name is omitted, the cell range is assumed to refer to the currently active sheet. If only a top left cell is provided, a bottom right cell will be chosen automatically to cover the range of non-empty cells adjacent to the specified top left cell. If only a sheet name is provided, the first set of non-empty cells in the top left corner of the chosen worksheet will be selected automatically. As an alternative to specifying an explicit range, a name which has been defined inside the Excel workbook to refer to a range or cell may be used to specify the cells to read."}, "fill": {"uri": "matrixcmd-fill", "anchor": "", "usage": "matrix_name. fill (options) n1[, n2, n3 \u2026]", "description": "Fill a matrix object with specified values.", "long_description": "Follow the keyword with a list of values to place in the matrix object. Each value should be separated by a comma .\nRunning out of values before the object is completely filled is not an error; the remaining cells or observations will be unaffected, unless the \u201cl\u201d option is specified. If, however, you list more values than the object can hold, EViews will not modify any observations and will return an error message."}, "hilo": {"uri": "graphmaster-hilo", "anchor": "", "usage": "hilo (options) o1 o2 [o3 ...]\nobject_name. hilo (options)", "description": "Display a high-low[-open-close] graph view (if possible).", "long_description": "where o1 , o2 , ..., are series or group objects. For a high-low[-open-close] graph, EViews uses the first series or column as the high series, the second series or column as the low series, and an optional third series or column as the close series. If four series or columns are provided, EViews will use them in the following order: high-low-open-close.\nNote that if you wish to display a high-low-open graph, you should use an \u201cNA\u201d-series for the close values."}, "import": {"uri": "matrixcmd-import", "anchor": "", "usage": "matrix_name. import ([type=]) source_description import_specification\nmatrix_name. import(type=excel [xml] ) source_description [table_description] [variables_description]\nmatrix_name. import(type=html) source_description [table_description] [variables_description]\nmatrix_name .import(type =arg ) source_description [table_description] [variables_description]", "description": "Imports data from a foreign file into the matrix object.", "long_description": "\u2022 source_description should contain a description of the file from which the data is to be imported. The specification of the description is usually just the path and file name of the file, however you can also specify more precise information. See wfopen for more details on the specification of source_description .\n\u2022 The optional \u201ctype=\u201d option may be used to specify a source type. For the most part, you should not need to specify a \u201ctype=\u201d option as EViews will automatically determine the type from the filename. The following table summaries the various source formats with the corresponding \u201ctype=\u201d keywords:\n\nOption Keywords Excel (through 2003) \u201cexcel\u201d Excel 2007 (xml) \u201cexcelxml\u201d HTML \u201chtml\u201d Text / ASCII \u201ctext\u201d\n\n\u2022 import_specification can be used to provide additional information about the file to be read. The details of import_specification will depend upon the type of file being imported.\nExcel Files\nThe syntax for reading Excel files is:\nThe following table_description elements may be used when reading Excel data:\n\u2022 \u201crange = arg \u201d, where arg is a range of cells to read from the Excel workbook, following the standard Excel format [worksheet ! ][topleft_cell[:bottomright_cell]] .\nIf the worksheet name contains spaces, it should be placed in single quotes. If the worksheet name is omitted, the cell range is assumed to refer to the currently active sheet. If only a top left cell is provided, a bottom right cell will be chosen automatically to cover the range of non-empty cells adjacent to the specified top left cell. If only a sheet name is provided, the first set of non-empty cells in the top left corner of the chosen worksheet will be selected automatically. As an alternative to specifying an explicit range, a name which has been defined inside the excel workbook to refer to a range or cell may be used to specify the cells to read.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to read files where the series are contained in rows (one row per series) rather than columns.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file).\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nExcel Examples\nmatrix_name.import \"c:\\data files\\data.xls\"\nloads the active sheet of DATA.XLSX into the MATRIX_NAME matrix object.\nmatrix_name.import \"c:\\data files\\data.xls\" range=\"GDP data\"\nreads the data contained in the \u201cGDP data\u201d sheet of \u201cData.XLS\u201d into the MATRIX_NAME object.\n\nHTML Files\nThe syntax for reading HTML pages is:\nThe following table_description elements may be used when reading an HTML file or page:\n\u2022 \u201ctable = arg \u201d, where arg specifies which HTML table to read in an HTML file/page containing multiple tables.\nWhen specifying arg, you should remember that tables are named automatically following the pattern \u201cTable01\u201d, \u201cTable02\u201d, \u201cTable03\u201d, etc . If no table name is specified, the largest table found in the file will be chosen by default. Note that the table numbering may include trivial tables that are part of the HTML content of the file, but would not normally be considered as data tables by a person viewing the page.\n\u2022 \u201cskip = int \u201d, where int is the number of rows to discard from the top of the HTML table.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to import files where the series are contained in rows (one row per series) rather than columns.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file).\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the table of data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the table of data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nHTML Examples\nmat1.import \"c:\\data.html\"\nloads into the MAT1 matrix object the data located in the HTML file \u201cData.HTML\u201d located on the C:\\ drive\nmat1.import(type=html) \"http://www.tradingroom.com.au/apps/mkt/forex.ac\" colhead=3\nloads into a matrix object MAT1 the data with the given URL located on the website site \u201chttp://www.tradingroom.com.au\u201d. The column header is set to three rows.\nText and Binary Files\nThe syntax for reading text or binary files is:\nIf a table_description is not provided, EViews will attempt to read the file as a free-format text file. The following table_description elements may be used when reading a text or binary file:\n\u2022 \u201cftype = [ascii|binary]\u201d specifies whether numbers and dates in the file are stored in a human readable text (ASCII), or machine readable (Binary) form.\n\u2022 \u201crectype = [crlf|fixed|streamed]\u201d describes the record structure of the file:\n\u201ccrlf\u201d, each row in the output table is formed using a fixed number of lines from the file (where lines are separated by carriage return/line feed sequences). This is the default setting.\n\u201cfixed\u201d, each row in the output table is formed using a fixed number of characters from the file (specified in \u201creclen= arg \u201d). This setting is typically used for files that contain no line breaks.\n\u201cstreamed\u201d, each row in the output table is formed by reading a fixed number of fields, skipping across lines if necessary. This option is typically used for files that contain line breaks, but where the line breaks are not relevant to how rows from the data should be formed.\n\u2022 \u201creclines = int \u201d, number of lines to use in forming each row when \u201crectype=crlf\u201d (default is 1).\n\u2022 \u201creclen= int \u201d, number of bytes to use in forming each row when \u201crectype=fixed\u201d.\n\u2022 \u201crecfields= int \u201d, number of fields to use in forming each row when \u201crectype=streamed\u201d.\n\u2022 \u201cskip= int \u201d, number of lines (if rectype is \u201ccrlf\u201d) or bytes (if rectype is not \u201ccrlf\u201d) to discard from the top of the file.\n\u2022 \u201ccomment= string \u201c, where string is a double-quoted string, specifies one or more characters to treat as a comment indicator. When a comment indicator is found, everything on the line to the right of where the comment indicator starts is ignored.\n\u2022 \u201cemptylines=[keep|drop]\u201d, specifies whether empty lines should be ignored (\u201cdrop\u201d), or treated as valid lines (\u201ckeep\u201d) containing missing values. The default is to ignore empty lines.\n\u2022 \u201ctabwidth= int \u201d, specifies the number of characters between tab stops when tabs are being replaced by spaces (default=8). Note that tabs are automatically replaced by spaces whenever they are not being treated as a field delimiter.\n\u2022 \u201cfieldtype=[delim|fixed|streamed|undivided]\u201d, specifies the structure of fields within a record:\n\u201cDelim\u201d, fields are separated by one or more delimiter characters\n\u201cFixed\u201d, each field is a fixed number of characters\n\u201cStreamed\u201d, fields are read from left to right, with each field starting immediately after the previous field ends.\n\u201cUndivided\u201d, read entire record as a single series.\n\u2022 \u201cquotes=[single|double|both|none]\u201d, specifies the character used for quoting fields, where \u201csingle\u201d is the apostrophe, \u201cdouble\u201d is the double quote character, and \u201cboth\u201d means that either single or double quotes are allowed (default is \u201cboth\u201d). Characters contained within quotes are never treated as delimiters.\n\u2022 \u201csinglequote\u201c, same as \u201cquotes = single\u201d.\n\u2022 \u201cdelim=[comma|tab|space|dblspace|white|dblwhite]\u201d, specifies the character(s) to treat as a delimiter. \u201cWhite\u201d means that either a tab or a space is a valid delimiter. You may also use the abbreviation \u201cd=\u201d in place of \u201cdelim=\u201d.\n\u2022 \u201ccustom=\" arg1 \"\u201d, specifies custom delimiter characters in the double quoted string. Use the character \u201ct\u201d for tab, \u201cs\u201d for space and \u201ca\u201d for any character.\n\u2022 \u201cmult=[on|off]\u201d, to treat multiple delimiters as one. Default value is \u201con\u201d if \u201cdelim\u201d is \u201cspace\u201d, \u201cdblspace\u201d, \u201cwhite\u201d, or \u201cdblwhite\u201d, and \u201coff\u201d otherwise.\n\u2022 \u201cendian = [big|little]\u201d, selects the endianness of numeric fields contained in binary files.\n\u2022 \u201cstring = [nullterm|nullpad|spacepad]\u201d, specifies how strings are stored in binary files. If \u201cnullterm\u201d, strings shorter than the field width are terminated with a single zero character. If \u201cnullpad\u201d, strings shorter than the field width are followed by extra zero characters up to the field width. If \u201cspacepad\u201d, strings shorter than the field width are followed by extra space characters up to the field width.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to import files where the series are contained in rows (one row per series) rather than columns.\n\u2022 \u201clastcol\u201d, include implied last column. For lines that end with a delimiter, this option adds an additional column. When importing a CSV file, lines which have the delimiter as the last character (for example: \u201cname, description, date,\u201d), EViews normally determines the line to have 3 columns. With the above option, EViews will determine the line to have 4 columns. Note this is not the same as a line containing \u201cname, description, date\u201d. In this case, EViews will always determine the line to have 3 columns regardless if the option is set.\nA central component of the table_description element is the format statement. You may specify the data format using the following table descriptors:\n\u2022 Fortran Format:\nfformat=( [n1]Type[Width][.Precision] , [n2]Type[Width][.Precision] , ...)\nwhere Type specifies the underlying data type, and may be one of the following,\nI - integer\nF - fixed precision\nE - scientific\nA - alphanumeric\nX - skip\nand n1 , n2 , ... are the number of times to read using the descriptor ( default =1). More complicated Fortran compatible variations on this format are possible.\n\u2022 Column Range Format:\nrformat=\" [n1]Type[Width][.Precision] , [n2]Type[Width][.Precision] , ...)\"\nwhere optional type is \u201c$\u201d for string or \u201c#\u201d for number, and n1 , n2 , n3 , n4 , etc . are the range of columns containing the data.\n\u2022 C printf/scanf Format:\ncformat=\" fmt \"\nwhere fmt follows standard C language (printf/scanf) format rules.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file).\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the table of data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the table of data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nText and Binary File Examples (.txt, .csv, etc.)\nmat2.import c:\\data.csv skip=5\nreads \u201cData.CSV\u201d into a MAT2, skipping the first 5 rows.\nmat2.import(type=text) c:\\date.txt delim=comma\nloads the comma delimited data \u201cDate.TXT\u201d into the MAT2 matrix object.\nCross-references\nSee also Matrix::export ."}, "label": {"uri": "matrixcmd-label", "anchor": "", "usage": "matrix_name. label\nmatrix_name. label (options) [text]", "description": "Display or change the label view of a matrix, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the matrix label."}, "line": {"uri": "graphmaster-line", "anchor": "", "usage": "line (options) o1 [o2 o3 ... ]\nobject_name. line (options) [categorical_spec(arg)]", "description": "Display a line graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the line keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "mixed": {"uri": "graphmaster-mixed", "anchor": "", "usage": "group_name. mixed (options) type_list", "description": "Plots a graph with various graph types.", "long_description": "The type_list argument controls the types of graphs included. Include a space delimited list of graph type keywords along with the series attached to that type. Available graph types are \u201cline\u201d, \u201cbar\u201d, \u201carea\u201d, \u201cspike\u201d, \u201cband\u201d, \u201cstackedline\u201d, \u201cstackedbar\u201d, \u201cstackedarea\u201d, and \u201cstackedspike\u201d.\nEach keyword should be followed by parenthesis containing a comma separated list of series which will be graphed with that type. Series can be specified by name or by a number corresponding to their position in the group."}, "olepush": {"uri": "matrixcmd-olepush", "anchor": "", "usage": "matrix_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "pie": {"uri": "graphmaster-pie", "anchor": "", "usage": "pie (options) o1 o2 [o3 ... ]\nobject_name. pie (options) [categorical_spec(arg)]", "description": "Display a pie chart view.", "long_description": "In the default setting, there will be one pie for each date or observation number. Each series or column of data is shown as a wedge in a different color/pattern, where the width of the wedge equals the percentage contribution of the series or column to the total of all listed series or columns. Negative and missing values are treated as zeros.\nwhere o1 , o2 , ..., are series or group objects. You may specify general graph characteristics by including options following the pie keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "qqplot": {"uri": "graphmaster-qqplot", "anchor": "", "usage": "qqplot (options) o1 [o2 o3 ... ]\nobject_name. qqplot (options) analytical_spec(arg) [categorical_spec(arg)]", "description": "Display a quantile-quantile graph.", "long_description": "Plots the (empirical) quantiles of a series or matrix column against either the quantiles of a theoretical distribution or the empirical quantiles of other series or columns in the group or matrix. You may specify the theoretical distribution and/or the method used to compute the empirical quantiles as options.\nwhere o1 , o2 , ..., are series or group objects.\nWhen used as a command, qqplot displays the theoretical qq-plot against a fitted normal distribution.\nWhen used to display the view of an object, you must specify a theoretical or empirical quantile graph in the analytical_spec (see \u201cAnalytical Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "read": {"uri": "matrixcmd-read", "anchor": "", "usage": "matrix_name. read (options) [path \\] file_name", "description": "Import data from a foreign disk file into a matrix.", "long_description": "(This is a deprecated method of importing into a matrix. See Matrix::import for the currently supported method.)\nMay be used to import data into an existing workfile from a text, Excel, or Lotus file on disk.\nYou must supply the name of the source file. If you do not include the optional path specification, EViews will look for the file in the default directory. Path specifications may point to local or network drives. If the path specification contains a space, you may enclose the entire expression in double quotation marks."}, "resize": {"uri": "matrixcmd-resize", "anchor": "", "usage": "matrix_name. resize rows cols", "description": "Resize the matrix object."}, "scat": {"uri": "graphmaster-scat", "anchor": "", "usage": "scat (options) o1 o2 [o3 ... ]\nobject_name. scat (options) [auxiliary_spec(arg)] [categorical_spec(arg)]", "description": "Display a scatterplot (if possible).", "long_description": "A scatterplot graph plots the values of one series or column against another using symbols.\nThere must be at least two series or columns to create a scatterplot. By default, the first series or column will be located along the horizontal axis, and the remaining data on the vertical axis. You may optionally choose to plot the data in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth, or to construct graphs using all possible pairs (or the lower triangular set of pairs).\nScatterplots are simply XY-line plots with symbols turned on and lines turned off (see Graph::setelem ).\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the scat keyword, you may specify general graph characteristics using options . Available options include plotting the data in pairs or in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "scatmat": {"uri": "graphmaster-scatmat", "anchor": "", "usage": "scatmat (options) o1 o2 [o3 ... ]\nobject_name. scatmat (options) [auxiliary_spec(arg)]", "description": "Display a matrix of scatterplots.", "long_description": "The scatmat view forms pairs using all possible pairwise combinations for the series or columns and constructs a plot for each pair, using specialized positioning and axis labeling.\nScatterplots are simply XY-line plots with symbols turned on and lines turned off (see Graph::setelem ). The scatmat graph type is equivalent to using scat with the \u201cmult=mat\u201d or \u201cmult=lower\u201d option indicating that the data should be graphed using the full or lower-triangular matrix of pairs.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the scatmat keyword, you may specify general graph characteristics using options . Available options include template application and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d )."}, "scatpair": {"uri": "graphmaster-scatpair", "anchor": "", "usage": "scatpair (options) o1 o2 [o3 ... ]\nobject_name. scatpair (options) [auxiliary_spec(arg)]", "description": "Display a scatterplot pairs graph (if possible).", "long_description": "The data will be plotted in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth. If the number of series or columns is odd, the last one will be ignored.\nScatterplots are simply XY plots with symbols turned on and lines turned off (see Graph::setelem ). The scatpair graph type is equivalent to using scat with the \u201cmult=pairs\u201d option indicating that the data should be graphed in pairs.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the scatpair keyword, you may specify general graph characteristics using options . Available options include plotting the data in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d )."}, "setattr": {"uri": "matrixcmd-setattr", "anchor": "", "usage": "alpha_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "setcollabels": {"uri": "matrixcmd-setcollabels", "anchor": "", "usage": "matrix_name. setcollabels label1 label2 label3....", "description": "Set the column labels in a matrix object.", "long_description": "Follow the setcollabels command with a space delimited list of column labels. Note that each column label should not contain spaces unless it is enclosed in quotes. If you provide fewer labels than there are columns, EViews will keep the corresponding default column names (\u201cC11\u201d, \u201cC12\u201d, etc...)."}, "setformat": {"uri": "matrixcmd-setformat", "anchor": "", "usage": "matrix_name. setformat format_arg", "description": "Set the display format for cells in a matrix object spreadsheet view.", "long_description": "where format_arg is a set of arguments used to specify format settings. If necessary, you should enclose the format_arg in double quotes.\nFor matrices, setformat operates on all of the cells in the matrix.\nTo format numeric values, you should use one of the following format specifications:\n\ng [.precision] significant digits f [.precision] fixed decimal places c [.precision] fixed characters e [.precision] scientific/float p [.precision] percentage r [.precision] fraction\nTo specify a format that groups digits into thousands using a comma separator, place a \u201ct\u201d after the format character. For example, to obtain a fixed number of decimal places with commas used to separate thousands, use \u201cft [.precision] \u201d.\nTo use the period character to separate thousands and commas to denote decimal places, use \u201c..\u201d (two periods) when specifying the precision. For example, to obtain a fixed number of characters with a period used to separate thousands, use \u201cct [..precision] \u201d.\nIf you wish to display negative numbers surrounded by parentheses ( i.e. , display the number -37.2 as \u201c(37.2)\u201d), you should enclose the format string in \u201c()\u201d ( e.g. , \u201cf(.8)\u201d)."}, "setindent": {"uri": "matrixcmd-setindent", "anchor": "", "usage": "matrix_name. setindent indent_arg", "description": "Set the display indentation for cells in a matrix object spreadsheet view.", "long_description": "where indent_arg is an indent value specified in 1/5 of a width unit. The width unit is computed from representative characters in the default font for the current spreadsheet (the EViews spreadsheet default font at the time the spreadsheet was created), and corresponds roughly to a single character. Indentation is only relevant for non-center justified cells.\nThe default value is taken from the Global Defaults at the time the spreadsheet view is created.\nFor matrices, setindent operates on all of the cells in the matrix."}, "setjust": {"uri": "matrixcmd-setjust", "anchor": "", "usage": "matrix_name. setjust format_arg", "description": "Set the horizontal justification for all cells in the spreadsheet view of the matrix object.", "long_description": "where format_arg may be set to left, center, right, or auto (strings are left-justified and numbers are right-justified). Default display settings can be set in General Options; see \u201cSpreadsheet Data Display\u201d ."}, "setrowlabels": {"uri": "matrixcmd-setrowlabels", "anchor": "", "usage": "matrix_name. setrowlabels label1 label2 label3....", "description": "Set the row labels in a matrix object.", "long_description": "Follow the setrowlabels command with a space delimited list of row labels. Note that each row label should not contain spaces unless it is enclosed in quotes. If you provide fewer labels than there are rows, EViews will use the corresponding default row names (\u201cR11\u201d, \u201cR12\u201d, etc...)."}, "setwidth": {"uri": "matrixcmd-setwidth", "anchor": "", "usage": "matrix_name. setwidth width_arg", "description": "Set the column width for all columns in a matrix object spreadsheet.", "long_description": "where width_arg specifies the width unit value. The width unit is computed from representative characters in the default font for the current spreadsheet (the EViews spreadsheet default font at the time the spreadsheet was created), and corresponds roughly to a single character. width_arg values may be non-integer values with resolution up to 1/10 of a width unit."}, "sheet": {"uri": "matrixcmd-sheet", "anchor": "", "usage": "matrix_name. sheet (options)", "description": "Spreadsheet view of a matrix object."}, "showlabels": {"uri": "matrixcmd-showlabels", "anchor": "", "usage": "matrix_name. showlabels mode", "description": "Displays the custom row and column labels of a matrix spreadsheet.", "long_description": "where mode is either 0 or 1 where 0 displays the default row and column labels and 1 displays the custom row and column labels (if present)."}, "spike": {"uri": "graphmaster-spike", "anchor": "", "usage": "spike (options) o1 [o2 o3 ... ]\nobject_name. spike (options) [categorical_spec(arg)]", "description": "Display a spike graph view.", "long_description": "where o1 , o2 , ..., are series or group objects.\nFollowing the spike keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "stats": {"uri": "matrixcmd-stats", "anchor": "", "usage": "matrix_name. stats (options)", "description": "Descriptive statistics.", "long_description": "Computes and displays a table of means, medians, maximum and minimum values, standard deviations, and other descriptive statistics of each column in the matrix."}, "write": {"uri": "matrixcmd-write", "anchor": "", "usage": "matrix_name. write (options) [path\\filename]", "description": "Write EViews data to a text (ASCII), Excel, or Lotus file on disk.", "long_description": "Creates a foreign format disk file containing EViews data. May be used to export EViews data to another program.\nThis routine should realistically only be used in the oft-hand chance that you wish to write into a Lotus file. Improved Excel, text, and other format writing is available in Matrix::export .\nFollow the name of the matrix object by a period, the keyword, and the name for the output file. The optional path name may be on the local machine, or may point to a network drive. If the path name contains spaces, enclose the entire expression in double quotation marks. The entire matrix will be exported.\nNote that EViews cannot, at present, write into an existing file. The file that you select will, if it exists, be replaced."}, "xyarea": {"uri": "graphmaster-xyarea", "anchor": "", "usage": "xyarea (options) o1 o2 [o3 ... ]\nobject_name. xyarea (options)", "description": "Display an XY area graph view (if possible).", "long_description": "An XY area graph plots the values of one series or column against another. It is similar to a XY line, but with the region between the line and the zero horizontal axis filled.\n(Note that XY area graphs are typically employed only when data along the horizontal axis are ordered.)\nThere must be at least two series or columns to create an XY area graph. By default, the first series or column will be located along the horizontal axis, with the remaining data on the vertical axis. You may optionally choose to plot the data in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth, or to construct graphs using all possible pairs (or the lower triangular set of pairs).\nwhere o1 , o2 , ..., are series or group objects."}, "xybar": {"uri": "graphmaster-xybar", "anchor": "", "usage": "xybar (options) o1 o2 [o3 ... ]\nobject_name. xybar (options)", "description": "Display an XY bar graph view (if possible).", "long_description": "An XY bar graph displays the data in sets of three series or columns as a vertical bar. For a given observation, the values in the first two series or columns define a region along the horizontal axis, while the value in the third series or column defines the vertical height of the bar.\nXY bar graphs may, for example, be used to construct variable width histograms.\nwhere o1 , o2 , ..., are series or group objects."}, "xyerrbar": {"uri": "graphmaster-xyerrbar", "anchor": "", "usage": "xyerrbar (options) o1 o2 o3 o4 [o5 ... ]\nobject_name. xyerrbar (options)", "description": "Display an XY error bar graph view (if possible).", "long_description": "The data must be in the form of a multiple of four series or columns. The first series is the x-axis points. The second series is the high error bar and the third series is the low error bar. The fourth series or column is the data of interest plotted as a symbol.\nwhere o1, o2, o3, o4,... are series or group objects."}, "xyline": {"uri": "graphmaster-xyline", "anchor": "", "usage": "xyline (options) o1 o2 [o3 ... ]\nobject_name. xyline (options) [auxiliary_spec(arg)] [categorical_spec(arg)]", "description": "Display an XY line graph view (if possible).", "long_description": "There must be at least two series or columns to create an XY line graph. By default, the first series or column will be located along the horizontal axis, with the remaining data on the vertical axis. You may optionally choose to plot the data in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth, or to construct graphs using all possible pairs (or the lower triangular set of pairs).\nXY line graphs are simply XY plots with lines turned on and symbols turned off (see Graph::setelem ).\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the xyline keyword, you may specify general graph characteristics using options . Available options include plotting the data in pairs or in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "xypair": {"uri": "graphmaster-xypair", "anchor": "", "usage": "xypair (options) o1 o2 [o3 ... ]\nobject_name. xypair (options) [auxiliary_spec(arg)]", "description": "Display an XY pairs graph (if possible).", "long_description": "The data will be plotted in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth. If the number of series or columns is odd, the last one will be ignored.\nXY line graphs are simply XY plots with lines turned on and symbols turned off (see Graph::setelem ). The xypair graph type is equivalent to using xyline with the \u201cmult=pairs\u201d option indicating that the data should be graphed in pairs.\nFollowing the xypair keyword, you may specify general graph characteristics using options . Available options include plotting the data in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d )."}}, "Model": {"[Model]": {"uri": "modelcmd-Model", "anchor": "", "description": "Set of simultaneous equations used for forecasting and simulation."}, "@addfactors": {"uri": "modelcmd-Model", "anchor": "ww189625", "usage": "@addfactors", "description": "[(\u201cscenario\u201d)] or @aflist[(\u201cscenario\u201d)] string containing a space delimited list of the model\u2019s addfactor variables in the specified scenario (default is Actuals)."}, "@attr": {"uri": "modelcmd-Model", "anchor": "ww249355", "usage": "@attr", "description": "(\" arg \" string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@description": {"uri": "modelcmd-Model", "anchor": "ww249357", "usage": "@description", "description": "string containing the Model object\u2019s description (if available)."}, "@detailedtype": {"uri": "modelcmd-Model", "anchor": "ww203556", "usage": "@detailedtype", "description": "string with the object type: \u201cMODEL\u201d."}, "@displayname": {"uri": "modelcmd-Model", "anchor": "ww189610", "usage": "@displayname", "description": "string containing the Model object\u2019s display name. If the Model has no display name set, the name is returned."}, "@droppedaf": {"uri": "modelcmd-Model", "anchor": "", "description": "Set of simultaneous equations used for forecasting and simulation."}, "@droppedafdep": {"uri": "modelcmd-Model", "anchor": "", "description": "Set of simultaneous equations used for forecasting and simulation."}, "@endoglist": {"uri": "modelcmd-Model", "anchor": "ww189626", "usage": "@endoglist", "description": "[(\u201cscenario\u201d)] string containing a space delimited list of the model\u2019s endogenous variables in the specified scenario (default is Actuals)."}, "@excludelist": {"uri": "modelcmd-Model", "anchor": "ww220444", "usage": "@excludelist", "description": "[(\u201cscenario\u201d)] string containing a space delimited list of the model\u2019s excluded variables in the specified scenario (default is Actuals)."}, "@exoglist": {"uri": "modelcmd-Model", "anchor": "ww220789", "usage": "@exoglist", "description": "[(\u201cscenario\u201d)] string containing a space delimited list of the model\u2019s exogenous variables in the specified scenario (default is Actuals)."}, "@identity": {"uri": "modelcmd-Model", "anchor": "ww220795", "usage": "@identity", "description": "string containing a space delimited list of the model\u2019s endogenous variables determined by identities."}, "@linklist": {"uri": "modelcmd-Model", "anchor": "ww220430", "usage": "@linklist", "description": "string containing space delimited list of all linked objects in the model"}, "@name": {"uri": "modelcmd-Model", "anchor": "ww189611", "usage": "@name", "description": "string containing the Model object\u2019s name."}, "@overridelist": {"uri": "modelcmd-Model", "anchor": "ww220790", "usage": "@overridelist", "description": "[(\u201cscenario\u201d)] or @olist[(\u201cscenario\u201d)] string containing a space delimited list of the model\u2019s variables set as overrides in the specified scenario (default is Actuals)."}, "@remarks": {"uri": "modelcmd-Model", "anchor": "ww189612", "usage": "@remarks", "description": "string containing the Model object\u2019s remarks (if available)."}, "@scenarios": {"uri": "modelcmd-Model", "anchor": "ww220475", "usage": "@scenarios", "description": "string containing a list of scenarios in the Model."}, "@spec": {"uri": "modelcmd-Model", "anchor": "ww220460", "usage": "@spec(\u201cvariable\u201d )", "description": "string containing the estimation object name or text specification of the equation determining the specified endogenous variable, or an empty string if \u201cvariable\u201d is an invalid name."}, "@stochastic": {"uri": "modelcmd-Model", "anchor": "ww220709", "usage": "@stochastic", "description": "string containing a space delimited list of stochastic endogenous variables."}, "@type": {"uri": "modelcmd-Model", "anchor": "ww203548", "usage": "@type", "description": "string with the object type: \u201cMODEL\u201d."}, "@updatetime": {"uri": "modelcmd-Model", "anchor": "ww189616", "usage": "@updatetime", "description": "string representation of the time and date at which the Model was last updated."}, "@varlist": {"uri": "modelcmd-Model", "anchor": "ww189629", "usage": "@varlist", "description": "[(\u201cscenario\u201d)] string containing a space delimited list of all the model\u2019s variables for the specified scenario (default is Actuals)."}, "addassign": {"uri": "modelcmd-addassign", "anchor": "", "usage": "model_name. addassign (options) equation_spec", "description": "Assign add factors to equations.", "long_description": "where equation_spec identifies the equations for which you wish to assign add factors. You may either provide a list of endogenous variables, or you can use one of the following shorthand keywords:\n\n@all All equations. @stochastic All stochastic equations (no identities). @identity All identities.\nThe options identify the type of add factor to be used, and control the assignment behavior for equations where you have previously assigned add factors. addassign may be called multiple times to add different types of add factors to different equations. addassign may also be called to remove existing add factors."}, "addinit": {"uri": "modelcmd-addinit", "anchor": "", "usage": "model_name. addinit (options) equation_spec", "description": "Initialize add factors.", "long_description": "where equation_spec identifies the equations for which you wish to initialize the add factors. You may either provide a list of endogenous variables, or you may use one of the following shorthand keywords:\n\n@all All equations @stochastic All stochastic equations (no identities) @identity All identities\nThe options control the type of initialization and the scenario for which you want to perform the initialization. addinit may be called multiple times to initialize various types of add factors in the different scenarios."}, "addover": {"uri": "modelcmd-addover", "anchor": "", "usage": "model. addover (options)", "description": "Add override.", "long_description": "Set the active scenario add factor overrides."}, "adjust": {"uri": "modelcmd-adjust", "anchor": "", "usage": "model_name. adjust (options) ser [array expression]...", "description": "Prepare a variable for editing in the current scenario and/or update its values using an array expression.", "long_description": "The adjust proc allows you to adjust the values of the series ser in the current scenario. If the series is an exogenous variable, it will be added to the override list. If the series is an endogenous variable it will be added to both the excluded list and the override list.\nIf an array expression is provided, the overridden series will be modified according to the expression specification. Note that a transform may optionally be provided as part of the variable name using the syntax: transform( varname ) .\nIf you use an array expression which applies an operator to existing series values the overriden series must already exist in the workfile, unless the init option is used."}, "append": {"uri": "modelcmd-append", "anchor": "", "usage": "model_name. append text", "description": "Append a specification line to a model.", "long_description": "Type the text to be added after the append keyword."}, "block": {"uri": "modelcmd-block", "anchor": "", "usage": "model_name. checkbounds (options)", "description": "Display the model block structure view.", "long_description": "Show the block structure of the model, identifying which blocks are recursive and which blocks are simultaneous."}, "clearhist": {"uri": "modelcmd-clearhist", "anchor": "", "usage": "model_name. clearhist", "description": "Clear the contents of the history attribute for model objects.", "long_description": "Removes the model\u2019s history attribute, as shown in the label view of the model."}, "clearremarks": {"uri": "modelcmd-clearremarks", "anchor": "", "usage": "model_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the model\u2019s remarks attribute, as shown in the label view of the model."}, "compare": {"uri": "modelcmd-compare", "anchor": "", "usage": "model_name. compare (options) model_vars", "description": "Produce a table showing the differences between scenarios for the specified series.", "long_description": "The compare view allows you to quickly compare the results from different scenarios (or the actual values) following a model solve. By default the output table will show any of the series specified in model_vars whose difference between the current active and comparison scenarios exceeds a specified tolerance. You may optionally use the \u201cpatt=\u201d option to specify a separate set of comparison series from those in the current comparison scenario.\nThe list of model_vars may include the following special keywords:\n\n@all All model variables. @endog All endogenous model variables. @exog All exogenous model variables. @addfactor All add factor variables in the model. @overides All currently overridden exogenous variables @excludes All currently overridden endogenous variables"}, "control": {"uri": "modelcmd-control", "anchor": "", "usage": "model_name. control (options) controls targets trajectories", "description": "Solve for values of one or more control variables so that an equal number of target series follow specified trajectories over the current workfile sample.", "long_description": "The controls, targets, and trajectories parameters are all lists of variable/series names, which may comprise any combination of individual series or group object names. The controls should be exogenous variables and the targets endogenous variables, with the trajectories being arbitrary series. An equal number of control, target, and trajectory series must be specified. These three lists do not need to be ordered strictly as above; they may be interleaved or kept together in blocks. For example, any of the following arrangements of the six arguments for a two-variable control would be acceptable: Examples\ncontrol1 control2 target1 target2 trajectory1 trajectory2\ncontrol1 target1 trajectory1 control2 target2 trajectory2\ncontrol1 control2 target1 trajectory1 target2 trajectory2\nThe solved values overwrite the original control series unless the \u2018create\u2019 or \u2018csuffix\u2019 option is specified. When the names for target and trajectory series share a common base, the \u2018tsuffix\u2019 option may be used to abridge the parameter list."}, "copy": {"uri": "modelcmd-copy", "anchor": "", "usage": "model_name. copy\nmodel_name. copy dest_name", "description": "Creates a copy of the model.", "long_description": "Creates either a named or unnamed copy of the model."}, "digraph": {"uri": "modelcmd-digraph", "anchor": "", "usage": "model_name. digraph", "description": "Display the model dependency graph."}, "display": {"uri": "modelcmd-display", "anchor": "", "usage": "model_name. display object_name", "description": "Display table, graph, or spool output in the model object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the model object."}, "displayname": {"uri": "modelcmd-displayname", "anchor": "", "usage": "model_name. displayname display_name", "description": "Display name for model objects.", "long_description": "Attaches a display name to a model object which may be used in place of the standard model object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in model object names."}, "drop": {"uri": "modelcmd-drop", "anchor": "", "usage": "model_name. drop ( options ) var_list", "description": "Drop equations for one or more endogenous variables in the model.", "long_description": "Where var_list is a space delimited list of variables whose equations will be dropped from the model. By default if a variable is contained in a multi-equation object, such as a system, VAR or model, the entire object will be dropped, which will also drop the specification for the other variables defined in that object."}, "droplink": {"uri": "modelcmd-droplink", "anchor": "", "usage": "model_name. droplink ( options ) obj_list", "description": "Drop linked objects from the model.", "long_description": "Where obj_list is a space delimited list of objects to be dropped from the model."}, "eqs": {"uri": "modelcmd-eqs", "anchor": "", "usage": "model_name. eqs", "description": "View of model organized by equation.", "long_description": "Lists the equations in the model. This view also allows you to identify which equations are entered by text, or by link, and to access and modify the equation specifications."}, "exclude": {"uri": "modelcmd-exclude", "anchor": "", "usage": "model_name. exclude (options) ser1(smpl) ser2(smpl) ...", "description": "Specifies (or merges) excluded endogenous variables in the active scenario.", "long_description": "Follow the exclude keyword with the argument list containing the endogenous variables you wish to exclude from the solution, along with an optional sample for exclusion. If a sample is not provided, the variable will be excluded for the entire solution sample."}, "fliptype": {"uri": "modelcmd-fliptype", "anchor": "", "usage": "model_name .fliptype( options ) variables [@lock fixed-variables ] [@lockafs] [@lockinnovs]", "description": "Symbolically alter the model\u2019s equations to specify a new set of endogenous variables.", "long_description": "The variables parameter is a list of endogenous and exogenous variables in any order. Group objects may be included in the list. An equal number of endogenous and exogenous variables must be specified. Each listed endogenous variable will be made exogenous and each listed exogenous variable will be made endogenous by rewriting a number of the model\u2019s equations. The number of equations modified will be at least the number of endogenous/exogenous variables specified, e.g., flipping a set of three endogenous and three exogenous variables will require at least three equations to be modified. All modified equations will have any associated add factor or innovation variance dropped from their specification (see the af2exog option below). The optional @lock clause can be used to prevent the modification of any equation whose endogenous variable is listed in fixed-variables . Inclusion of the optional @lockafs or @lockinnovs tags indicates that all equations with either add factors or innovations variances, respectively, should not be modified."}, "innov": {"uri": "modelcmd-innov", "anchor": "", "usage": "model_name. innov var1 option [var2 option, var3 option, ...]", "description": "Solve options for stochastic simulation.", "long_description": "Follow the innov keyword with a list of model variables and options. If the variable is an endogenous variable (or add factor), it identifies a model equation and will use different options than an exogenous variable."}, "label": {"uri": "modelcmd-label", "anchor": "", "usage": "model_name. label\nmodel_name. label (options) [text]", "description": "Display or change the label view of a model object, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the model object label."}, "makegraph": {"uri": "modelcmd-makegraph", "anchor": "", "usage": "model_name. makegraph (options) graph_name model_vars", "description": "Make graph object showing model series.", "long_description": "where graph_name is the name of the resulting graph object, and models_vars are the names of the series. The list of model_vars may include the following special keywords:\n\n@all All model variables. @endog All endogenous model variables. @exog All exogenous model variables. @addfactor All add factor variables in the model. @overides All currently overridden exogenous variables @excludes All currently overridden endogenous variables"}, "makegroup": {"uri": "modelcmd-makegroup", "anchor": "", "usage": "model_name. makegroup (options) grp_name model_vars", "description": "Make a group out of model series and display dated data table.", "long_description": "The makegroup keyword should be followed by options, the name of the destination group, and the list of model variables to be created. The options control the choice of model series, and transformation and grouping features of the resulting dated data table view. The list of model_vars may include the following special keywords:\n\n@all All model variables. @endog All endogenous model variables. @exog All exogenous model variables. @addfactor All add factor variables in the model. @overides All currently overridden exogenous variables @excludes All currently overridden endogenous variables"}, "merge": {"uri": "modelcmd-merge", "anchor": "", "usage": "model_name. merge (options) object_name", "description": "Merge equations from an estimated equation, model, pool, system, or var object.", "long_description": "If you supply only the object\u2019s name, EViews first searches the current workfile for the object containing the equation. If the object is not found, EViews looks in the default directory for an equation or pool file (.DBE). If you want to merge the equations from a system file (.DBS), a var file (.DBV), or a model file (.DBL), include the extension in the command and an optional path when merging files. You must merge objects to a model one at a time; merge appends the object to the equations already existing in the model.\nFollow the keyword with a name of an object containing estimated equation(s) to merge."}, "msg": {"uri": "modelcmd-msg", "anchor": "", "usage": "model_name. msg (options)", "description": "Display model solution messages.", "long_description": "Show view containing messages generated by the most recent model solution."}, "olepush": {"uri": "modelcmd-olepush", "anchor": "", "usage": "model_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "override": {"uri": "modelcmd-override", "anchor": "", "usage": "model_name. override (options) ser1 [ser2 ser3 ...]", "description": "Specifies (or merges) overridden exogenous variables and add factors in the active scenario.", "long_description": "Follow the keyword with the argument list containing the exogenous variables or add factors you wish to override."}, "printview": {"uri": "modelcmd-printview", "anchor": "", "usage": "model_name. printview (options)", "description": "Display print view of the model.", "long_description": "Show enhanced display of the model specification."}, "reinclude": {"uri": "modelcmd-reinclude", "anchor": "", "usage": "Model_name. reinclude ( options ) ser1 ser2", "description": "Removes one or more variables from the excluded variable list.", "long_description": "The specified variables are removed from the current active scenario\u2019s exclude list, and generates an add factor for each variable so that the solution for the current scenario remains unchanged."}, "replace": {"uri": "modelcmd-replace", "anchor": "", "usage": "model_name. replace new_specification", "description": "Replace the text specification for an endogenous variable in the model with a new specification.", "long_description": "The replace command will only replace the specification for variables that currently have a text specification in the model. Variables defined by a linked object cannot have their specification replace. New_specification should be the new text specification for the variable. Note EViews will automatically detect the endogenous variable in the new specification, even if it is contained in an implicit expression, and will replace the existing specification for that variable."}, "replacelink": {"uri": "modelcmd-replacelink", "anchor": "", "usage": "model_name. replacelink old_obj new_obj", "description": "Replace a linked object with a different linked object.", "long_description": "old_obj should be the name of an object currently linked inside the model. That object will be removed from the model and replaced with the new object, new_obj ."}, "replacevar": {"uri": "modelcmd-replacevar", "anchor": "", "usage": "model_name. replacevar oldvar newvar", "description": "Replace all instances of a variable in the text specification of a model with a different variable.", "long_description": "replacevar can only replace variables defined by a text specification inside the model. It will not replace variables contained inside linked objects. Note that replacevar does not do a simple text substitution, and is capable of determining full variable names from other pieces of text."}, "revert": {"uri": "modelcmd-revert", "anchor": "", "usage": "model_name. revert ser1 [ ser2 ...]", "description": "Reverts one or more overridden variables in the active model scenario back to their baseline values.", "long_description": "The specified variables will be removed from the override and exclude list of this scenario, and the associated overridden series in the workfile will be deleted.\nIf an asterisk is provided for the variable name, all overridden series in the active model scenario will be reverted."}, "scenario": {"uri": "modelcmd-scenario", "anchor": "", "usage": "model_name. scenario (options) \" name \"", "description": "Manage the model scenarios.", "long_description": "The scenario procedure is used to set the active and comparison scenarios for a model, to create new scenarios, to initialize one scenario with settings from another scenario, to delete scenarios, and to change the variable aliasing associated with a scenario.\nperforms scenario options on a scenario given by the specified name (entered in double quotes). By default the scenario procedure also sets the active scenario to the specified name."}, "scenlist": {"uri": "modelcmd-scenlist", "anchor": "", "usage": "model_name. scenlist (options)", "description": "Display list description of the model scenarios."}, "setattr": {"uri": "modelcmd-setattr", "anchor": "", "usage": "model_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "setbounds": {"uri": "modelcmd-setbounds", "anchor": "", "usage": "model_name. setbounds variable1(upper, lower) [variable2(upper, lower)\u2026]", "description": "Set upper and lower boundaries for endogenous variables during model solution.", "long_description": "EViews will warn if any variable\u2019s solved for value is higher than the upper bound or less than the lower bound for any observation during the solve."}, "settrace": {"uri": "modelcmd-settrace", "anchor": "", "usage": "model_name. settrace [endogenous_list ]", "description": "Specify the endogenous variables to be traced when solving the model", "long_description": "Specifies the endogenous variables for which you wish to keep intermediate calculations at the next deterministic simulation. The intermediate results of all traced variables will be part of the model solution output. Tracing intermediate values may give you some idea of where to look for problems when a model is generating errors or failing to converge.\nIf the endogenous_list of variables is omitted, settrace clears out the existing trace specification."}, "solve": {"uri": "modelcmd-solve", "anchor": "", "usage": "model_name. solve (options)", "description": "Solve the model.", "long_description": "solve finds the solution to a simultaneous equation model for the set of observations specified in the current workfile sample.\nNote: when solve is used in a program (batch mode) models are always solved over the workfile sample. If the model contains a solution sample, it will be ignored in favor of the workfile sample.\nYou should follow the name of the model after the solve command. The default solution method is dynamic simulation. You may modify the solution method as an option.\nsolve first looks for the specified model in the current workfile. If it is not present, solve attempts to fetch a model file (.DBL) from the default directory or, if provided, the path specified with the model name."}, "solveopt": {"uri": "modelcmd-solveopt", "anchor": "", "usage": "model_name. solveopt (options)", "description": "Solve options for models.", "long_description": "solveopt sets options for model solution but does not solve the model. The same options can be set directly in a solve procedure."}, "spec": {"uri": "modelcmd-spec", "anchor": "", "usage": "model_name. spec (options)", "description": "Display the text specification view for model objects."}, "stochastic": {"uri": "modelcmd-stochastic", "anchor": "", "usage": "model_name. stochastic (options)", "description": "Stochastic solution options for models.", "long_description": "stochastic sets options for stochastic model solution but does not solve the model."}, "text": {"uri": "modelcmd-text", "anchor": "", "usage": "model_name. text (options)", "description": "Display text representation of the model specification.", "long_description": "The text command is equivalent to Model::spec ."}, "trace": {"uri": "modelcmd-trace", "anchor": "", "usage": "model_name. trace (options)", "description": "Display trace view of a model showing iteration history for selected solved variables."}, "track": {"uri": "modelcmd-track", "anchor": "", "usage": "model_name. track endog1 [endog2 endog3 ...]", "description": "Specify endogenous variables to track.", "long_description": "Sets the list of endogenous variables that will be tracked at the next simulation. Results of all tracked endogenous variables will be part of the model solution output.\nSpecify a list of endogenous variables to be tracked. You may use @all to track all endogenous variables."}, "unlink": {"uri": "modelcmd-unlink", "anchor": "", "usage": "object. unlink spec", "description": "Break links in models.", "long_description": "unlink breaks equation links in the model. Follow the name of the model object by a period, the keyword, and a specification for the variables to unlink.\nThe spec may contain either a list of the endogenous variables to be unlinked, the name of an estimation object, or the keyword \u201c@ALL\u201d, instructing EViews to unlink all equations in the model.\nNote: if a link is to another model or a system object, more than one endogenous variable may be associated with the link. If the spec contains any of the endogenous variables in a linked model or system, EViews will break the link for all of the variables found in the link."}, "update": {"uri": "modelcmd-update", "anchor": "", "usage": "model. update [arg]", "description": "Update model specification.", "long_description": "Recompiles the model and updates links.\nFollow the name of the model object by a period the keyword update , and optionally a list of estimation objects to update. If no argument is provided, every object is updated."}, "vars": {"uri": "modelcmd-vars", "anchor": "", "usage": "model_name. vars", "description": "View of model organized by variable.", "long_description": "Display the model in variable form with identification of endogenous, exogenous, and identity variables, with dependency tracking."}}, "Pool": {"[Pool]": {"uri": "poolcmd-Pool", "anchor": "", "description": "Pooled time series, cross-section object. Used when working with data with both time series and cross-section structure."}, "@attr": {"uri": "poolcmd-Pool", "anchor": "ww238600", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@command": {"uri": "poolcmd-Pool", "anchor": "ww197422", "usage": "@command", "description": "full command line form of the estimation command. Note this is a combination of @method , @options and @spec ."}, "@crossids": {"uri": "poolcmd-Pool", "anchor": "ww197424", "usage": "@crossids", "description": "space delimited list of the Pool identifiers."}, "@crossidsest": {"uri": "poolcmd-Pool", "anchor": "ww197426", "usage": "@crossidsest", "description": "space delimited list of the Pool identifiers used in estimation."}, "@description": {"uri": "poolcmd-Pool", "anchor": "ww223339", "usage": "@description", "description": "string containing the Pool object\u2019s description (if available)."}, "@detailedtype": {"uri": "poolcmd-Pool", "anchor": "ww223329", "usage": "@detailedtype", "description": "returns a string with the object type: \u201cPOOL\u201d."}, "@displayname": {"uri": "poolcmd-Pool", "anchor": "ww197427", "usage": "@displayname", "description": "returns the Pool\u2019s display name. If the Pool has no display name set, the name is returned."}, "@effects": {"uri": "poolcmd-Pool", "anchor": "ww177665", "usage": "@effects(i)", "description": "estimated fixed or random effect for the i -th cross-section member (only for fixed or random effects)."}, "@idname": {"uri": "poolcmd-Pool", "anchor": "ww197458", "usage": "@idname(i)", "description": "i -th cross-section identifier."}, "@idnameest": {"uri": "poolcmd-Pool", "anchor": "ww197462", "usage": "@idnameest(i)", "description": "i -th cross-section identifier for estimated equation."}, "@method": {"uri": "poolcmd-Pool", "anchor": "ww197428", "usage": "@method", "description": "command line form of estimation method (\u201cLS\u201d, \u201cTSLS\u201d, etc. ...)."}, "@name": {"uri": "poolcmd-Pool", "anchor": "ww197429", "usage": "@name", "description": "returns the Pool\u2019s name."}, "@ncross": {"uri": "poolcmd-Pool", "anchor": "ww177673", "usage": "@ncross", "description": "total number of cross sectional units."}, "@ncrossest": {"uri": "poolcmd-Pool", "anchor": "ww177674", "usage": "@ncrossest", "description": "number of cross sectional units in last estimated pool equation."}, "@npers": {"uri": "poolcmd-Pool", "anchor": "ww191574", "usage": "@npers", "description": "number of workfile periods used in estimation of the pool equation."}, "@options": {"uri": "poolcmd-Pool", "anchor": "ww197430", "usage": "@options", "description": "command line form of pool estimation options."}, "@regobs": {"uri": "poolcmd-Pool", "anchor": "ww177677", "usage": "@regobs", "description": "total number of observations in regression."}, "@remarks": {"uri": "poolcmd-Pool", "anchor": "", "description": "Pooled time series, cross-section object. Used when working with data with both time series and cross-section structure."}, "@residcov": {"uri": "poolcmd-Pool", "anchor": "ww180193", "usage": "@residcov", "description": "(sym) covariance matrix of the residuals."}, "@smpl": {"uri": "poolcmd-Pool", "anchor": "ww197431", "usage": "@smpl", "description": "description of sample used for estimation."}, "@spec": {"uri": "poolcmd-Pool", "anchor": "ww197432", "usage": "@spec", "description": "original Pool estimation specification."}, "@totalobs": {"uri": "poolcmd-Pool", "anchor": "ww177683", "usage": "@totalobs", "description": "total number of observations in the pool. For a balanced sample this is \u201c@regobs*@ncrossest\u201d."}, "@type": {"uri": "poolcmd-Pool", "anchor": "ww197433", "usage": "@type", "description": "returns a string with the object type: \u201cPOOL\u201d."}, "@updatetime": {"uri": "poolcmd-Pool", "anchor": "ww197435", "usage": "@updatetime", "description": "returns a string representation of the time and date at which the Pool was last updated."}, "add": {"uri": "poolcmd-add", "anchor": "", "usage": "pool_name. add id1 [id2 id3 ...]", "description": "Add cross section members to a pool.", "long_description": "List the cross-section identifiers to add to the pool."}, "cellipse": {"uri": "poolcmd-cellipse", "anchor": "", "usage": "pool_name. cellipse (options) restrictions", "description": "Confidence ellipses for coefficient restrictions.", "long_description": "The cellipse view displays confidence ellipses for pairs of coefficient restrictions for an estimation from a pool object.\nEnter the object name, followed by a period, and the keyword cellipse . This should be followed by a list of the coefficient restrictions. Joint (multiple) coefficient restrictions should be separated by commas."}, "clearhist": {"uri": "poolcmd-clearhist", "anchor": "", "usage": "pool_name. clearhist", "description": "Clear the contents of the history attribute for pool objects.", "long_description": "Removes the pool\u2019s history attribute, as shown in the label view of the pool."}, "clearremarks": {"uri": "poolcmd-clearremarks", "anchor": "", "usage": "pool_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the pool\u2019s remarks attribute, as shown in the label view of the pool."}, "coefcov": {"uri": "poolcmd-coefcov", "anchor": "", "usage": "pool_name. coefcov (options)", "description": "Coefficient covariance matrix.", "long_description": "Displays the covariances of the coefficient estimates for an estimated pool object."}, "coint": {"uri": "poolcmd-coint", "anchor": "", "usage": "pool_name. coint (option) pool_ser1 pool_ser2 [pool_ser3]...", "description": "Panel cointegration tests.", "long_description": "Follow the pool name with the coint keyword, any options, and a list of two or more ordinary or pool series."}, "copy": {"uri": "poolcmd-copy", "anchor": "", "usage": "pool_name. copy\npool_name. copy dest_name", "description": "Creates a copy of the pool.", "long_description": "Creates either a named or unnamed copy of the pool."}, "define": {"uri": "poolcmd-define", "anchor": "", "usage": "pool_name. define id1 [id2 id3 ...]", "description": "Define cross section members (identifiers) in a pool.", "long_description": "List the cross section identifiers after the define keyword."}, "delete": {"uri": "poolcmd-delete", "anchor": "", "usage": "pool_name. delete (option) pool_ser1 [pool_ser2 pool_ser3 ...]", "description": "Deletes series based upon identifiers in a pool.", "long_description": "Follow the keyword by a list of the names of any series you wish to remove from the current workfile. Deleting does not remove objects that have been stored on disk in EViews database files.\nThe delete command allows you to delete series from the workfile using ordinary and pool series names.\nYou can delete an object from a database by prefixing the name with the database name and a double colon. You can use a pattern to delete all objects from a workfile or database with names that match the pattern. Use the \u201c?\u201d to match any one character and the \u201c*\u201d to match zero or more characters.\nIf you use delete in a program file, EViews will delete the listed objects without prompting you to confirm each deletion."}, "describe": {"uri": "poolcmd-describe", "anchor": "", "usage": "pool_name. describe (options) pool_ser1 [pool_ser2 pool_ser3 ...]", "description": "Computes and displays descriptive statistics for the pooled data.", "long_description": "List the name of ordinary and pool series for which you wish to compute descriptive statistics.\nBy default, statistics are computed for each stacked pool series, using only common observations where all of the cross-sections for a given series have nonmissing data. A missing observation for a series in any one cross-section causes that observation to be dropped for all cross-sections for the corresponding series. You may change the default treatment of NAs using the \u201ci\u201d and \u201cb\u201d options.\nEViews also allows you to compute statistics with the cross-section means removed, statistics for each cross-sectional series in a pool series, and statistics for each period, taken across all cross-section units."}, "display": {"uri": "poolcmd-display", "anchor": "", "usage": "pool_name. display object_name", "description": "Display table, graph, or spool output in the pool object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the pool object."}, "displayname": {"uri": "poolcmd-displayname", "anchor": "", "usage": "pool_name. displayname display_name", "description": "Display name for pool objects.", "long_description": "Attaches a display name to a pool object which may be used to label output in place of the standard pool object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in pool object names."}, "drop": {"uri": "poolcmd-drop", "anchor": "", "usage": "pool_name. drop id1 [id2 id3 ...]", "description": "Drops cross-section members from a pool.", "long_description": "List the cross-section members to be dropped from the pool."}, "fetch": {"uri": "poolcmd-fetch", "anchor": "", "usage": "pool_name. fetch (options) pool_ser1 [pool_ser2 pool_ser3 ...]", "description": "Fetch objects from databases or databank files into the workfile.", "long_description": "fetch reads one or more objects from EViews databases or databank files into the active workfile. The objects are loaded into the workfile using the object in the database or using the databank file name. EViews will first expand the list of series using the pool operator, and then perform the fetch.\nIf you fetch a series into a workfile with a different frequency, EViews will automatically apply the frequency conversion method attached to the series by setconvert . If the series does not have an attached conversion method, EViews will use the method set by Options/Date-Frequency in the main menu. You can override the conversion method by specifying an explicit conversion method option.\nThe fetch command keyword is followed by a list of object names separated by spaces. The default behavior is to fetch the objects from the default database ( this is a change from versions of EViews prior to EViews 3.x where the default was to fetch from individual databank files).\nYou can precede the object name with a database name and the double colon \u201c::\u201d to indicate a specific database source. If you specify the database name as an option in parentheses (see below), all objects without an explicit database prefix will be fetched from the specified database. You may optionally fetch from individual databank files or search among registered databases.\nYou may use wild card characters, \u201c?\u201d (to match a single character) or \u201c*\u201d (to match zero or more characters), in the object name list. All objects with names matching the pattern will be fetched.\nTo fetch from individual databank files that are not in the default path, you should include an explicit path. If you have more than one object with the same file name (for example, an equation and a series named CONS ), then you should supply the full object file name including identifying extensions."}, "fixedtest": {"uri": "poolcmd-fixedtest", "anchor": "", "usage": "pool_name. fixedtest (options)", "description": "Test joint significance of the fixed effects estimates.", "long_description": "Tests the hypothesis that the estimated fixed effects are jointly significant using [img:../content/images/poolcmd.114.16.1.jpg] and LR test statistics. If the estimated specification involves two-way fixed effects, three separate tests will be performed; one for each set of effects, and one for the joint effects.\nOnly valid for panel or pool regression equations estimated with fixed effects. Not currently available for specifications estimated using instrumental variables."}, "genr": {"uri": "poolcmd-genr", "anchor": "", "usage": "pool_name. genr (option) ser_name = expression", "description": "Generate series.", "long_description": "This procedure allows you to generate multiple series using the cross-section identifiers in a pool.\nYou may use the cross section identifier \u201c?\u201d in the series name and/or in the expression on the right-hand side."}, "label": {"uri": "poolcmd-label", "anchor": "", "usage": "pool_name. label\npool_name. label (options) [text]", "description": "Display or change the label view of a pool object, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the pool object label."}, "ls": {"uri": "poolcmd-ls", "anchor": "", "usage": "pool_name. ls (options) y [x1 x2 x3...] [ @cxreg z1 z2 ...] [ @perreg z3 z4 ...]", "description": "Estimation by linear or nonlinear least squares regression.", "long_description": "ls estimates cross-section weighed least squares, feasible GLS, and fixed and random effects models.\nls carries out pooled data estimation. Type the name of the dependent variable followed by one or more lists of regressors. The first list should contain ordinary and pool series that are restricted to have the same coefficient across all members of the pool. The second list, if provided, should contain pool variables that have different coefficients for each cross-section member of the pool. If there is a cross-section specific regressor list, the two lists must be separated by \u201c@CXREG\u201d. The third list, if provided, should contain pool variables that have different coefficients for each period. The list should be separated from the previous lists by \u201c@PERREG\u201d.\nYou may include AR terms as regressors in either the common or cross-section specific lists. AR terms are, however, not allowed for some estimation methods. MA terms are not supported."}, "makegroup": {"uri": "poolcmd-makegroup", "anchor": "", "usage": "pool_name. makegroup (group_name, options) pool_series1 [pool_series2 pool_series3\u2026]", "description": "Make a group out of pool and ordinary series using a pool object.", "long_description": "List the ordinary and pool series to be placed in the group. If specified, group_name should be the first option."}, "makemodel": {"uri": "poolcmd-makemodel", "anchor": "", "usage": "pool_name. makemodel (name) assign_statement", "description": "Make a model from a pool object.", "long_description": "If you provide a name for the model in parentheses after the keyword, EViews will create the named model in the workfile. If you do not provide a name, EViews will open an untitled model window if the command is executed from the command line."}, "makeresids": {"uri": "poolcmd-makeresids", "anchor": "", "usage": "pool_name. makeresids [poolser]", "description": "Create residual series.", "long_description": "Creates and saves residuals in the workfile from a pool object.\nFollow the object name with a period and the makeresids keyword, then provide a list of names to be given to the stored residuals. You may use a cross section identifier \u201c?\u201d to specify a set of names."}, "makestats": {"uri": "poolcmd-makestats", "anchor": "", "usage": "pool_name. makestats (options) pool_series1 [pool_series2 ...] @ stat_list", "description": "Create and save series of descriptive statistics computed from a pool object.", "long_description": "You should provide options, a list of series names, an \u201c@\u201d separator, and a list of command names for the statistics you wish to compute. The series will have a name with the cross-section identifier \u201c?\u201d replaced by the statistic command."}, "makesystem": {"uri": "poolcmd-makesystem", "anchor": "", "usage": "pool_name. makesystem (options) y [x1 x2 x3 ...] [ @cxeg w1 w2 ...] [ @inst z1 z2 ...] [ @cxinst z3 z4 ...]", "description": "Create system from a pool object.", "long_description": "Creates a system out of the pool equation specification. Each cross-section in the pool will be used to form an equation. The pool variable y is the dependent variable. The [ x1 x2 x3 ...] list consists of regressors with common coefficients in the system. The @cxreg list are regressors with different coefficients in each cross-section. The list of variables that follow @inst are the common instruments. The list of variables that follow @cxinst are the equation specific instruments.\nNote that period specific coefficients and effects are not available in this routine."}, "olepush": {"uri": "poolcmd-olepush", "anchor": "", "usage": "pool_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "output": {"uri": "poolcmd-output", "anchor": "", "usage": "pool_name. output", "description": "Display estimation output.", "long_description": "output changes the default object view to display the estimation output (equivalent to using Pool::results )."}, "ranhaus": {"uri": "poolcmd-ranhaus", "anchor": "", "usage": "pool_name. ranhaus (options)", "description": "Test for correlation between random effects and regressors using Hausman test.", "long_description": "Tests the hypothesis that the random effects (components) are correlated with the right-hand side variables in a pool equation setting. Uses Hausman test methodology to compare the results from the estimated random effects specification and a corresponding fixed effects specification. If the estimated specification involves two-way random effects, three separate tests will be performed; one for each set of effects, and one for the joint effects.\nOnly valid for pool regression equations estimated with random effects. Note that the test results may be suspect in cases where robust standard errors are employed."}, "read": {"uri": "poolcmd-read", "anchor": "", "usage": "pool_name. read (options) [path \\] file_name pool_ser1 [pool_ser2 pool_ser3 ...]", "description": "Import data from a foreign disk file into a pool object.", "long_description": "May be used to import data into an existing workfile from a text, Excel, or Lotus file on disk.\nNote: we strongly recommend that you instead of using this proc, you use wfopen or pageload to read the source data into a panel structured workfile and pageunstack if desired.\nYou must supply the name of the source file. If you do not include the optional path specification, EViews will look for the file in the default directory. Path specifications may point to local or network drives. If the path specification contains a space, you may enclose the entire expression in double quotation marks.\nFollow the source file name with a list of ordinary or pool series."}, "representations": {"uri": "poolcmd-representations", "anchor": "", "usage": "pool_name. representation (options)", "description": "Display text of specification for pool objects."}, "residcor": {"uri": "poolcmd-residcor", "anchor": "", "usage": "pool_name. residcor (options)", "description": "Residual correlation matrix.", "long_description": "Displays the correlations of the residuals from each pool cross-section equation."}, "residcov": {"uri": "poolcmd-residcov", "anchor": "", "usage": "pool_name. residcov (options)", "description": "Residual covariance matrix.", "long_description": "Displays the covariances of the residuals from each pool cross-section equation."}, "resids": {"uri": "poolcmd-resids", "anchor": "", "usage": "pool_name. resids (options)", "description": "Display residuals.", "long_description": "Display the actual, fitted values and residuals in either tabular or graphical form. resids displays multiple graphs, where each graph will contain the residuals for each cross-section in the pool."}, "results": {"uri": "poolcmd-results", "anchor": "", "usage": "pool_name. results (options)", "description": "Displays the results view of a pool object."}, "setattr": {"uri": "poolcmd-setattr", "anchor": "", "usage": "pool_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "sheet": {"uri": "poolcmd-sheet", "anchor": "", "usage": "pool_name. sheet (options) pool_ser1 [pool_ser2 pool_ser3 ...]", "description": "Spreadsheet view of a pool object.", "long_description": "The sheet view displays the spreadsheet view of the series in the pool. Follow the word sheet by a list of series to display; you may use the cross section identifier \u201c?\u201d in the series name."}, "store": {"uri": "poolcmd-store", "anchor": "", "usage": "pool_name. store (options) pool_ser1 [pool_ser2 pool_ser3 ...]", "description": "Store objects in databases and databank files.", "long_description": "Stores one or more objects in the current workfile in EViews databases or individual databank files on disk. The objects are stored under the name that appears in the workfile. EViews will first expand the list of series using the pool operator, and then perform the operation.\nFollow the store command keyword with a list of object names (each separated by a space) that you wish to store. The default is to store the objects in the default database. (This behavior is a change from EViews 2 and earlier where the default was to store objects in individual databank files) .\nYou may precede the object name with a database name and the double colon \u201c::\u201d to indicate a specific database. You can also specify the database name as an option in parentheses, in which case all objects without an explicit database name will be stored in the specified database.\nYou may use the wild card character \u201c*\u201d to match zero or more characters in the object name list. All objects with names matching the pattern will be stored. You may not use \u201c?\u201d as a wildcard character, since this conflicts with the pool identifier.\nYou can optionally choose to store the listed objects in individual databank files. To store in files other than the default path, you should include a path designation before the object name."}, "testadd": {"uri": "poolcmd-testadd", "anchor": "", "usage": "pool_name. testadd (options) [x1 x2 ...] [ @cxreg z1 z2 ...] [ @perreg z3 z4 ...]", "description": "Test whether to add regressors to an estimated equation.", "long_description": "Tests the hypothesis that the listed variables were incorrectly omitted from an estimated equation (only available for equations estimated by list). The test displays some combination of Wald and LR test statistics, as well as the auxiliary regression.\nList the names of the series to test for omission after the keyword."}, "testdrop": {"uri": "poolcmd-testdrop", "anchor": "", "usage": "pool_name. testdrop (options) arg1 [arg2 arg3 ...]", "description": "Test whether to drop regressors from a regression.", "long_description": "Tests the hypothesis that the listed variables were incorrectly included in the estimated equation (only available for equations estimated by list). The test displays some combination of [img:../content/images/poolcmd.114.39.1.jpg] and LR test statistics, as well as the test regression.\nList the names of the series to test for omission after the keyword."}, "tsls": {"uri": "poolcmd-tsls", "anchor": "", "usage": "pool_name.ts ls (options) y [x1 x2 x3 ...] [ @cxreg w1 w2 ...] [ @perreg w3 w4 ...] [ @inst z1 z2 ...] [ @cxinst z3 z4 ...] [ @perinst z5 z6 ...]", "description": "Two-stage least squares.", "long_description": "Type the name of the dependent variable followed by one or more lists of regressors. The first list should contain ordinary and pool series that are restricted to have the same coefficient across all members of the pool. The second list, if provided, should contain pool variables that have different coefficients for each cross-section member of the pool. If there is a cross-section specific regressor list, the two lists must be separated by \u201c@CXREG\u201d. The third list, if provided, should contain pool variables that have different coefficients for each period. The list should be separated from the previous lists by \u201c@PERREG\u201d.\nYou may include AR terms as regressors in either the common or cross-section specific lists. AR terms are, however, not allowed for some estimation methods. MA terms are not supported.\nInstruments should be specified in one of three lists. The \u201c@INST\u201d list should contain instruments that are common across all cross-sections and periods. The \u201c@CXINST\u201d should contain instruments that differ across cross-sections, while the \u201c@PERINST\u201d list specifies instruments that differ across periods.\nThere must be at least as many instrumental variables as there are independent variables. All exogenous variables included in the regressor list should also be included in the corresponding instrument list. A constant is included in the common instrumental list if not explicitly specified."}, "updatecoefs": {"uri": "poolcmd-updatecoefs", "anchor": "", "usage": "pool_name. updatecoef", "description": "Update coefficient object values from pool object.", "long_description": "Copies coefficients from the pool into the appropriate coefficient vector.\nFollow the name of the pool object by a period and the keyword updatecoef ."}, "uroot": {"uri": "poolcmd-uroot", "anchor": "", "usage": "pool_name. uroot (options) pool_series", "description": "Carries out unit root tests on a pool series.", "long_description": "When used with a pool series, the procedure will perform panel unit root testing. The panel unit root tests include Levin, Lin and Chu (LLC), Breitung, Im, Pesaran, and Shin (IPS), Fisher - ADF, Fisher - PP, and Hadri tests on levels, or first or second differences.\nNote that simulation evidence suggests that in various settings (for example, small [img:../content/images/poolcmd.114.42.1.jpg] ), Hadri's panel unit root test experiences significant size distortion in the presence of autocorrelation when there is no unit root. In particular, the Hadri test appears to over-reject the null of stationarity, and may yield results that directly contradict those obtained using alternative test statistics (see Hlouskova and Wagner (2006) for discussion and details).\nEnter the pool object name followed by a period, the keyword, and the name of a pool \u201c?\u201d series."}, "uroot2": {"uri": "poolcmd-uroot2", "anchor": "", "usage": "pool_name. uroot2 (options) pool_series", "description": "Compute dependent (second generation) panel unit root tests on a group of series.", "long_description": "where group_name is the name of a pool object and pool_series is a pool series."}, "wald": {"uri": "poolcmd-wald", "anchor": "", "usage": "pool_name. wald restrictions", "description": "Wald coefficient restriction test.", "long_description": "The wald view carries out a Wald test of coefficient restrictions for a pool object.\nEnter the pool object name, followed by a period, and the keyword. You must provide a list of the coefficient restrictions, with joint (multiple) coefficient restrictions separated by commas."}, "write": {"uri": "poolcmd-write", "anchor": "", "usage": "pool_name. write (options) [path\\filename] pool_series1 [pool_series2 pool_series3 ...]", "description": "Write EViews data to a text (ASCII), Excel, or Lotus file on disk.", "long_description": "Creates a foreign format disk file containing EViews data. May be used to export EViews data to another program.\nNote: we strongly recommend that you instead of using this proc, you use pagestack to create a panel structured workfile and then use wfsave or pagesave .\nFollow the keyword by a name for the output file and list the series to be written. The optional path name may be on the local machine, or may point to a network drive. If the path name contains spaces, enclose the entire expression in double quotation marks.\nNote that EViews cannot, at present, write into an existing file. The file that you select will, if it exists, be replaced."}}, "Sample": {"[Sample]": {"uri": "samplecmd-Sample", "anchor": "", "description": "Sample of observations. Description of a set of observations to be used in operations."}, "@attr": {"uri": "samplecmd-Sample", "anchor": "ww190814", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@description": {"uri": "samplecmd-Sample", "anchor": "ww179215", "usage": "@description", "description": "string containing the Sample object\u2019s description (if available)."}, "@detailedtype": {"uri": "samplecmd-Sample", "anchor": "ww188523", "usage": "@detailedtype", "description": "string with the object type: \u201cSAMPLE\u201d."}, "@displayname": {"uri": "samplecmd-Sample", "anchor": "ww179216", "usage": "@displayname", "description": "string containing the Sample object\u2019s display name. If the Sample has no display name set, the name is returned."}, "@name": {"uri": "samplecmd-Sample", "anchor": "ww179217", "usage": "@name", "description": "string containing the Sample object\u2019s name."}, "@remarks": {"uri": "samplecmd-Sample", "anchor": "ww179218", "usage": "@remarks", "description": "string containing the Sample object\u2019s remarks (if available)."}, "@type": {"uri": "samplecmd-Sample", "anchor": "ww179220", "usage": "@type", "description": "string with the object type: \u201cSAMPLE\u201d."}, "@updatetime": {"uri": "samplecmd-Sample", "anchor": "ww179221", "usage": "@updatetime", "description": "string representation of the time and date at which the Sample was last updated."}, "clearhist": {"uri": "samplecmd-clearhist", "anchor": "", "usage": "sample_name. clearhist", "description": "Clear the contents of the history attribute for sample objects.", "long_description": "Removes the sample\u2019s history attribute, as shown in the label view of the sample."}, "clearremarks": {"uri": "samplecmd-clearremarks", "anchor": "", "usage": "sample_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the sample\u2019s remarks attribute, as shown in the label view of the sample."}, "copy": {"uri": "samplecmd-copy", "anchor": "", "usage": "sample_name. copy\nsample_name. copy dest_name", "description": "Creates a copy of the sample.", "long_description": "Creates either a named or unnamed copy of the sample."}, "display": {"uri": "samplecmd-display", "anchor": "", "usage": "sample_name. display object_name", "description": "Display table, graph, or spool output in the sample object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the sample object."}, "displayname": {"uri": "samplecmd-displayname", "anchor": "", "usage": "sample_name. displayname display_name", "description": "Display name for sample objects.", "long_description": "Attaches a display name to a sample object which may be used to label output in place of the standard sample object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in sample object names."}, "label": {"uri": "samplecmd-label", "anchor": "", "usage": "sample_name. label\nsample_name. label (options) [text]", "description": "Display or change the label view of a sample object, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the sample object label."}, "olepush": {"uri": "samplecmd-olepush", "anchor": "", "usage": "sample_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "set": {"uri": "samplecmd-set", "anchor": "", "usage": "sample_name. set (options) sample_description", "description": "Set the sample in a sample object.", "long_description": "The set procedure resets the sample of an existing sample object.\nFollow the set command with a sample description. See sample for instructions on describing a sample."}, "setattr": {"uri": "samplecmd-setattr", "anchor": "", "usage": "sample_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "spec": {"uri": "samplecmd-spec", "anchor": "", "usage": "sample_name. spec (options)", "description": "Display the sample in a sample object.", "long_description": "The spec procedure displays the sample in an existing sample object."}}, "Scalar": {"[Scalar]": {"uri": "scalarcmd-Scalar", "anchor": "", "description": "Scalar (single number). A scalar holds a single numeric value. Scalar values may be used in standard EViews expressions in place of numeric values."}, "@attr": {"uri": "scalarcmd-Scalar", "anchor": "ww187393", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@description": {"uri": "scalarcmd-Scalar", "anchor": "ww177501", "usage": "@description", "description": "string containing the Scalar object\u2019s description (if available)."}, "@detailedtype": {"uri": "scalarcmd-Scalar", "anchor": "ww186252", "usage": "@detailedtype", "description": "string with the object type: \u201cSCALAR\u201d."}, "@displayname": {"uri": "scalarcmd-Scalar", "anchor": "ww177502", "usage": "@displayname", "description": "string containing the Scalar object\u2019s display name. If the Scalar has no display name set, the name is returned."}, "@name": {"uri": "scalarcmd-Scalar", "anchor": "ww177503", "usage": "@name", "description": "string containing the Scalar object\u2019s name."}, "@remarks": {"uri": "scalarcmd-Scalar", "anchor": "ww177504", "usage": "@remarks", "description": "string containing the Scalar object\u2019s remarks (if available)."}, "@type": {"uri": "scalarcmd-Scalar", "anchor": "ww177506", "usage": "@type", "description": "string with the object type: \u201cSCALAR\u201d."}, "@updatetime": {"uri": "scalarcmd-Scalar", "anchor": "ww177508", "usage": "@updatetime", "description": "string representation of the time and date at which the Scalar was last updated."}, "clearhist": {"uri": "scalarcmd-clearhist", "anchor": "", "usage": "scalar_name. clearhist", "description": "Clear the contents of the history attribute.", "long_description": "Removes the scalar\u2019s history attribute, as shown in the label view of the scalar."}, "clearremarks": {"uri": "scalarcmd-clearremarks", "anchor": "", "usage": "scalar_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the scalar\u2019s remarks attribute, as shown in the label view of the scalar."}, "copy": {"uri": "scalarcmd-copy", "anchor": "", "usage": "scalar_name. copy\nscalar_name. copy dest_name", "description": "Creates a copy of the scalar.", "long_description": "Creates either a named or unnamed copy of the scalar."}, "label": {"uri": "scalarcmd-label", "anchor": "", "usage": "scalar_name. label\nscalar_name. label (options) text", "description": "Display or change the label view of the scalar object, including the last modified date and display name (if any)."}, "olepush": {"uri": "scalarcmd-olepush", "anchor": "", "usage": "scalar_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "setattr": {"uri": "scalarcmd-setattr", "anchor": "", "usage": "scalar_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "sheet": {"uri": "scalarcmd-sheet", "anchor": "", "usage": "scalar_name. sheet (options)", "description": "Spreadsheet view of a scalar object."}}, "Series": {"[Series]": {"uri": "seriescmd-Series", "anchor": "", "description": "Series of numeric observations. An EViews series contains a set of observations on a numeric variable."}, "@attr": {"uri": "seriescmd-Series", "anchor": "ww200805", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@description": {"uri": "seriescmd-Series", "anchor": "ww200806", "usage": "@description", "description": "string containing the Series object\u2019s description (if available)."}, "@detailedtype": {"uri": "seriescmd-Series", "anchor": "ww200808", "usage": "@detailedtype", "description": "string with the object type: \u201cSERIES\u201d, if an ordinary series, or \u201cLINK\u201d, if defined by link."}, "@displayname": {"uri": "seriescmd-Series", "anchor": "ww200809", "usage": "@displayname", "description": "string containing the Series object\u2019s display name. If the Series has no display name set, the name is returned."}, "@first": {"uri": "seriescmd-Series", "anchor": "ww200810", "usage": "@first", "description": "string containing the date or observation number of the first non-NA observation of the series. In a panel workfile, the first date at which any cross-section has a non-NA observation is returned."}, "@firstall": {"uri": "seriescmd-Series", "anchor": "ww200811", "usage": "@firstall", "description": "returns the same as @first , however in a panel workfile, the first date at which all cross-sections have a non-NA observation is returned."}, "@hilo": {"uri": "seriescmd-Series", "anchor": "ww265740", "usage": "@hilo", "description": "string containing the series object\u2019s high-to-low frequency conversion method."}, "@last": {"uri": "seriescmd-Series", "anchor": "ww200812", "usage": "@last", "description": "string containing the date or observation number of the last non-NA observation of the series. In a panel workfile, the last date at which any cross-section has a non-NA observation is returned."}, "@lastall": {"uri": "seriescmd-Series", "anchor": "ww200813", "usage": "@lastall", "description": "returns the same as @last , however in a panel workfile, the last date at which all cross-sections have a non-NA observation is returned."}, "@lohi": {"uri": "seriescmd-Series", "anchor": "ww265854", "usage": "@lohi", "description": "string containing the series object\u2019s low-to-high frequency conversion method."}, "@name": {"uri": "seriescmd-Series", "anchor": "ww200814", "usage": "@name", "description": "string containing the Series object\u2019s name."}, "@remarks": {"uri": "seriescmd-Series", "anchor": "ww200815", "usage": "@remarks", "description": "string containing the Series object\u2019s remarks (if available)."}, "@type": {"uri": "seriescmd-Series", "anchor": "ww200817", "usage": "@type", "description": "string with the object type: \u201cSERIES\u201d."}, "@updatetime": {"uri": "seriescmd-Series", "anchor": "ww200819", "usage": "@updatetime", "description": "string represent of the time and date at which the Series was last updated."}, "adjust": {"uri": "seriescmd-adjust", "anchor": "", "usage": "series_name. adjust [transform] [operator] [values] [interpolation]", "description": "Modify or fill in the values in a series.", "long_description": "Follow the adjust keyword with an expression made up of a combination of transform , operator , values and interpolation components. transform is used to specify a transformation of the data to which the adjustment will be made. The operator contains a mathematical expression defining how you would like to adjust the values in the series. values contains the values used during that operation. Finally, the interpolation component specifies how any missing values in the values component should be filled in via interpolation.\nAll adjustments are made on the current workfile sample."}, "area": {"uri": "graphmaster-area", "anchor": "", "usage": "area (options) o1 [o2 o3 ... ]\nobject_name. area (options) [categorical_spec(arg)]", "description": "Display an area graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the area keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "autoarma": {"uri": "seriescmd-autoarma", "anchor": "", "usage": "series. autoarma ( options ) forecast_name [ exogenous_regressors ]", "description": "Forecast from a series using an ARIMA model with the specification of the model selected automatically."}, "bar": {"uri": "graphmaster-bar", "anchor": "", "usage": "bar (options) o1 [o2 o3 ... ]\nobject_name. bar (options) [categorical_spec(arg)]", "description": "Display a bar graph.", "long_description": "(Note: when the individual bars in a bar graph become too thin to be distinguished, the graph will automatically be converted into an area graph; see area .)\nwhere o1 , o2 , ..., are series or group objects. Following the bar keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "bdstest": {"uri": "seriescmd-bdstest", "anchor": "", "usage": "series_name. bds (options)", "description": "Perform BDS test for independence.", "long_description": "The BDS test is a Portmanteau test for time-based dependence in a series. The test may be used for testing against a variety of possible deviations from independence, including linear dependence, non-linear dependence, or chaos."}, "boxplot": {"uri": "graphmaster-boxplot", "anchor": "", "usage": "boxplot (options) o1 [o2 o3 ... ]\nobject_name. boxplot (options) [categorical_spec(arg)]", "description": "Display boxplots for each series or column.", "long_description": "where o1 , o2 , ..., are series or group objects. You may specify general options after the boxplot keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "bpf": {"uri": "seriescmd-bpf", "anchor": "", "usage": "series_name. bpf (options) [cyc_name]", "description": "Compute and display the band-pass filter of a series.", "long_description": "Computes, and displays a graphical view of the Baxter-King fixed length symmetric, Christiano-Fitzgerald fixed length symmetric, or the Christiano-Fitzgerald full sample asymmetric band-pass filter of the series.\nThe view will show the original series, the cyclical component, and non-cyclical component in a single graph. For non time-varying filters, a second graph will show the frequency responses.\nFollow the bpf keyword with any desired options, and the optional name to be given to the cyclical component. If you do not provide cyc_name , the filtered series will be named BPFILTER## where ## is a number chosen to ensure that the name is unique.\nTo display the graph, you may need to precede the object command with the \u201cshow\u201d keyword."}, "buroot": {"uri": "seriescmd-buroot", "anchor": "", "usage": "series_name. buroot (options)", "description": "Carries out unit root tests which allow for a single breakpoint.", "long_description": "Basic Specification Options\nYou should specify the exogenous variables and order of dependent variable differencing in the test equation using the following options:\n\nexog= arg ( default= \u201cconst\u201d) Specification of exogenous trend variables in the test equation: \u201cconst\u201d \u201c trend \u201d (include a constant and a linear time trend). dif= integer ( default= 0) Order of differencing of the series prior to running the test. Valid values are {0, 1, 2}.\nBreak Options\n\nbreak= arg ( default =\u201cconst\u201d) Specification of breaking trend variables in the test equation: \u201cconst\u201d (intercept only), \u201c both \u201d (intercept and trend), \u201ctrend\u201d (trend only). The latter two are applicable only if \u201cexog=trend\u201d). breakmethod= arg ( default= \u201cdfuller\u201d) Method of specifying the break date: \u201cdfuller\u201d (minimize Dickey-Fuller t -statistic), \u201cminincpt\u201d (minimize intercept break t -statistic), \u201cmaxincpt\u201d (maximize intercept break t -statistic), \u201cabsincpt\u201d (maximize intercept break absolute t -statistic), \u201cmintrend\u201d (minimize trend break t -statistic), \u201cmaxtrend\u201d (maximize trend break t -statistic), \u201cabstrend\u201d (maximize trend break absolute t -statistic), \u201cboth\u201d (maximize joint intercept and trend break F -statistic), \u201cuser\u201d (fixed break date specified using the \u201cuserbreak=\u201d option). trim= arg ( default =10) Trimming percentage for allowable break dates to consider in automatic break selection (applicable if the specified break method selects a date on the basis of intercept or trend break coefficients). userbreak= dateobs User-specified break date. type= arg ( default =\"io\") Break type: innovation outlier (\u201cio\u201d), additive outlier (\u201cao\u201d).\nLag Difference Options\nSpecifies the number of lag difference terms to be included in the test equation. The default is to perform automatic selection using the Schwarz information criterion. You may specify a fixed lag using the \u201clag=\u201d option.\n\nlagmethod= arg (default= \u201csic\u201d ) Method for selecting lag length (number of first difference terms) to be included in the Dickey-Fuller test regressions: \u201caic\u201d (Akaike), \u201csic\u201d (Schwarz), \u201chqc\u201d (Hannan-Quinn), \u201cmsaic\u201d (Modified Akaike), \u201cmsic\u201d (Modified Schwarz), \u201cmhqc\u201d (Modified Hannan-Quinn), \u201ctstat\u201d (Ng-Perron first backward significant t -statistic), \u201cfstat\u201d (significant F -statistic). lag= integer Use-specified fixed lag. maxlag= integer Maximum lag length to consider when performing automatic lag length selection. default = [img:../content/images/seriescmd.118.07.1.jpg] lagpval= arg (default= 0.1 ) Probability value for test-based automatic lag selection (when \u201clagmethod = tstat\u201d and \u201clagmethod=fstat).\nGeneral options\n\nnograph Do not display breakpoint selection graph (by default, EViews shows a graph of all of the individual unit root tests and AR coefficients when there is endogenous breakpoint selection). output= arg Output matrix containing individual unit root regression results for all candidate break dates. Each row contains the relevant workfile observation ID (as reported by @TREND), AR coefficient, AR coefficient standard error, number of observations, number of coefficients, number of lags, and if applicable, the t -statistic or F -statistic used in break selection. prompt Force the dialog to appear from within a program. p Print output from the test."}, "cdtest": {"uri": "seriescmd-cdtest", "anchor": "", "usage": "series_name. cdtest", "description": "Test for the presence of cross-sectional dependence in a panel series.", "long_description": "Computes the Breusch-Pagan (1980) LM, Pesaran (2004) scaled LM, Pesaran (2004) CD, and Baltagi, and Feng and Kao (2012) bias-corrected scaled LM test for a panel series."}, "classify": {"uri": "seriescmd-classify", "anchor": "", "usage": "series_name. classify ( options) spec @ outname [mapname]", "description": "Recode series into classes defined by a grid, specified limits, or quantiles.", "long_description": "Follow the classify keyword with any desired options, the \u201c@\u201d-sign, the name to be given the output series, and optionally the name for a valmap object describing the classification.\nThe form for the specification spec will depend on which of the four supported methods for classification is employed (using the \u201cmethod=\u201d option).\n\u2022 If the default \u201cmethod=step\u201d is employed, EViews will construct the classification using the set of intervals of size step from start through end . The spec specification is of the form\nstepsize start end\nwhere stepsize is a positive numeric value and start and end are numeric values. If start or end are explicitly set to NAs, EViews will use the corresponding minimum and maximum value of the data extended by 5% ( e.g. , 0.95* min or 1.05* max ).\n\u2022 If \u201cmethod=bins\u201d, EViews will construct the classification by dividing the range between start and end into a specified number of bins. The specification is of the form:\nnbins start end\nwhere nbins in the integer number of bins. Note that depending upon whether you have selected left or right-closed intervals (using the \u201crightclosed\u201d option), observations with values equal to the start or end may fall out-of-range.\n\u2022 Using \u201cmethod=limits\u201d specifies a classification using bins defined by a set of limit values. The spec is given by:\narg1 [arg2 arg3 ...]\nwhere the arguments are limit values or EViews vectors containing limit values. Note that there must be at least two limit values and that the values need not be provided in ascending or descending order.\n\u2022 If \u201cmethod=quants\u201d is given, EViews uses the specified number of quantiles for the data, specified as an integer value. The specification is:\nnquants\nwhere nquants is the integer for the number of quantiles. For deciles you should set nquants =10, for quartiles, nquants = 4."}, "clearcontents": {"uri": "seriescmd-clearcontents", "anchor": "", "usage": "series_name. clearcontents ( start_point ) n", "description": "Clear (i.e., replace with NAs) a contiguous block of observations in a series.", "long_description": "Removes the series\u2019s history attribute, as shown in the label view of the series.\nwhere start_point specifies the first of n observations to clear. If n is negative, start_point specifies the last of | n | observations to clear. For dated workfiles, start_point should be entered as a date. For panels and undated workfiles, start_point should be an observation number."}, "clearhist": {"uri": "seriescmd-clearhist", "anchor": "", "usage": "series_name. clearhist", "description": "Clear the contents of the history attribute for series objects.", "long_description": "Removes the series\u2019s history attribute, as shown in the label view of the series."}, "clearremarks": {"uri": "seriescmd-clearremarks", "anchor": "", "usage": "series_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the series\u2019s remarks attribute, as shown in the label view of the series."}, "copy": {"uri": "seriescmd-copy", "anchor": "", "usage": "series_name. copy\nseries_name. copy dest_name", "description": "Creates a copy of the series.", "long_description": "Creates either a named or unnamed copy of the series."}, "correl": {"uri": "seriescmd-correl", "anchor": "", "usage": "series_name. correl (n, options)", "description": "Display autocorrelation and partial correlations.", "long_description": "Displays the autocorrelation and partial correlation functions of the series, together with the Q -statistics and p -values associated with each lag.\nYou must specify the largest lag n to use when computing the autocorrelations."}, "display": {"uri": "seriescmd-display", "anchor": "", "usage": "series_name. display object_name", "description": "Display table, graph, or spool output in the series object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the series object."}, "displayname": {"uri": "seriescmd-displayname", "anchor": "", "usage": "series_name. displayname display_name", "description": "Display name for series objects.", "long_description": "Attaches a display name to a series object which may be used to label output in tables and graphs in place of the standard series object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in series object names."}, "distdata": {"uri": "seriescmd-distdata", "anchor": "", "usage": "series_name. distdata ( dtype= dist_type, dist_options ) matrix_name", "description": "Save distribution plot data to a matrix.", "long_description": "Saves the data used to construct a distribution plot to the workfile.\nsaves the distribution plot data specified by dist_type , where dist_type must be one of the following keywords:\n\nhist Histogram (default). freqpoly Histogram Polygon. edgefreqpoly Histogram Edge Polygon. ash Average Shifted Histogram. kernel Kernel Density theory Theoretical Distribution. cdf Empirical cumulative distribution function. survivor Empirical survivor function. logsurvivor Empirical log survivor function. quantile Empirical quantile function. theoryqq Theoretical quantile-quantile plot."}, "distplot": {"uri": "graphmaster-distplot", "anchor": "", "usage": "distplot (options) o1 [o2 o3 ... ]\nobject_name. distplot (options) analytical_spec ( arg ) [categorical_spec(arg)]", "description": "Display a distribution graph.", "long_description": "where o1 , o2 , ..., are series or group objects.\nWhen used as a command, distplot only allows you to display the default histogram view.\nWhen used as an object view, you must specify the type of distribution graph you wish to create in the analytical_spec . You may select from: histogram, histogram polygon, histogram edge polygon, average shifted histogram, kernel density, theoretical distribution, empirical CDF, empirical survivor, empirical log survivor, or empirical quantile (see \u201cAnalytical Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )"}, "dot": {"uri": "graphmaster-dot", "anchor": "", "usage": "dot (options) o1 [o2 o3 ... ]\nobject_name. dot (options) [categorical_spec(arg)]", "description": "Display a dot plot graph view.", "long_description": "A dot plot is a symbol only version of the line and symbol graph that uses circles to represent the value of each observation.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the dot keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "dsa": {"uri": "seriescmd-dsa", "anchor": "", "usage": "series_name. dsa (options) seas_name [ @fa factor_name] [ @trnd trend_name]", "description": "Seasonally adjust daily series using the DSA method.", "long_description": "You may follow the dsa keyword with a name to save the seasonally adjusted series. Further, you may use the @fa and @trnd keywords to provide names for the saved seasonal factors and the trend series."}, "dups": {"uri": "seriescmd-dups", "anchor": "", "usage": "series_name. dups ( opts )", "description": "Duplicate observations display for observations in the series.", "long_description": "By default, EViews displays a summary table showing the number of duplicate groups of a given size, but you may use the options to display an alternative view.\nOf particular note is that the spreadsheet and individual duplicates displays are interactive - clicking on rows in one will open the display to show the other. Thus, clicking on a duplicate in the spreadsheet view will jump to show all of the observations that share that duplicate. Similarly, clicking on an observation in the shared individual duplicates view will jump to the corresponding observation in the full spreadsheet."}, "edftest": {"uri": "seriescmd-edftest", "anchor": "", "usage": "series_name. edftest (options)", "description": "Computes goodness-of-fit tests based on the empirical distribution function."}, "ets": {"uri": "seriescmd-ets", "anchor": "", "usage": "series_name. ets (options) smooth_name", "description": "Perform Error-Trend-Season (ETS) exponential smoothing.", "long_description": "The ets procedure forecasts a series using the ETS model framework with state-space based likelihood calculations, support for model selection, and calculation of forecast standard errors.\nThe ETS framework defines an extended class of exponential smoothing models, including the standard exponential smoothing models (e.g., Holt and Holt-Winters additive and multiplicative models).\nYou should enter the ets keyword followed by options and then the a name for the smoothed output series. You can specify the smoothing method (the default setting is additive error, no trend, no seasonality) and the smoothing options in the parenthesis."}, "fill": {"uri": "seriescmd-fill", "anchor": "", "usage": "series_name. fill (options) n1[, n2, n3 \u2026]", "description": "Fill a series object with specified values.", "long_description": "Follow the keyword with a list of values to place in the specified object. Each value should be separated by a comma . By default, series fill ignores the current sample and fills the series from the beginning of the workfile range. You may provide sample information using options.\nRunning out of values before the object is completely filled is not an error; the remaining cells or observations will be unaffected, unless the \u201cl\u201d option is specified. If, however, you list more values than the object can hold, EViews will not modify any observations and will return an error message."}, "forcavg": {"uri": "seriescmd-forcavg", "anchor": "", "usage": "series. forcavg ( options ) forecast_data", "description": "Average different forecasts of a series.", "long_description": "You should specify the forecast data to be averaged by entering a list of objects as forecast_data . The list may be a list of series objects, a group object, a series naming pattern (such as \u201cf*\u201d to indicate all series starting with the letter \u201cF\u201d), or a list of equation objects.\nIf a list of equations is entered, EViews will automatically forecast from those equation objects over the forecast sample (the current workfile sample)."}, "freq": {"uri": "seriescmd-freq", "anchor": "", "usage": "series_name. freq (options)", "description": "Compute frequency tables.", "long_description": "The freq command performs a one-way frequency tabulation. The options allow you to control binning (grouping) of observations."}, "hist": {"uri": "seriescmd-hist", "anchor": "", "usage": "series_name. hist (options)", "description": "Histogram and descriptive statistics of a series.", "long_description": "The hist command computes descriptive statistics and displays a histogram for the series."}, "hpf": {"uri": "seriescmd-hpf", "anchor": "", "usage": "series_name. hpf (options) filtered_name [@ cycle_name]", "description": "Smooth a series using the Hodrick-Prescott filter.", "long_description": "You may need to prepend the \u201cshow\u201d keyword to display the graph the smoothed and original series."}, "insertobs": {"uri": "seriescmd-insertobs", "anchor": "", "usage": "series_name. insertobs (startpoint) n", "description": "Shift the observations of the series up or downwards, inserting blank observations.", "long_description": "Where startpoint specifies the first or last observation from which the observations are shifted. For dated workfiles, startpoint should be entered as a date. For panels and non-dated workfiles startpoint should be an observation number.\nn specifies the number of observations shifted."}, "ipolate": {"uri": "seriescmd-ipolate", "anchor": "", "usage": "series_name. ipolate (options) series_name", "description": "Fill in missing values, or NAs, within a series by interpolating from values that are not missing."}, "label": {"uri": "seriescmd-label", "anchor": "", "usage": "series_name. label\nseries_name. label (options) [text]", "description": "Display or change the label view of a series object, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the series label."}, "line": {"uri": "graphmaster-line", "anchor": "", "usage": "line (options) o1 [o2 o3 ... ]\nobject_name. line (options) [categorical_spec(arg)]", "description": "Display a line graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the line keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "lrvar": {"uri": "seriescmd-lrvar", "anchor": "", "usage": "Series View:\tseries_name. lrvar ( options )", "description": "Compute the symmetric, one-sided, or strict one-sided long-run variance of a series."}, "makepanpcomp": {"uri": "seriescmd-makepanpcomp", "anchor": "", "usage": "series_name. makepanpcomp (options) output_list", "description": "Save the scores from a principal components analysis of a panel series.", "long_description": "where the output_list is a list of names identifying the saved components. EViews will save the first [img:../content/images/seriescmd.118.36.1.jpg] components corresponding to the [img:../content/images/seriescmd.118.36.2.jpg] elements in output_list , up to the total number of series in the group."}, "makewavelets": {"uri": "seriescmd-makewavelets", "anchor": "", "usage": "Series View:\tseries_name. makewaveobj (options)", "description": "Save wavelet decomposition results to the workfile."}, "makewhiten": {"uri": "seriescmd-makewhiten", "anchor": "", "usage": "Series View:\tseries_name. makewhiten ( options ) out_specification", "description": "Whiten the series.", "long_description": "Estimate an AR( [img:../content/images/seriescmd.118.39.1.jpg] ), compute the residuals, and save the results into a whitened series.\nwhere out_name is either a name for the output series or a wildcard expression. Note that a wildcard may not be used if the original group contains series expressions."}, "map": {"uri": "seriescmd-map", "anchor": "", "usage": "series_name. map [valmap_name]", "description": "Assign or remove value map setting.", "long_description": "If the optional valmap name is provided, the procedure will assign the specified value map to the series. If no name is provided, EViews will remove an existing valmap assignment."}, "movereg": {"uri": "seriescmd-movereg", "anchor": "", "description": "Seasonally adjust series using the movereg method.", "long_description": "movereg is only available for weekly data."}, "olepush": {"uri": "seriescmd-olepush", "anchor": "", "usage": "series_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "pancov": {"uri": "seriescmd-pancov", "anchor": "", "usage": "series_name. pancov ( options ) [keywords]", "description": "Compute covariances, correlations, and other measures of association for a panel series.", "long_description": "You may compute measures related to Pearson product-moment (ordinary) covariances and correlations, Spearman rank covariances, or Kendall\u2019s tau along with test statistics for evaluating whether the correlations are equal to zero.\nBy default, EViews will compute the contemporaneous (between cross-section) covariances, correlations and related statistics for the panel series. You may use the \u201cperiod\u201d option to instruct EViews to compute the between period (within cross-section) measures.\nYou should specify keywords indicating the statistics you wish to display from the list below.\nYou may specify keywords from one of the four sets (Pearson correlation, Spearman rank correlation, Kendall\u2019s tau, Uncentered Pearson) corresponding the computational method you wish to employ. (You may not select keywords from more than one set.)\nIf you do not specify keywords , EViews will assume \u201ccov\u201d and compute the Pearson covariance matrix.\nPearson Correlation\n\ncov Product moment covariance. corr Product moment correlation. sscp Sums-of-squared cross-products. stat Test statistic ( t -statistic) for evaluating whether the correlation is zero. prob Probability under the null for the test statistic. cases Number of cases. obs Number of observations.\nSpearman Rank Correlation\n\nrcov Spearman\u2019s rank covariance. rcorr Spearman\u2019s rank correlation. rsscp Sums-of-squared cross-products. rstat Test statistic ( t -statistic) for evaluating whether the correlation is zero. rprob Probability under the null for the test statistic. cases Number of cases. obs Number of observations.\nKendall\u2019s tau\n\ntaub Kendall\u2019s tau-b. taua Kendall\u2019s tau-a. taucd Kendall\u2019s concordances and discordances. taustat Kendall\u2019s score statistic for evaluating whether the Kendall\u2019s tau-b measure is zero. tauprob Probability under the null for the score statistic. cases Number of cases. obs Number of observations.\nUncentered Pearson\n\nucov Product moment covariance. ucorr Product moment correlation. usscp Sums-of-squared cross-products. ustat Test statistic ( t -statistic) for evaluating whether the correlation is zero. uprob Probability under the null for the test statistic. cases Number of cases. obs Number of observations.\nNote that cases and obs are available for each of the methods.\n"}, "panpcomp": {"uri": "seriescmd-panpcomp", "anchor": "", "usage": "group_name. panpcomp (options) [indices]", "description": "Panel principal components analysis.", "long_description": "where the elements to display in loadings, scores, and biplot graph form (\u201cout=loadings\u201d, \u201cout=scores\u201d or \u201cout=biplot\u201d) are given by the optional indices , ( e.g. , \u201c1 2 3\u201d or \u201c2 3\u201d). If indices is not provided, the first two elements will be displayed."}, "qqplot": {"uri": "graphmaster-qqplot", "anchor": "", "usage": "qqplot (options) o1 [o2 o3 ... ]\nobject_name. qqplot (options) analytical_spec(arg) [categorical_spec(arg)]", "description": "Display a quantile-quantile graph.", "long_description": "Plots the (empirical) quantiles of a series or matrix column against either the quantiles of a theoretical distribution or the empirical quantiles of other series or columns in the group or matrix. You may specify the theoretical distribution and/or the method used to compute the empirical quantiles as options.\nwhere o1 , o2 , ..., are series or group objects.\nWhen used as a command, qqplot displays the theoretical qq-plot against a fitted normal distribution.\nWhen used to display the view of an object, you must specify a theoretical or empirical quantile graph in the analytical_spec (see \u201cAnalytical Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "resample": {"uri": "seriescmd-resample", "anchor": "", "usage": "series_name. resample (options) [output_spec]", "description": "Resample from observations in a series.", "long_description": "You should follow the resample keyword and options and an output_spec containing a list of names or a wildcard expression identifying the series to hold the output. If a list is used to identify the targets, the number of target series must match the number of names implied by the keyword."}, "seas": {"uri": "seriescmd-seas", "anchor": "", "usage": "series_name. seas (options) name_adjust [name_fac]", "description": "Seasonal adjustment.", "long_description": "The seas command carries out seasonal adjustment using either the ratio to moving average, or the difference from moving average technique.\nEViews also performs Census X11, Census X12, and Census X-13ARIMA-SEATS seasonal adjustment. For details, see Series::x11 , Series::x12 , and Series::x13 ."}, "seasplot": {"uri": "graphmaster-seasplot", "anchor": "", "usage": "seasplot (options) o1 [o2 o3 ... ]\nobject_name. seasplot (options)", "description": "Display a seasonal line graph view.", "long_description": "seasplot displays a paneled line graph view of a series or column ordered by season. This view is only available for workfiles with quarterly, monthly, or semi-annual frequencies.\nwhere o1 , o2 , ..., are series or group objects."}, "seasuroot": {"uri": "seriescmd-seasuroot", "anchor": "", "usage": "series_name. seasuroot (options)", "description": "Carries out seasonal unit root tests on a series.", "long_description": "Computes Hylleberg, Engle, Granger, and Yoo (HEGY, 1990) test, Smith and Taylor (1998) likelihood HEGY test, Canova and Hansen (CH, 1995), and Taylor (2005) HEGY variance ratio tests."}, "setattr": {"uri": "seriescmd-setattr", "anchor": "", "usage": "series_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "setconvert": {"uri": "seriescmd-setconvert", "anchor": "", "usage": "ser_name . setconvert [up_method down_method]", "description": "Set frequency conversion method.", "long_description": "Determines the default frequency conversion method for a series when copied or linked between different frequency workfiles.\nYou may override this default conversion method by specifying a frequency conversion method as an option in the specific command (using copy or fetch or Link::linkto ).\nIf you do not set a conversion method and if you do not specify a conversion method as an option in the command, EViews will use the conversion method set in the global option.\nFollow the series name with a period, the keyword, and option letters to specify the frequency conversion method. If either the up-conversion or down-conversion method is omitted, EViews will set the corresponding method to Use EViews default ."}, "setfillcolor": {"uri": "seriescmd-setfillcolor", "anchor": "", "usage": "series_name. setfillcolor ( t= type ) fill_color_args", "description": "Set the fill (background) color used in the series spreadsheet using values in the spreadsheet or in a different series.", "long_description": "where:\n\ntype = arg Type of fill coloring for spreadsheet cells: \u201csingle\u201d (single color), \u201cposneg\u201d (positive-negative single threshold), \u201crange\u201d (single range coloring), \u201chilo\u201d (high-low-median), \u201ccustom\u201d (custom coloring)."}, "setformat": {"uri": "seriescmd-setformat", "anchor": "", "usage": "series_name. setformat format_arg", "description": "Set the display format for cells in a series object spreadsheet view.", "long_description": "where format_arg is a set of arguments used to specify format settings. If necessary, you should enclose the format_arg in double quotes.\nFor series, setformat operates on all of the cells in the series.\nTo format numeric values, you should use one of the following format specifications:\n\ng [.precision] significant digits f [.precision] fixed decimal places c [.precision] fixed characters e [.precision] scientific/float p [.precision] percentage r [.precision] fraction\nTo specify a format that groups digits into thousands using a comma separator, place a \u201ct\u201d after the format character. For example, to obtain a fixed number of decimal places with commas used to separate thousands, use \u201cft [.precision] \u201d.\nTo use the period character to separate thousands and commas to denote decimal places, use \u201c..\u201d (two periods) when specifying the precision. For example, to obtain a fixed number of characters with a period used to separate thousands, use \u201cct [..precision] \u201d.\nIf you wish to display negative numbers surrounded by parentheses ( i.e. , display the number -37.2 as \u201c(37.2)\u201d), you should enclose the format string in \u201c()\u201d ( e.g. , \u201cf(.8)\u201d).\nTo format numeric values using date and time formats, you may use a subset of the possible date format strings (see \u201cDate Formats\u201d ). The possible format arguments, along with an example of the date number 730856.944793113 (January 7, 2002 10:40:30.125 p.m) formatted using the argument are given by:\n\nWF (uses current EViews workfile period display format) YYYY \u201c2002\u201d YYYY-Mon \u201c2002-Jan\u201d YYYYMon \u201c2002 Jan\u201d YYYY[M]MM \u201c2002[M]01\u201d YYYY:MM \u201c2002:01\u201d YYYY[Q]Q \u201c2002[Q]1\u201d YYYY:Q \u201c2002:Q YYYY[S]S \u201c2002[S]1\u201d (semi-annual) YYYY:S \u201c2002:1\u201d YYYY-MM-DD \u201c2002-01-07\u201d YYYY Mon dd \u201c2002 Jan 7\u201d YYYY Month dd \u201c2002 January 7\u201d YYYY-MM-DD HH:MI \u201c2002-01-07 22:40\u201d YYYY-MM-DD HH:MI:SS \u201c2002-01-07 22:40:30\u201d YYYY-MM-DD HH:MI:SS.SSS \u201c2002-01-07 22:40:30.125\u201d Mon-YYYY \u201cJan-2002\u201d Mon dd YYYY \u201cJan 7 2002\u201d Mon dd, YYYY \u201cJan 7, 2002\u201d Month dd YYYY \u201cJanuary 7 2002\u201d Month dd, YYYY \u201cJanuary 7, 2002\u201d MM/DD/YYYY \u201c01/07/2002\u201d mm/DD/YYYY \u201c1/07/2002\u201d mm/DD/YYYY HH:MI \u201c1/07/2002 22:40\u201d mm/DD/YYYY HH:MI:SS \u201c1/07/2002 22:40:30\u201d mm/DD/YYYY HH:MI:SS.SSS \u201c1/07/2002 22:40:30.125\u201d mm/dd/YYYY \u201c1/7/2002\u201d mm/dd/YYYY HH:MI \u201c1/7/2002 22:40\u201d mm/dd/YYYY HH:MI:SS \u201c1/7/2002 22:40:30\u201d mm/dd/YYYY HH:MI:SS.SSS \u201c1/7/2002 22:40:30.125\u201d dd/MM/YYYY \u201c7/01/2002\u201d dd/mm/YYYY \u201c7/1/2002\u201d DD/MM/YYYY \u201c07/01/2002\u201d dd Mon YYYY \u201c7 Jan 2002\u201d dd Mon, YYYY \u201c7 Jan, 2002\u201d dd Month YYYY \u201c7 January 2002\u201d dd Month, YYYY \u201c7 January, 2002\u201d dd/MM/YYYY HH:MI \u201c7/01/2002 22:40\u201d dd/MM/YYYY HH:MI:SS \u201c7/01/2002 22:40:30\u201d dd/MM/YYYY HH:MI:SS.SSS \u201c7/01/2002 22:40:30.125\u201d dd/mm/YYYY hh:MI \u201c7/1/2002 22:40\u201d dd/mm/YYYY hh:MI:SS \u201c7/1/2002 22:40:30\u201d dd/mm/YYYY hh:MI:SS.SSS \u201c7/1/2002 22:40:30.125\u201d hm:MI am \u201c10:40 pm\u201c hm:MI:SS am \u201c10:40:30 pm\u201d hm:MI:SS.SSS am \u201c10:40:30.125 pm\u201d HH:MI \u201c22:40\u201d HH:MI:SS \u201c22:40:30\u201d HH:MI:SS.SSS \u201c22:40:30.125\u201d hh:MI \u201c22:40\u201d hh:MI:SS \u201c22:40:30\u201d hh:MI:SS.SSS \u201c22:40:30.125\u201d\nNote that the \u201chh\u201d formats display 24-hour time without leading zeros. In our examples above, there is no difference between the \u201cHH\u201d and \u201chh\u201d formats for 10 p.m.\nAlso note that all of the \u201cYYYY\u201d formats above may be displayed using two-digit year \u201cYY\u201d format."}, "setindent": {"uri": "seriescmd-setindent", "anchor": "", "usage": "series_name. setindent indent_arg", "description": "Set the display indentation for cells in a series object spreadsheet view.", "long_description": "where indent_arg is an indent value specified in 1/5 of a width unit. The width unit is computed from representative characters in the default font for the current spreadsheet (the EViews spreadsheet default font at the time the spreadsheet was created), and corresponds roughly to a single character. Indentation is only relevant for non-center justified cells.\nThe default indentation setttings are taken from the Global Defaults for spreadsheet views ( \u201cSpreadsheet Data Display\u201d ) at the time the spreadsheet was created.\nFor series, setindent operates on all of the cells in the series."}, "setjust": {"uri": "seriescmd-setjust", "anchor": "", "usage": "series_name. setjust format_arg", "description": "Set the horizontal justification for all cells in the spreadsheet view of the series.", "long_description": "where format_arg may be set to left, center, right, or auto (strings are left-justified and numbers are right-justified). Default display settings can be set in General Options; see \u201cSpreadsheet Data Display\u201d ."}, "settextcolor": {"uri": "seriescmd-settextcolor", "anchor": "", "usage": "series_name. settextcolor ( t= type ) text_color_args", "description": "Set the text color used in the series spreadsheet using values in the spreadsheet or in a different series.", "long_description": "where:\n\ntype = arg Type of fill coloring for spreadsheet cells: \u201csingle\u201d (single color), \u201cposneg\u201d (positive-negative single threshold), \u201crange\u201d (single range coloring), \u201chilo\u201d (high-low-median), \u201ccustom\u201d (custom coloring)."}, "setwidth": {"uri": "seriescmd-setwidth", "anchor": "", "usage": "series_name. setwidth width_arg", "description": "Set the column width for a series spreadsheet.", "long_description": "where width_arg specifies the width unit value. The width unit is computed from representative characters in the default font for the current spreadsheet (the EViews spreadsheet default font at the time the spreadsheet was created), and corresponds roughly to a single character. width_arg values may be non-integer values with resolution up to 1/10 of a width unit."}, "sheet": {"uri": "seriescmd-sheet", "anchor": "", "usage": "series_name. sheet (options)", "description": "Spreadsheet view of a series object."}, "smooth": {"uri": "seriescmd-smooth", "anchor": "", "usage": "series_name. smooth (method) smooth_name [freq]", "description": "Exponential smoothing.", "long_description": "Forecasts a series using one of a number of exponential smoothing techniques. By default, smooth estimates the damping parameters of the smoothing model to minimize the sum of squared forecast errors, but you may specify your own values for the damping parameters.\nsmooth automatically calculates in-sample forecast errors and puts them into the series RESID .\nYou should follow the smooth keyword with a name for the smoothed series. You must also specify the smoothing method in parentheses. The optional freq may be used to override the default for the number of periods in the seasonal cycle. By default, this value is set to the workfile frequency ( e.g. \u2014 4 for quarterly data). For undated data, the default is 5."}, "sort": {"uri": "seriescmd-sort", "anchor": "", "usage": "series_name. sort ([opt])", "description": "Change display order for series spreadsheet.", "long_description": "The sort command changes the sort order settings for spreadsheet display of the series.\nBy default, EViews will sort by the value of the series, in ascending order. For purposes of sorting, NAs are considered to be smaller than any other value.\nYou may modify the default sort order by providing a sort option. If you provide the integer \u201c0\u201d, or the keyword \u201cobs\u201d, EViews will sort using the original workfile observation order. To sort in descending order, simply include the minus sign (\u201c\u2011\u201d)."}, "spike": {"uri": "graphmaster-spike", "anchor": "", "usage": "spike (options) o1 [o2 o3 ... ]\nobject_name. spike (options) [categorical_spec(arg)]", "description": "Display a spike graph view.", "long_description": "where o1 , o2 , ..., are series or group objects.\nFollowing the spike keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "statby": {"uri": "seriescmd-statby", "anchor": "", "usage": "series_name. statby (options) classifier_names", "description": "Basic statistics by classification.", "long_description": "The statby view displays descriptive statistics for the elements of a series classified into categories by one or more series.\nFollow the series name with a period, the statby keyword, and a name (or a list of names) for the series or group by which to classify. The options control which statistics to display and in what form. By default, statby displays the means, standard deviations, and counts for the series."}, "stats": {"uri": "seriescmd-stats", "anchor": "", "usage": "series_name. stats (options)", "description": "Descriptive statistics.", "long_description": "Computes and displays a table of means, medians, maximum and minimum values, standard deviations, and other descriptive statistics of a series."}, "stl": {"uri": "seriescmd-stl", "anchor": "", "description": "Seasonally adjust series using the STL decomposition method.", "long_description": "Unlike other seasonal adjustment methods used by EViews, this procedure works on any time frequency."}, "testby": {"uri": "seriescmd-testby", "anchor": "", "usage": "series_name. testby (options) arg1 [arg2 arg2 \u2026]", "description": "Test equality of the mean, median, or variance of a series across categories classified by a list of series or a group.", "long_description": "Follow the testby keyword by a list of the names of the series or groups to use as classifiers. Specify the type of test as an option."}, "teststat": {"uri": "seriescmd-teststat", "anchor": "", "usage": "series_name. teststat (options)", "description": "Test simple hypotheses of whether the mean, median, or variance of a series is equal to a specified value.", "long_description": "Specify the type of test and the value under the null hypothesis as an option."}, "tramoseats": {"uri": "seriescmd-tramoseats", "anchor": "", "usage": "series_name. tramoseats (options) [base_name]", "description": "Run the external seasonal adjustment program Tramo/Seats using the data in the series.", "long_description": "tramoseats is available for annual, semi-annual, quarterly, and monthly series. The procedure requires at least [img:../content/images/seriescmd.118.65.1.jpg] observations and can adjust up to 600 observations where:\n(1.4)\nEnter the name of the original series followed by a dot, the keyword, and optionally provide a base name (no more than 20 characters long) to name the saved series. The default base name is the original series name. The saved series will have postfixes appended to the base name."}, "uroot": {"uri": "seriescmd-uroot", "anchor": "", "usage": "series_name. uroot (options)", "description": "Carries out unit root tests on a series or panel structured series.", "long_description": "For ordinary series, computes conventional Augmented Dickey-Fuller (ADF), GLS detrended Dickey-Fuller (DFGLS), Phillips-Perron (PP), Kwiatkowski, et. al. (KPSS), Elliot, Rothenberg, and Stock (ERS) Point Optimal, or Ng and Perron (NP) tests for a unit root in the series or its first or second difference.\nFor series in a panel structured workfile, computes Levin, Lin and Chu (LLC), Breitung, Im, Pesaran, and Shin (IPS), Fisher - ADF, Fisher - PP, or Hadri panel unit root tests on levels, first, or second differences of the data.\nThere are different options for conventional tests on an ordinary series and panel tests for series in panel structured workfiles."}, "uroot2": {"uri": "seriescmd-uroot2", "anchor": "", "usage": "ser_name. uroot2 (options)", "description": "Compute dependent (second generation) panel unit root tests on a panel series.", "long_description": "where ser_name is the name of a series in a panel structured workfile."}, "vratio": {"uri": "seriescmd-vratio", "anchor": "", "usage": "Series View:\tseries_name. vratio (options) lag_specification\nSeries View:\tseries_name. vratio(grid [, options] ) start end [step]", "description": "Compute the Lo and MacKinlay (1988) variance ratio test using the original data, or the Wright (2000) rank, rank-score, or sign-based forms of the test.", "long_description": "Multiple comparisons are handled using Wald (Richardson and Smith, 1991) or multiple comparison variance ratio (Chow and Denning, 1993). Significance levels may be computed using the asymptotic distribution, or the wild or permutation bootstrap.\nIn the first form of the command, lag_specification should contain the lag values to test in the form of a list of integers, scalars, or a vector containing integer values greater than 1.\nIn the second form of the command, we include the \u201cgrid\u201d option and specify a grid of lag values in the form\nstart end [step]\nwhere start is the smallest lag, end is the largest required lag, and the optional step indicates which intermediate lags to consider. By default, step is set to 1 so that all lags from start through end will be included."}, "waveanova": {"uri": "seriescmd-waveanova", "anchor": "", "usage": "Series View:\tseries_name. waveanova (options)", "description": "Perform wavelet variance decomposition of the series."}, "wavedecomp": {"uri": "seriescmd-wavedecomp", "anchor": "", "usage": "Series View:\tseries_name. wavelet (options)", "description": "Compute the wavelet transform of the series."}, "waveoutlier": {"uri": "seriescmd-waveoutlier", "anchor": "", "usage": "Series View:\tseries_name. waveoutlier (options)", "description": "Perform wavelet outlier detection for the series."}, "wavethresh": {"uri": "seriescmd-wavethresh", "anchor": "", "usage": "Series View:\tseries_name. wavethresh (options)", "description": "Perform wavelet thresholding (denoising) of the series."}, "x11": {"uri": "seriescmd-x11", "anchor": "", "usage": "series_name. x11 (options) adj_name [fac_name]", "description": "Seasonally adjust series using the Census X11.2 method.", "long_description": "Earlier versions of EViews provided (historical) X11 routines as a separate procedure (see but the programs do not run on 64-bit operating systems and are no longer supported."}, "x12": {"uri": "seriescmd-x12", "anchor": "", "usage": "series_name. x12 (options) base_name", "description": "Seasonally adjust series using the Census X12 method.", "long_description": "x12 is available only for quarterly and monthly series. The procedure requires at least 3 full years of data and can adjust up to 600 observations (50 years of monthly data or 150 years of quarterly data).\nEnter the name of the original series followed by a dot, the keyword, and a base name (no more than the maximum length of a series name minus 4) for the saved series. If you do not provide a base name, the original series name will be used as a base name. See the description in \u201csave=\u201d option below for the naming convention used to save series."}, "x13": {"uri": "seriescmd-x13", "anchor": "", "description": "Seasonally adjust series using the Census X-13 method.", "long_description": "Census X-13 is available only for quarterly and monthly series. The procedure requires at least 3 full years of data and can adjust up to 600 observations (50 years of monthly data or 150 years of quarterly data)."}}, "Alpha": {"[Alpha]": {"uri": "alphacmd-Alpha", "anchor": "", "description": "Alpha (alphanumeric) series. An EViews alpha series contains observations on a variable containing string values."}, "@attr": {"uri": "alphacmd-Alpha", "anchor": "ww196908", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@description": {"uri": "alphacmd-Alpha", "anchor": "ww196888", "usage": "@description", "description": "string containing the alpha object\u2019s description (if available) ."}, "@detailedtype": {"uri": "alphacmd-Alpha", "anchor": "ww191342", "usage": "@detailedtype", "description": "string describing the object type: \u201cALPHA\u201d, if an ordinary alpha series, or \u201cLINK\u201d, if defined by link."}, "@displayname": {"uri": "alphacmd-Alpha", "anchor": "ww183940", "usage": "@displayname", "description": "string containing alpha object\u2019s display name. If the Alpha has no display name set, the name is returned."}, "@first": {"uri": "alphacmd-Alpha", "anchor": "ww183941", "usage": "@first", "description": "string containing the date or observation number of the first non-blank observation of the alpha. In a panel workfile, the first date at which any cross-section has a non-blank observation is returned."}, "@firstall": {"uri": "alphacmd-Alpha", "anchor": "ww183942", "usage": "@firstall", "description": "returns the same as @first , however in a panel workfile, the first date at which all cross-sections have a non-blank observation is returned."}, "@hilo": {"uri": "alphacmd-Alpha", "anchor": "", "description": "Alpha (alphanumeric) series. An EViews alpha series contains observations on a variable containing string values."}, "@last": {"uri": "alphacmd-Alpha", "anchor": "ww183943", "usage": "@last", "description": "string containing the date or observation number of the last non-blank observation of the alpha. In a panel workfile, the last date at which any cross-section has a non-blank observation is returned."}, "@lastall": {"uri": "alphacmd-Alpha", "anchor": "ww183944", "usage": "@lastall", "description": "returns the same as @last , however in a panel workfile, the last date at which all cross-sections have a non-blank observation is returned."}, "@lohi": {"uri": "alphacmd-Alpha", "anchor": "", "description": "Alpha (alphanumeric) series. An EViews alpha series contains observations on a variable containing string values."}, "@name": {"uri": "alphacmd-Alpha", "anchor": "ww183945", "usage": "@name", "description": "string containing the alpha object\u2019s name."}, "@remarks": {"uri": "alphacmd-Alpha", "anchor": "ww183946", "usage": "@remarks", "description": "string containing the alpha object\u2019s remarks (if available)."}, "@type": {"uri": "alphacmd-Alpha", "anchor": "ww183948", "usage": "@type", "description": "string describing the object type: \u201cALPHA\u201d."}, "@updatetime": {"uri": "alphacmd-Alpha", "anchor": "ww183950", "usage": "@updatetime", "description": "string representation of the time and date at which the alpha was last updated."}, "clearhist": {"uri": "alphacmd-clearhist", "anchor": "", "usage": "alpha_name. clearhist", "description": "Clear the contents of the history attribute.", "long_description": "Removes the alpha\u2019s history attribute, as shown in the label view of the alpha."}, "clearremarks": {"uri": "alphacmd-clearremarks", "anchor": "", "usage": "alpha_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the alpha\u2019s remarks attribute, as shown in the label view of the alpha."}, "copy": {"uri": "alphacmd-copy", "anchor": "", "usage": "alpha_name. copy\nalpha_name. copy dest_name", "description": "Creates a copy of the alpha series.", "long_description": "Creates either a named or unnamed copy of the alpha series."}, "display": {"uri": "alphacmd-display", "anchor": "", "usage": "alpha_name. display object_name", "description": "Display table, graph, or spool output in the alpha object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the alpha object."}, "displayname": {"uri": "alphacmd-displayname", "anchor": "", "usage": "alpha_name. displayname display_name", "description": "Display name for an alpha object.", "long_description": "Attaches a display name to an alpha object. The display name may be used to label output in tables and graphs in place of the standard alpha object name.\nDisplay names are case-sensitive, and may contain various characters, such as spaces, that are not allowed in alpha object names."}, "dups": {"uri": "alphacmd-dups", "anchor": "", "usage": "series_name. dups ( opts )", "description": "Duplicate observations display for observations in the series.", "long_description": "By default, EViews displays a summary table showing the number of duplicate groups of a given size, but you may use the options to display an alternative view.\nOf particular note is that the spreadsheet and individual duplicates displays are interactive - clicking on rows in one will open the display to show the other. Thus, clicking on a duplicate in the spreadsheet view will jump to show all of the observations that share that duplicate. Similarly, clicking on an observation in the shared individual duplicates view will jump to the corresponding observation in the full spreadsheet."}, "freq": {"uri": "alphacmd-freq", "anchor": "", "usage": "alpha_name. freq (options)", "description": "Compute frequency tables.", "long_description": "freq performs a one-way frequency tabulation. The options allow you to control binning (grouping) of observations."}, "label": {"uri": "alphacmd-label", "anchor": "", "usage": "alpha_name. label\nalpha_name. label (options) text", "description": "Display or change the label view of an alpha series, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the alpha series label."}, "makemap": {"uri": "alphacmd-makemap", "anchor": "", "usage": "alpha_name. makemap (options) ser_name map_name", "description": "Create a numeric classification series and valmap from alpha series.", "long_description": "creates a classification series ser_name and an associated valmap map_name in the workfile. The valmap will automatically be assigned to the series."}, "map": {"uri": "alphacmd-map", "anchor": "", "usage": "alpha_name. map [valmap_name]", "description": "Assign or remove value map to alpha series.", "long_description": "If the optional valmap name is provided, the procedure will assign the specified value map to the alpha series. If no name is provided, EViews will remove an existing valmap assignment."}, "olepush": {"uri": "alphacmd-olepush", "anchor": "", "usage": "alpha_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "setattr": {"uri": "alphacmd-setattr", "anchor": "", "usage": "alpha_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "setjust": {"uri": "alphacmd-setjust", "anchor": "", "usage": "alpha_name. setjust just_arg", "description": "Set the horizontal justification for all cells in the spreadsheet view of the alpha series.", "long_description": "where format_arg may be set to left, center, right, or auto (strings are left-justified and numbers are right-justified). Default display settings can be set in General Options; see \u201cSpreadsheet Data Display\u201d ."}, "sheet": {"uri": "alphacmd-sheet", "anchor": "", "usage": "alpha_name. sheet (options)", "description": "Spreadsheet view of an alpha series object."}, "sort": {"uri": "alphacmd-sort", "anchor": "", "usage": "alpha_name. sort ([opt])", "description": "Change display order for an alpha series spreadsheet.", "long_description": "The sort command changes the sort order settings for spreadsheet display of the alpha series.\nBy default, EViews will sort the alpha series alphabetically. For purposes of sorting, NAs are considered to be smaller than any other value.\nYou may modify the default sort order by providing a sort option. If you provide the integer \u201c0\u201d, or the keyword \u201cobs\u201d, EViews will sort using the original workfile observation order. To sort in descending order, simply include the minus sign (\u201c\u2011\u201d)."}}, "Spool": {"[Spool]": {"uri": "spoolcmd-Spool", "anchor": "", "description": "Spool object. Container for output objects."}, "@attr": {"uri": "spoolcmd-Spool", "anchor": "ww211283", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@count": {"uri": "spoolcmd-Spool", "anchor": "ww190505", "usage": "@count", "description": "number of base objects in the spool."}, "@description": {"uri": "spoolcmd-Spool", "anchor": "ww190529", "usage": "@description", "description": "string containing the Spool\u2019s description (if available)."}, "@detailedtype": {"uri": "spoolcmd-Spool", "anchor": "ww202875", "usage": "@detailedtype", "description": "string with the object type: \u201cSPOOL\u201d."}, "@displayname": {"uri": "spoolcmd-Spool", "anchor": "ww190530", "usage": "@displayname", "description": "string containing the Spool\u2019s display name. If the Spool has no display name set, the name is returned."}, "@name": {"uri": "spoolcmd-Spool", "anchor": "ww190531", "usage": "@name", "description": "string containing the Spool\u2019s name."}, "@objname": {"uri": "spoolcmd-Spool", "anchor": "ww190415", "usage": "@objname(i)", "description": "string containing name of the i -th object in the spool."}, "@objtype": {"uri": "spoolcmd-Spool", "anchor": "ww190440", "usage": "@objtype(i)", "description": "string containing type of the i -th object in the spool (\u201cgraph\u201d, \u201ctable\u201d, \u201ctext\u201d, \u201cspool\u201d)."}, "@remarks": {"uri": "spoolcmd-Spool", "anchor": "ww232255", "usage": "@remarks", "description": "string containing the Spool\u2019s remarks (if available)."}, "@totalcount": {"uri": "spoolcmd-Spool", "anchor": "ww190509", "usage": "@totalcount", "description": "number of objects in a flattened version of the spool."}, "@type": {"uri": "spoolcmd-Spool", "anchor": "ww232257", "usage": "@type", "description": "string with the object type: \u201cSPOOL\u201d."}, "@updatetime": {"uri": "spoolcmd-Spool", "anchor": "ww190538", "usage": "@updatetime", "description": "string representation of the time and date at which the Spool was last updated."}, "addfolder": {"uri": "spoolcmd-addfolder", "anchor": "", "usage": "spool_name. addfolder (options) folder_name", "description": "Adds an object folder to a spool.", "long_description": "Should an object or folder with the same name as folder_name already exist, the next available number will be appended to the folder_name .\nNote: folders cannot be added to spool objects that are nested inside other spool objects."}, "append": {"uri": "spoolcmd-append", "anchor": "", "usage": "spool_name. append (options) object_list", "description": "Append objects to a spool.", "long_description": "where object_list is a list of one or more objects to be appended to the spool. You may specify a view for each object, otherwise the default view will be used."}, "clearhist": {"uri": "spoolcmd-clearhist", "anchor": "", "usage": "spool_name. clearhist", "description": "Clear the contents of the history attribute for spool objects.", "long_description": "Removes the spool\u2019s history attribute, as shown in the label view of the spool."}, "clearremarks": {"uri": "spoolcmd-clearremarks", "anchor": "", "usage": "spool_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the spool\u2019s remarks attribute, as shown in the label view of the spool."}, "comment": {"uri": "spoolcmd-comment", "anchor": "", "usage": "spool_name. comment object_arg new_comment", "description": "Assign a comment to an object in the spool.", "long_description": "where new_comment specifies the comment for the object specified in object_arg, where object_arg is the name or position of the object. Surround object_name with quotation marks for multiple word comments."}, "copy": {"uri": "spoolcmd-copy", "anchor": "", "usage": "spool_name. copy\nspool_name. copy dest_name", "description": "Creates a copy of the spool.", "long_description": "Creates either a named or unnamed copy of the spool."}, "display": {"uri": "spoolcmd-display", "anchor": "", "usage": "spool_name. display", "description": "Display contents of a spool object.", "long_description": "display is the default view for a spool."}, "displayname": {"uri": "spoolcmd-displayname", "anchor": "", "usage": "spool_name. displayname(options) object_arg new_name", "description": "Assign a display name to an object in the spool.", "long_description": "where new_name specifies the display name for the object in object_arg, and object_arg is the name or position of the object. Surround object_arg with quotation marks for multiple word display names. Note that the case will be preserved in new_name."}, "extract": {"uri": "spoolcmd-extract", "anchor": "", "usage": "spool_name. extract ( name) object_name", "description": "Extracts a copy of the specified object in a spool.", "long_description": "where object_name is the object to be extracted from the spool, and object_name is the optional name of the new object."}, "flatten": {"uri": "spoolcmd-flatten", "anchor": "", "usage": "spool_name. flatten [object_list]", "description": "Removes tree hierarchy from the spool or specified embedded spool.", "long_description": "where object_list is an optional list of one or more embedded spools to be flattened. If an object_list is not provided, the entire spool will be flattened."}, "graphmode": {"uri": "spoolcmd-graphmode", "anchor": "", "usage": "spool_name. graphmode (options) [size_arg]", "description": "Set display mode for graphs in the spool.", "long_description": "where size_arg is an optional size argument (in virtual inches) used for the \u201cfixed\u201d and \u201cvariablelimit\u201d modes, and the options are used to specify the mode. If size_arg is not provided, the default setting will be used."}, "horizindent": {"uri": "spoolcmd-horizindent", "anchor": "", "usage": "spool_name.horizindent object_arg size_arg", "description": "Change the horizontal indentation size for objects in the spool.", "long_description": "where object_arg is the name or the position of a specific object to which you wish to apply indenting, and size_arg is an new indentation in virtual inches."}, "insert": {"uri": "spoolcmd-insert", "anchor": "", "usage": "spool_name. insert (options) object_list", "description": "Insert objects into a spool.", "long_description": "where object_list is a list of one or more objects to be inserted into the spool at the position specified in the options . If you do not specify a view for an object in the list, the default view will be used.\nIf neither a location nor an offset are specified in the options , the object will be inserted at the end of the spool."}, "label": {"uri": "spoolcmd-label", "anchor": "", "usage": "spool_name. label (options) [text]", "description": "Display or change the label view of a spool object, including the last modified date and display name (if any)."}, "leftmargin": {"uri": "spoolcmd-leftmargin", "anchor": "", "usage": "spool_name.leftmargin (options) size_arg", "description": "Changes the left margin size of the spool or of a specified embedded spool.", "long_description": "where size_arg is the new margin value specified in virtual inches."}, "move": {"uri": "spoolcmd-move", "anchor": "", "usage": "spool_name. move (options) object_arg", "description": "Move an object in a spool.", "long_description": "where object_arg is the object to be moved specified as an integer position in the spool or the name of an existing object in the spool. The options specify the destination position. If neither a location nor offset are specified in the options , the object will be moved to the end of the spool."}, "name": {"uri": "spoolcmd-name", "anchor": "", "usage": "spool_name. name object_arg new_name", "description": "Rename an object in a spool.", "long_description": "where object_arg is the name or the position of the object to be renamed, and new_name specifies the new name. new_name should follow EViews\u2019 standard naming conventions. Note that the case will be discarded; for case-sensitive names, use the Spool::displayname command."}, "olepush": {"uri": "spoolcmd-olepush", "anchor": "", "usage": "spool_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "options": {"uri": "spoolcmd-options", "anchor": "", "usage": "spool_name. options option_list", "description": "Set the display options for the spool object.", "long_description": "where option_list contains one or more of the options listed below."}, "print": {"uri": "spoolcmd-print", "anchor": "", "usage": "spool_name. print object_arg", "description": "Print an object in a spool.", "long_description": "The object will be printed to the location specified by the current printer settings.\nwhere object_arg is the name or the position of the object to be printed."}, "remove": {"uri": "spoolcmd-remove", "anchor": "", "usage": "spool_name. remove object_list", "description": "Remove objects from a spool.", "long_description": "where object_list is a list of objects to be removed from the spool."}, "save": {"uri": "spoolcmd-save", "anchor": "", "usage": "spool_name. save (options) [path]\\file_name", "description": "Save spool object to disk as a tab-delimited ASCII text, RTF, CSV, PDF, LaTeX, or MD file.", "long_description": "Follow the keyword with a name for the file. file_name may include the file type extension, or the file type may be specified using the \u201ct=\u201d option.\nIf an explicit path is not specified, the file will be stored in the default directory, as set in the File Locations global options.\nThe MD (Markdown) setting uses very basic syntax and should be usable in most editors."}, "setattr": {"uri": "spoolcmd-setattr", "anchor": "", "usage": "spool_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "setfont": {"uri": "spoolcmd-setfont", "anchor": "", "usage": "spool_name. setfont font_args", "description": "Set the font for title and comments.", "long_description": "where font_args may include one or more of the options listed below."}, "setzoom": {"uri": "spoolcmd-setzoom", "anchor": "", "usage": "spool_name. setzoom zoom_arg", "description": "Sets the zoom level of the spool default display view.", "long_description": "where zoom_arg specifies the zoom level in percent. The zoom_arg must be one of the following values: 25, 50, 75, 100, 125, 150, 200."}, "tablemode": {"uri": "spoolcmd-tablemode", "anchor": "", "usage": "spool_name. tablemode (options) [size_arg]", "description": "Set display mode for tables and text objects in the spool.", "long_description": "where size_arg is an optional size argument (in virtual inches) used for the \u201cvariablelimit\u201d mode, and options may be used to specify the mode. If size_arg is not provided, the default EViews setting will be used."}, "title": {"uri": "spoolcmd-title", "anchor": "", "usage": "spool_name. title title_arg", "description": "Assign or change the title of a spool.", "long_description": "where title_arg is a case sensitive string which may contain spaces and carriage returns."}, "topmargin": {"uri": "spoolcmd-topmargin", "anchor": "", "usage": "spool_name.topmargin (options) size_arg", "description": "Changes the top margin size of the spool or of a specified embedded spool.", "long_description": "where size_arg is the new margin value specified in virtual inches."}, "vertindent": {"uri": "spoolcmd-vertindent", "anchor": "", "usage": "spool_name.vertindent object_arg size_arg", "description": "Change the vertical indentation size for objects in the spool.", "long_description": "where object_arg is the name or the position of a specific object to which you wish to apply indenting, and size_arg is an new indentation in virtual inches."}, "vertspacing": {"uri": "spoolcmd-vertspacing", "anchor": "", "usage": "spool_name. vertspacing (options) size_arg", "description": "Changes the amount of vertical spacing for objects in the spool or in a specified embedded spool.", "long_description": "where size_arg is an new spacing in virtual inches. By default, spacing will be set for all objects in the spool."}, "width": {"uri": "spoolcmd-width", "anchor": "", "usage": "spool_name. width (options) [size_arg]", "description": "Changes the width (and height) of objects in the spool.", "long_description": "where size_arg is an optional size in virtual inches. By default, widths will be set for all objects in the spool, if possible ( i.e. , the graph object is not specified as fixed width, and the width is within limits defined by the current display mode; see Spool::graphmode and Spool::tablemode , for details).\nHeights are set proportional to the width to maintain the original aspect ratio.\nIf size_arg is not provided, the objects will be set to their default sizes."}}, "Sspace": {"[Sspace]": {"uri": "sspacecmd-Sspace", "anchor": "", "description": "State space object. Estimation and evaluation of state space models using the Kalman filter."}, "@aic": {"uri": "sspacecmd-Sspace", "anchor": "ww176164", "usage": "@aic", "description": "Akaike information criterion for the system."}, "@attr": {"uri": "sspacecmd-Sspace", "anchor": "ww210580", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@coefcov": {"uri": "sspacecmd-Sspace", "anchor": "ww176153", "usage": "@coefcov(i,j)", "description": "covariance of coefficients i and j ."}, "@coefs": {"uri": "sspacecmd-Sspace", "anchor": "ww176154", "usage": "@coefs(i)", "description": "coefficient i ."}, "@command": {"uri": "sspacecmd-Sspace", "anchor": "ww184534", "usage": "@command", "description": "full command line form of the state space estimation command. Note this is a combination of @method and @options ."}, "@description": {"uri": "sspacecmd-Sspace", "anchor": "ww200890", "usage": "@description", "description": "string containing the Sspace object\u2019s description (if available)."}, "@detailedtype": {"uri": "sspacecmd-Sspace", "anchor": "ww200879", "usage": "@detailedtype", "description": "returns a string with the object type: \u201cSSPACE\u201d."}, "@displayname": {"uri": "sspacecmd-Sspace", "anchor": "ww184535", "usage": "@displayname", "description": "returns the Sspace object\u2019s display name. If the Sspace has no display name set, the name is returned."}, "@eqncoefs": {"uri": "sspacecmd-Sspace", "anchor": "", "description": "State space object. Estimation and evaluation of state space models using the Kalman filter."}, "@eqregobs": {"uri": "sspacecmd-Sspace", "anchor": "ww176155", "usage": "@eqregobs(k)", "description": "number of observations in signal equation k ."}, "@final_state": {"uri": "sspacecmd-Sspace", "anchor": "ww227055", "usage": "@final_state", "description": "matrix of final states."}, "@final_statecov": {"uri": "sspacecmd-Sspace", "anchor": "ww227070", "usage": "@final_statecov", "description": "(sym) covariance matrix of final state covariances."}, "@hq": {"uri": "sspacecmd-Sspace", "anchor": "ww176165", "usage": "@hq", "description": "Hannan-Quinn information criterion for the system."}, "@init_state": {"uri": "sspacecmd-Sspace", "anchor": "ww227085", "usage": "@init_state", "description": "matrix of initial states."}, "@init_statecov": {"uri": "sspacecmd-Sspace", "anchor": "ww227100", "usage": "@init_statecov", "description": "(sym) covariance matrix of initial state covariances."}, "@line": {"uri": "sspacecmd-Sspace", "anchor": "ww184539", "usage": "@line(i)", "description": "returns a string containing the i -th line of the Sspace object."}, "@linecount": {"uri": "sspacecmd-Sspace", "anchor": "ww184526", "usage": "@linecount", "description": "scalar containing the number of lines in the Sspace object."}, "@logl": {"uri": "sspacecmd-Sspace", "anchor": "ww176166", "usage": "@logl", "description": "value of the log likelihood function."}, "@name": {"uri": "sspacecmd-Sspace", "anchor": "ww184540", "usage": "@name", "description": "returns the Sspace\u2019s name."}, "@ncoefs": {"uri": "sspacecmd-Sspace", "anchor": "ww176167", "usage": "@ncoefs", "description": "total number of estimated coefficients in the system."}, "@neqns": {"uri": "sspacecmd-Sspace", "anchor": "ww176168", "usage": "@neqns", "description": "number of equations for observable variables."}, "@options": {"uri": "sspacecmd-Sspace", "anchor": "ww184541", "usage": "@options", "description": "command line form of sspace estimation options."}, "@pvals": {"uri": "sspacecmd-Sspace", "anchor": "", "description": "State space object. Estimation and evaluation of state space models using the Kalman filter."}, "@regobs": {"uri": "sspacecmd-Sspace", "anchor": "ww176169", "usage": "@regobs", "description": "number of observations in the system."}, "@remarks": {"uri": "sspacecmd-Sspace", "anchor": "", "description": "State space object. Estimation and evaluation of state space models using the Kalman filter."}, "@residcov": {"uri": "sspacecmd-Sspace", "anchor": "ww178320", "usage": "@residcov", "description": "(sym) covariance matrix of the residuals."}, "@sc": {"uri": "sspacecmd-Sspace", "anchor": "ww176170", "usage": "@sc", "description": "Schwarz information criterion for the system."}, "@sddep": {"uri": "sspacecmd-Sspace", "anchor": "ww176156", "usage": "@sddep(k)", "description": "standard deviation of the signal variable in equation k ."}, "@smpl": {"uri": "sspacecmd-Sspace", "anchor": "ww184542", "usage": "@smpl", "description": "sample used for estimation."}, "@ssr": {"uri": "sspacecmd-Sspace", "anchor": "ww176157", "usage": "@ssr(k)", "description": "sum-of-squared standardized one-step ahead residuals for equation k ."}, "@stderrs": {"uri": "sspacecmd-Sspace", "anchor": "ww176158", "usage": "@stderrs(i)", "description": "standard error for coefficient i ."}, "@svector": {"uri": "sspacecmd-Sspace", "anchor": "ww184543", "usage": "@svector", "description": "returns an Svector where each element is a line of the Sspace object."}, "@svectornb": {"uri": "sspacecmd-Sspace", "anchor": "ww184544", "usage": "@svectornb", "description": "same as @svector, with blank lines removed."}, "@totalobs": {"uri": "sspacecmd-Sspace", "anchor": "ww176171", "usage": "@totalobs", "description": "sum of \u201c@eqregobs\u201d from each equation."}, "@tstats": {"uri": "sspacecmd-Sspace", "anchor": "ww176162", "usage": "@tstats(i)", "description": "t -statistic value for coefficient i ."}, "@type": {"uri": "sspacecmd-Sspace", "anchor": "ww184545", "usage": "@type", "description": "returns a string with the object type: \u201cSSPACE\u201d."}, "@updatetime": {"uri": "sspacecmd-Sspace", "anchor": "ww184547", "usage": "@updatetime", "description": "returns a string representation of the time and date at which the Sspace was last updated."}, "append": {"uri": "sspacecmd-append", "anchor": "", "usage": "sspace_name. append text", "description": "Append a specification line to a sspace.", "long_description": "Type the text to be added after the append keyword."}, "cellipse": {"uri": "sspacecmd-cellipse", "anchor": "", "usage": "sspace_name. cellipse (options) restrictions", "description": "Confidence ellipses for coefficient restrictions.", "long_description": "The cellipse view displays confidence ellipses for pairs of coefficient restrictions for an estimation object.\nEnter the object name, followed by a period, and the keyword cellipse . This should be followed by a list of the coefficient restrictions. Joint (multiple) coefficient restrictions should be separated by commas."}, "clearhist": {"uri": "sspacecmd-clearhist", "anchor": "", "usage": "sspace_name. clearhist", "description": "Clear the contents of the history attribute for sspace objects.", "long_description": "Removes the sspace\u2019s history attribute, as shown in the label view of the sspace."}, "clearremarks": {"uri": "sspacecmd-clearremarks", "anchor": "", "usage": "sspace_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the sspace\u2019s remarks attribute, as shown in the label view of the sspace."}, "coefcov": {"uri": "sspacecmd-coefcov", "anchor": "", "usage": "sspace_name. coefcov (options)", "description": "Coefficient covariance matrix.", "long_description": "Displays the covariances of the coefficient estimates for an estimated state space object."}, "copy": {"uri": "sspacecmd-copy", "anchor": "", "usage": "sspace_name. copy\nsspace_name. copy dest_name", "description": "Creates a copy of the sspace.", "long_description": "Creates either a named or unnamed copy of the sspace."}, "display": {"uri": "sspacecmd-display", "anchor": "", "usage": "sspace_name. display object_name", "description": "Display table, graph, or spool output in the sspace object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the sspace object."}, "displayname": {"uri": "sspacecmd-displayname", "anchor": "", "usage": "sspace_name. displayname display_name", "description": "Display name for state space objects.", "long_description": "Attaches a display name to a state space object which may be used to label output in place of the standard state space object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in state space object names."}, "endog": {"uri": "sspacecmd-endog", "anchor": "", "usage": "sspace_name. endog (options)", "description": "Displays a spreadsheet or graph view of the endogenous variables."}, "forecast": {"uri": "sspacecmd-forecast", "anchor": "", "usage": "sspace_name. forecast (options) keyword1 names1 [keyword2 names2] [keyword3 names3] ...", "description": "Computes ( n -period ahead) dynamic forecasts of the signals and states for an estimated state space.", "long_description": "forecast computes the forecast for all observations in a specified sample. In some settings, you may instruct forecast to compare the forecasted data to actual data, and to compute summary statistics.\nYou should enter a type -keyword followed by a list of names for the target series or a wildcard expression, and if desired, additional type -keyword and target pairs. The following are valid keywords: @state , @statese , @signal , @signalse . The first two keywords instruct EViews to forecast the state series and the values of the state standard error series. The latter two keywords instruct EViews to forecast the signal series and the values of the signal standard error series.\nIf a list is used to identify the targets, the number of target series must match the number of names implied by the keyword. Note that wildcard expressions may not be used for forecasting signal variables that contain expressions. In addition, the \u201c*\u201d wildcard expression may not be used for forecasting signal variables since this would overwrite the original data."}, "grads": {"uri": "sspacecmd-grads", "anchor": "", "usage": "sspace_name. grads (options)", "description": "Gradients of the objective function.", "long_description": "Displays the gradients of the objective function (where available) for an estimated sspace object.\nThe (default) summary form shows the value of the gradient vector at the estimated parameter values (if valid estimates exist) or at the current coefficient values. Evaluating the gradients at current coefficient values allows you to examine the behavior of the objective function at starting values. The tabular form shows a spreadsheet view of the gradients for each observation. The graphical form shows this information in a multiple line graph."}, "label": {"uri": "sspacecmd-label", "anchor": "", "usage": "sspace_name. label\nsspace_name. label (options) [text]", "description": "Display or change the label view of the state space object, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the state space object label."}, "makeendog": {"uri": "sspacecmd-makeendog", "anchor": "", "usage": "sspace_name. makeendog name", "description": "Make a group out of the endogenous series.", "long_description": "Following the keyword makeendog , you should provide a name for the group to hold the endogenous series. If you do not provide a name, EViews will create an untitled group."}, "makefilter": {"uri": "sspacecmd-makefilter", "anchor": "", "usage": "sspace_name. makefilter [filter_name]", "description": "Create a \u201cKalman filter\u201d sspace object.", "long_description": "Creates a new sspace object with all estimated parameter values substituted out of the specification. This procedure allows you to use the structure of the sspace without reference to estimated coefficients or the estimation sample.\nIf you provide a name for the sspace object in parentheses after the keyword, EViews will quietly create the named object in the workfile. If you do not provide a name, EViews will open an untitled sspace window if the command is executed from the command line."}, "makegrads": {"uri": "sspacecmd-makegrads", "anchor": "", "usage": "sspace_name. makegrads (options) [ser1 ser2 ...]", "description": "Make a group containing individual series which hold the gradients of the objective function.", "long_description": "The argument specifying the names of the series is also optional. If the argument is not provided, EViews will name the series \u201cGRAD##\u201d where ## is a number such that \u201cGRAD##\u201d is the next available unused name. If the names are provided, the number of names must match the number of target series."}, "makemodel": {"uri": "sspacecmd-makemodel", "anchor": "", "usage": "sspace_name. makemodel (name) assign_statement", "description": "Make a model from a state space object.", "long_description": "If you provide a name for the model in parentheses after the keyword, EViews will create the named model in the workfile. If you do not provide a name, EViews will open an untitled model window if the command is executed from the command line."}, "makeresids": {"uri": "sspacecmd-makeresids", "anchor": "", "description": "makeresids is no longer supported for the sspace object\u2014see Sspace::makesignals for more general replacement routines."}, "makesignals": {"uri": "sspacecmd-makesignals", "anchor": "", "usage": "name. makesignals (options) [name_spec]", "description": "Generate signal series or signal standard error series from an estimated sspace object.", "long_description": "Options allow you to choose to generate one-step ahead and smoothed values for the signals and the signal standard errors.\nFollow the object name with a period and the makesignal keyword, options to determine the output type, and a list of names or wildcard expression identifying the series to hold the output. If a list is used to identify the targets, the number of target series must match the number of states implied in the sspace. If any signal variable contain expressions, you may not use wildcard expressions in the destination names."}, "makestates": {"uri": "sspacecmd-makestates", "anchor": "", "usage": "sspace_name. makestates (options) [name_spec]", "description": "Generate state series or state standard error series from an estimated sspace object.", "long_description": "Options allow you to generate one-step ahead, filtered, or smoothed values for the states and the state standard errors.\nFollow the object name with a period and the makestate keyword, options to determine the output type, and a list of names or a wildcard expression identifying the series to hold the output. If a list is used to identify the targets, the number of target series must match the number of names implied by the keyword."}, "ml": {"uri": "sspacecmd-ml", "anchor": "", "usage": "sspace_name. ml (options)", "description": "Maximum likelihood estimation of state space models."}, "olepush": {"uri": "sspacecmd-olepush", "anchor": "", "usage": "sspace_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "output": {"uri": "sspacecmd-output", "anchor": "", "usage": "sspace_name. output", "description": "Display estimation output.", "long_description": "output changes the default object view to display the estimation output (equivalent to using Sspace::results )."}, "residcor": {"uri": "sspacecmd-residcor", "anchor": "", "usage": "sspace_name. residcor (options)", "description": "Residual correlation matrix.", "long_description": "Displays the correlations of the residuals from each equation in the sspace object. The sspace object residuals used in the calculation are the standardized, one-step ahead signal forecast errors."}, "residcov": {"uri": "sspacecmd-residcov", "anchor": "", "usage": "sspace_name. residcov (options)", "description": "Residual covariance matrix.", "long_description": "Displays the covariances of the residuals from each equation in the sspace object. The sspace object residuals used in the calculation are the standardized, one-step ahead signal forecast errors.\nSyntax"}, "resids": {"uri": "sspacecmd-resids", "anchor": "", "usage": "sspace_name. resids (options)", "description": "Display residuals.", "long_description": "resids allows you to display and actual-fitted-residual graph using the one-step ahead estimates."}, "results": {"uri": "sspacecmd-results", "anchor": "", "usage": "sspace_name. results (options)", "description": "Displays the results view of an estimated state space object."}, "setattr": {"uri": "sspacecmd-setattr", "anchor": "", "usage": "sspace_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "signalgraphs": {"uri": "sspacecmd-signalgraphs", "anchor": "", "usage": "sspace_name. signalgraphs (options)", "description": "Graph signal series.", "long_description": "Display graphs of a set of signal series computed using the Kalman filter."}, "spec": {"uri": "sspacecmd-spec", "anchor": "", "usage": "sspace_name. spec (options)", "description": "Display the text specification view for sspace objects."}, "statefinal": {"uri": "sspacecmd-statefinal", "anchor": "", "usage": "sspace_name. statefinal (options)", "description": "Display final state values.", "long_description": "Show the one-step ahead state predictions or the state prediction covariance matrix at the final values [img:../content/images/sspacecmd.120.32.1.jpg] , where [img:../content/images/sspacecmd.120.32.2.jpg] is the last observation in the estimation sample. By default, EViews shows the state predictions."}, "stategraphs": {"uri": "sspacecmd-stategraphs", "anchor": "", "usage": "sspace_name. stategraph (options)", "description": "Display graphs of a set of state series computed using the Kalman filter."}, "stateinit": {"uri": "sspacecmd-stateinit", "anchor": "", "usage": "sspace_name. stateinit (options)", "description": "Display initial state values.", "long_description": "Show the state initial values or the state covariance initial values used to initialize the Kalman Filter. By default, EViews shows the state values."}, "structure": {"uri": "sspacecmd-structure", "anchor": "", "usage": "sspace_name. structure (options) [argument]", "description": "Display summary of sspace specification.", "long_description": "Show view which summarizes the system transition matrices or the covariance structure of the state space specification. EViews can display either the formulae (default) or the values of the system transition matrices or covariance.\nIf you choose to display the values for a time-varying system using the \u201c v \u201d option, you should use the optional [ argument ] to specify a single date at which to evaluate the matrices. If none is provided, EViews will use the first date in the current sample."}, "updatecoefs": {"uri": "sspacecmd-updatecoefs", "anchor": "", "usage": "sspace_name. updatecoefs", "description": "Update coefficient object values from state space object.", "long_description": "Copies coefficients from the sspace object into the appropriate coefficient vector or vectors in the workfile.\nFollow the name of the sspace object by a period and the keyword updatecoefs ."}, "wald": {"uri": "sspacecmd-wald", "anchor": "", "usage": "sspace_name. wald restrictions", "description": "Wald coefficient restriction test.", "long_description": "The wald view carries out a Wald test of coefficient restrictions for a state space object.\nEnter the sspace name, followed by a period, and the keyword. You must provide a list of the coefficient restrictions, with joint (multiple) coefficient restrictions separated by commas."}}, "String": {"[String]": {"uri": "stringcmd-String", "anchor": "", "description": "String object. String objects may be used in standard EViews expressions in place of string literals."}, "@attr": {"uri": "stringcmd-String", "anchor": "ww196331", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@description": {"uri": "stringcmd-String", "anchor": "ww184709", "usage": "@description", "description": "string containing the String object\u2019s description (if available)."}, "@detailedtype": {"uri": "stringcmd-String", "anchor": "ww194048", "usage": "@detailedtype", "description": "string with the object type: \u201cSTRING\u201d."}, "@displayname": {"uri": "stringcmd-String", "anchor": "ww194253", "usage": "@displayname", "description": "string containing the String object\u2019s display name. If the String has no display name set, the name is returned."}, "@name": {"uri": "stringcmd-String", "anchor": "ww184711", "usage": "@name", "description": "string containing the String object\u2019s name."}, "@remarks": {"uri": "stringcmd-String", "anchor": "ww184712", "usage": "@remarks", "description": "string containing the String object\u2019s remarks (if available)."}, "@type": {"uri": "stringcmd-String", "anchor": "ww184714", "usage": "@type", "description": "string with the object type: \u201cSTRING\u201d."}, "@updatetime": {"uri": "stringcmd-String", "anchor": "ww184716", "usage": "@updatetime", "description": "string representation of the time and date at which the String was last updated."}, "clearhist": {"uri": "stringcmd-clearhist", "anchor": "", "usage": "string_name. clearhist", "description": "Clear the contents of the history attribute.", "long_description": "Removes the string\u2019s history attribute, as shown in the label view of the string."}, "clearremarks": {"uri": "stringcmd-clearremarks", "anchor": "", "usage": "string_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the string\u2019s remarks attribute, as shown in the label view of the string."}, "copy": {"uri": "stringcmd-copy", "anchor": "", "usage": "string_name. copy\nstring_name. copy dest_name", "description": "Creates a copy of the string.", "long_description": "Creates either a named or unnamed copy of the string."}, "display": {"uri": "stringcmd-display", "anchor": "", "usage": "string_name. display object_name", "description": "Display table, graph, or spool output in the string object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the string object."}, "displayname": {"uri": "stringcmd-displayname", "anchor": "", "usage": "string_name. displayname display_name", "description": "Display name for the string objects.", "long_description": "Attaches a display name to a string object which may be used to label output in place of the standard object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in matrix object names."}, "label": {"uri": "stringcmd-label", "anchor": "", "usage": "string_name. label\nstring_name. label (options) text", "description": "Display or change the label view of the string object, including the last modified date and display name (if any)."}, "list": {"uri": "stringcmd-list", "anchor": "", "usage": "string_name. list (options)", "description": "List view of a string object."}, "olepush": {"uri": "stringcmd-olepush", "anchor": "", "usage": "string_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "setattr": {"uri": "stringcmd-setattr", "anchor": "", "usage": "string_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}}, "Svector": {"[Svector]": {"uri": "svectorcmd-Svector", "anchor": "", "description": "String vector object."}, "@attr": {"uri": "svectorcmd-Svector", "anchor": "ww196109", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@collabels": {"uri": "svectorcmd-Svector", "anchor": "", "description": "String vector object."}, "@description": {"uri": "svectorcmd-Svector", "anchor": "ww184820", "usage": "@description", "description": "string containing the svector object\u2019s description (if available)."}, "@detailedtype": {"uri": "svectorcmd-Svector", "anchor": "ww193933", "usage": "@detailedtype", "description": "string with the object type: \u201cSVECTOR\u201d."}, "@displayname": {"uri": "svectorcmd-Svector", "anchor": "ww194111", "usage": "@displayname", "description": "string containing the svector object\u2019s display name. If the svector has no display name set, the name is returned."}, "@droprow": {"uri": "svectorcmd-Svector", "anchor": "ww216163", "usage": "@droprow( arg )", "description": "Returns the svector with rows defined by arg removed. arg may be an integer, vector of integers, string, or svector of strings. Integers correspond to row numbers so that, for example, arg = 2 specifies the second row. Strings correspond to row labels so that arg = \"2\" specifies the first row labeled \u201c2\u201d."}, "@name": {"uri": "svectorcmd-Svector", "anchor": "ww184822", "usage": "@name", "description": "string containing the svector object\u2019s name."}, "@remarks": {"uri": "svectorcmd-Svector", "anchor": "ww184823", "usage": "@remarks", "description": "string containing the svector object\u2019s remarks (if available)."}, "@rowlabels": {"uri": "svectorcmd-Svector", "anchor": "", "description": "String vector object."}, "@rows": {"uri": "svectorcmd-Svector", "anchor": "", "description": "String vector object."}, "@type": {"uri": "svectorcmd-Svector", "anchor": "ww184825", "usage": "@type", "description": "string with the object type: \u201cSVECTOR\u201d."}, "@updatetime": {"uri": "svectorcmd-Svector", "anchor": "ww184827", "usage": "@updatetime", "description": "string representation of the time and date at which the svector was last updated."}, "clearcollabels": {"uri": "svectorcmd-clearcollabels", "anchor": "", "usage": "svector_name. clearcollabels", "description": "Clear the column label in a svector object."}, "clearhist": {"uri": "svectorcmd-clearhist", "anchor": "", "usage": "svector_name. clearhist", "description": "Clear the contents of the history attribute.", "long_description": "Removes the svector history attribute, as shown in the label view of the svector."}, "clearremarks": {"uri": "svectorcmd-clearremarks", "anchor": "", "usage": "svector_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the svector\u2019s remarks attribute, as shown in the label view of the svector."}, "clearrowlabels": {"uri": "svectorcmd-clearrowlabels", "anchor": "", "usage": "svector_name. clearrowlabels", "description": "Clear the row labels in a vector object."}, "copy": {"uri": "svectorcmd-copy", "anchor": "", "usage": "svector_name. copy\nsvector_name. copy dest_name", "description": "Creates a copy of the svector.", "long_description": "Creates either a named or unnamed copy of the svector."}, "display": {"uri": "svectorcmd-display", "anchor": "", "usage": "svector_name. display object_name", "description": "Display table, graph, or spool output in the svector object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the svector object."}, "displayname": {"uri": "svectorcmd-displayname", "anchor": "", "usage": "svector_name. displayname display_name", "description": "Display name for the svector objects.", "long_description": "Attaches a display name to an svector object which may be used to label output in place of the standard object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in svector object names."}, "export": {"uri": "svectorcmd-export", "anchor": "", "usage": "svector_name. export (options) [path\\]file_name\nsvector_name. export ( options ) [path\\]file_name [table_description]", "description": "Export svector to disk as an Excel 2007 XLSX, CSV, tab-delimited ASCII text, RTF, HTML, Enhanced Metafile, LaTeX, PDF, or Markdown file.", "long_description": "Follow the keyword with a name for the file. file_name may include the file type extension, or the file type may be specified using the \u201ct=\u201d option.\nIf an explicit path is not specified, the file will be stored in the default directory, as set in the File Locations global options.\nThe base syntax for writing Excel 2007 files is:\nwhere the table_description may contain:\n\u2022 \u201crange = arg \u201d, where arg is top left cell of the destination Excel workbook, following the standard Excel format [worksheet!][topleft_cell[:bottomright_cell]] .\nIf the worksheet name contains spaces, it should be placed in single quotes. If the worksheet name is omitted, the cell range is assumed to refer to the currently active sheet. If only a top left cell is provided, a bottom right cell will be chosen automatically to cover the range of non-empty cells adjacent to the specified top left cell. If only a sheet name is provided, the first set of non-empty cells in the top left corner of the chosen worksheet will be selected automatically. As an alternative to specifying an explicit range, a name which has been defined inside the Excel workbook to refer to a range or cell may be used to specify the cells to read."}, "fill": {"uri": "svectorcmd-fill", "anchor": "", "usage": "svector_name. fill (options) s1[s2 s3 \u2026]", "description": "Fill a svector with the specified values.", "long_description": "Follow the keyword with a list of strings to place in the svector object. Each value should be surrounded by double quotes if necessary, and values should separated by a space . Running out of values before the object is completely filled is not an error; the remaining cells or observations will be unaffected, unless the \u201cl\u201d option is specified to enable looping. If, however, you list more values than the object can hold, EViews will return an error message."}, "import": {"uri": "svectorcmd-import", "anchor": "", "usage": "svector_name. import ([type=]) source_description import_specification\nsvector_name. import(type=excel [xml] ) source_description [table_description] [variables_description]\nsvector_name. import(type=html) source_description [table_description] [variables_description]\nsvector_name .import(type =arg ) source_description [table_description] [variables_description]", "description": "Imports data from a foreign file into the svector object.", "long_description": "\u2022 source_description should contain a description of the file from which the data is to be imported. The specification of the description is usually just the path and file name of the file, however you can also specify more precise information. See wfopen for more details on the specification of source_description .\n\u2022 The optional \u201ctype=\u201d option may be used to specify a source type. For the most part, you should not need to specify a \u201ctype=\u201d option as EViews will automatically determine the type from the filename. The following table summaries the various source formats and along with the corresponding \u201ctype=\u201d keywords:\n\nOption Keywords Excel (through 2003) \u201cexcel\u201d Excel 2007 (xml) \u201cexcelxml\u201d HTML \u201chtml\u201d Text / ASCII \u201ctext\u201d\n\n\u2022 import_specification can be used to provide additional information about the file to be read. The details of import_specification will depend upon the type of file being imported.\nExcel Files\nThe syntax for reading Excel files is:\nThe following table_description elements may be used when reading Excel data:\n\u2022 \u201crange = arg \u201d, where arg is a range of cells to read from the Excel workbook, following the standard Excel format [worksheet ! ][topleft_cell[:bottomright_cell]] .\nIf the worksheet name contains spaces, it should be placed in single quotes. If the worksheet name is omitted, the cell range is assumed to refer to the currently active sheet. If only a top left cell is provided, a bottom right cell will be chosen automatically to cover the range of non-empty cells adjacent to the specified top left cell. If only a sheet name is provided, the first set of non-empty cells in the top left corner of the chosen worksheet will be selected automatically. As an alternative to specifying an explicit range, a name which has been defined inside the excel workbook to refer to a range or cell may be used to specify the cells to read.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to read files where the series are contained in rows (one row per series) rather than columns.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201ctypes=(\" arg1 \",\" arg2 \",\u2026)\u201d, user specified data types of the series. If types are provided they will override the types automatically detected by EViews. You may use any of the following format keywords: \u201ca\u201d (character data), \u201cf\u201d (numeric data), \u201cd\u201d (dates), or \u201cw\u201d (EViews automatic detection). This option is rarely required.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file).\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nExcel Examples\nsvec_obj.import \"c:\\data files\\data.xls\"\nloads the active sheet of DATA.XLSX into the SVEC_NAME svector object.\nsvec_obj.import \"c:\\data files\\data.xls\" range=\"GDP data\"\nreads the data contained in the \u201cGDP data\u201d sheet of \u201cData.XLS\u201d into the SVEC_OBJ object.\n\nHTML Files\nThe syntax for reading HTML pages is:\nThe following table_description elements may be used when reading an HTML file or page:\n\u2022 \u201ctable = arg \u201d, where arg specifies which HTML table to read in an HTML file/page containing multiple tables.\nWhen specifying arg, you should remember that tables are named automatically following the pattern \u201cTable01\u201d, \u201cTable02\u201d, \u201cTable03\u201d, etc . If no table name is specified, the largest table found in the file will be chosen by default. Note that the table numbering may include trivial tables that are part of the HTML content of the file, but would not normally be considered as data tables by a person viewing the page.\n\u2022 \u201cskip = int \u201d, where int is the number of rows to discard from the top of the HTML table.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to import files where the series are contained in rows (one row per series) rather than columns.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file).\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the table of data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the table of data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nHTML Examples\nsvec1.import \"c:\\data.html\"\nloads into the SVEC1 svector object the data located in the HTML file \u201cData.HTML\u201d located on the C:\\ drive\nsvec1.import(type=html) \"http://www.tradingroom.com.au/apps/mkt/forex.ac\" colhead=3\nloads into an svector object called SVEC1 the data with the given URL located on the website site \u201chttp://www.tradingroom.com.au\u201d. The column header is set to three rows.\nText and Binary Files\nThe syntax for reading text or binary files is:\nIf a table_description is not provided, EViews will attempt to read the file as a free-format text file. The following table_description elements may be used when reading a text or binary file:\n\u2022 \u201cftype = [ascii|binary]\u201d specifies whether numbers and dates in the file are stored in a human readable text (ASCII), or machine readable (Binary) form.\n\u2022 \u201crectype = [crlf|fixed|streamed]\u201d describes the record structure of the file:\n\u201ccrlf\u201d, each row in the output table is formed using a fixed number of lines from the file (where lines are separated by carriage return/line feed sequences). This is the default setting.\n\u201cfixed\u201d, each row in the output table is formed using a fixed number of characters from the file (specified in \u201creclen= arg \u201d). This setting is typically used for files that contain no line breaks.\n\u201cstreamed\u201d, each row in the output table is formed by reading a fixed number of fields, skipping across lines if necessary. This option is typically used for files that contain line breaks, but where the line breaks are not relevant to how rows from the data should be formed.\n\u2022 \u201creclines = int \u201d, number of lines to use in forming each row when \u201crectype=crlf\u201d (default is 1).\n\u2022 \u201creclen= int \u201d, number of bytes to use in forming each row when \u201crectype=fixed\u201d.\n\u2022 \u201crecfields= int \u201d, number of fields to use in forming each row when \u201crectype=streamed\u201d.\n\u2022 \u201cskip= int \u201d, number of lines (if rectype is \u201ccrlf\u201d) or bytes (if rectype is not \u201ccrlf\u201d) to discard from the top of the file.\n\u2022 \u201ccomment= string \u201c, where string is a double-quoted string, specifies one or more characters to treat as a comment indicator. When a comment indicator is found, everything on the line to the right of where the comment indicator starts is ignored.\n\u2022 \u201cemptylines=[keep|drop]\u201d, specifies whether empty lines should be ignored (\u201cdrop\u201d), or treated as valid lines (\u201ckeep\u201d) containing missing values. The default is to ignore empty lines.\n\u2022 \u201ctabwidth= int \u201d, specifies the number of characters between tab stops when tabs are being replaced by spaces (default=8). Note that tabs are automatically replaced by spaces whenever they are not being treated as a field delimiter.\n\u2022 \u201cfieldtype=[delim|fixed|streamed|undivided]\u201d, specifies the structure of fields within a record:\n\u201cDelim\u201d, fields are separated by one or more delimiter characters\n\u201cFixed\u201d, each field is a fixed number of characters\n\u201cStreamed\u201d, fields are read from left to right, with each field starting immediately after the previous field ends.\n\u201cUndivided\u201d, read entire record as a single series.\n\u2022 \u201cquotes=[single|double|both|none]\u201d, specifies the character used for quoting fields, where \u201csingle\u201d is the apostrophe, \u201cdouble\u201d is the double quote character, and \u201cboth\u201d means that either single or double quotes are allowed (default is \u201cboth\u201d). Characters contained within quotes are never treated as delimiters.\n\u2022 \u201csinglequote\u201c, same as \u201cquotes = single\u201d.\n\u2022 \u201cdelim=[comma|tab|space|dblspace|white|dblwhite]\u201d, specifies the character(s) to treat as a delimiter. \u201cWhite\u201d means that either a tab or a space is a valid delimiter. You may also use the abbreviation \u201cd=\u201d in place of \u201cdelim=\u201d.\n\u2022 \u201ccustom=\" arg1 \"\u201d, specifies custom delimiter characters in the double quoted string. Use the character \u201ct\u201d for tab, \u201cs\u201d for space and \u201ca\u201d for any character.\n\u2022 \u201cmult=[on|off]\u201d, to treat multiple delimiters as one. Default value is \u201con\u201d if \u201cdelim\u201d is \u201cspace\u201d, \u201cdblspace\u201d, \u201cwhite\u201d, or \u201cdblwhite\u201d, and \u201coff\u201d otherwise.\n\u2022 \u201cendian = [big|little]\u201d, selects the endianness of numeric fields contained in binary files.\n\u2022 \u201cstring = [nullterm|nullpad|spacepad]\u201d, specifies how strings are stored in binary files. If \u201cnullterm\u201d, strings shorter than the field width are terminated with a single zero character. If \u201cnullpad\u201d, strings shorter than the field width are followed by extra zero characters up to the field width. If \u201cspacepad\u201d, strings shorter than the field width are followed by extra space characters up to the field width.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to import files where the series are contained in rows (one row per series) rather than columns.\n\u2022 \u201clastcol\u201d, include implied last column. For lines that end with a delimiter, this option adds an additional column.\nWhen importing a CSV file, lines which have the delimiter as the last character (for example: \u2018name,description,date,\u2019), EViews normally determines the line to have 3 columns. With the above option, EViews will determine the line to have 4 columns. Note this is not the same as a line containing \u2018name,description,date\u2019. In this case, EViews will always determine the line to have 3 columns regardless if the option is set.\nA central component of the table_description element is the format statement. You may specify the data format using the following table descriptors:\n\u2022 Fortran Format:\nfformat=( [n1]Type[Width][.Precision] , [n2]Type[Width][.Precision] , ...)\nwhere Type specifies the underlying data type, and may be one of the following,\nI - integer\nF - fixed precision\nE - scientific\nA - alphanumeric\nX - skip\nand n1 , n2 , ... are the number of times to read using the descriptor ( default =1). More complicated Fortran compatible variations on this format are possible.\n\u2022 Column Range Format:\nrformat=\" [n1]Type[Width][.Precision] , [n2]Type[Width][.Precision] , ...)\"\nwhere optional type is \u201c$\u201d for string or \u201c#\u201d for number, and n1 , n2 , n3 , n4 , etc . are the range of columns containing the data.\n\u2022 C printf/scanf Format:\ncformat=\" fmt \"\nwhere fmt follows standard C language (printf/scanf) format rules.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201ctypes=(\" arg1 \",\" arg2 \",\u2026)\u201d, user specified data types of the series. If types are provided they will override the types automatically detected by EViews. You may use any of the following format keywords: \u201ca\u201d (character data), \u201cf\u201d (numeric data), \u201cd\u201d (dates), or \u201cw\u201d (EViews automatic detection). This option is rarely used.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file).\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the table of data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the table of data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nText and Binary File Examples (.txt, .csv, etc.)\nsvec2.import c:\\data.csv skip=5\nreads \u201cData.CSV\u201d into SVEC2, skipping the first 5 rows.\nsvec01.import(type=text) c:\\date.txt delim=comma\nloads the comma delimited data DATE.TXT into the SVEC01 svector object.\nCross-references\nSee Svector::export ."}, "label": {"uri": "svectorcmd-label", "anchor": "", "usage": "svector_name. label\nsvector_name. label (options) text", "description": "Display or change the label view of the string vector object, including the last modified date and display name (if any)."}, "olepush": {"uri": "svectorcmd-olepush", "anchor": "", "usage": "svector_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "resize": {"uri": "svectorcmd-resize", "anchor": "", "usage": "svector_name. resize rows", "description": "Resize the svector object."}, "setattr": {"uri": "svectorcmd-setattr", "anchor": "", "usage": "svector_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "setcollabels": {"uri": "svectorcmd-setcollabels", "anchor": "", "usage": "svector_name. setcollabels label", "description": "Set the column label in a svector object.", "long_description": "Follow the setcollabels command with the column label. Note that the column label should not contain spaces unless it is enclosed in quotes."}, "setrowlabels": {"uri": "svectorcmd-setrowlabels", "anchor": "", "usage": "svector_name. setrowlabels label1 label2 label3....", "description": "Set the row labels in a svector object.", "long_description": "Follow the setrowlabels command with a space delimited list of row labels. Note that each row label should not contain spaces unless it is enclosed in quotes. If you provide fewer labels than there are rows, EViews will keep the corresponding default row names (\u201cR11\u201d, \u201cR12\u201d, etc...)."}, "sheet": {"uri": "svectorcmd-sheet", "anchor": "", "usage": "svector_name. sheet (options)", "description": "Spreadsheet view of a string vector object."}, "showlabels": {"uri": "svectorcmd-showlabels", "anchor": "", "usage": "svector_name. showlabels mode", "description": "Displays the custom row and column labels of an svector spreadsheet.", "long_description": "where mode is either 0 or 1 where 0 displays the default row and column labels and 1 displays the custom row and column labels (if present)."}}, "System": {"[System]": {"uri": "systemcmd-System", "anchor": "", "description": "System of equations for estimation."}, "@aic": {"uri": "systemcmd-System", "anchor": "ww177292", "usage": "@aic", "description": "Akaike information criterion for the system (if applicable)."}, "@attr": {"uri": "systemcmd-System", "anchor": "ww213981", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@coefcov": {"uri": "systemcmd-System", "anchor": "ww240150", "usage": "@coefcov(i, j)", "description": "covariance of coefficients i and j ."}, "@coefs": {"uri": "systemcmd-System", "anchor": "ww240151", "usage": "@coefs(i)", "description": "coefficient i ."}, "@command": {"uri": "systemcmd-System", "anchor": "ww188589", "usage": "@command", "description": "full command line form of the estimation command. Note this is a combination of @method and @options ."}, "@description": {"uri": "systemcmd-System", "anchor": "ww203069", "usage": "@description", "description": "string containing the System object\u2019s description (if available)."}, "@detailedtype": {"uri": "systemcmd-System", "anchor": "ww203061", "usage": "@detailedtype", "description": "returns a string with the object type: \u201cSYSTEM\u201d."}, "@detresid": {"uri": "systemcmd-System", "anchor": "ww177293", "usage": "@detresid", "description": "determinant of the residual covariance matrix."}, "@displayname": {"uri": "systemcmd-System", "anchor": "ww188590", "usage": "@displayname", "description": "returns the System\u2019s display name. If the System has no display name set, the name is returned."}, "@dw": {"uri": "systemcmd-System", "anchor": "ww177272", "usage": "@dw(k)", "description": "Durbin-Watson statistic for equation k ."}, "@eqncoef": {"uri": "systemcmd-System", "anchor": "ww177273", "usage": "@eqncoef(k)", "description": "number of estimated coefficients in equation k ."}, "@eqregobs": {"uri": "systemcmd-System", "anchor": "ww177274", "usage": "@eqregobs(k)", "description": "number of observations in equation k ."}, "@estcov": {"uri": "systemcmd-System", "anchor": "ww230608", "usage": "@estcov", "description": "(sym) residual covariance matrix used in estimation (see System::estcov )."}, "@hq": {"uri": "systemcmd-System", "anchor": "ww177294", "usage": "@hq", "description": "Hannan-Quinn information criterion for the system (if applicable)."}, "@jstat": {"uri": "systemcmd-System", "anchor": "ww177298", "usage": "@jstat", "description": "J -statistic \u2014 value of the GMM objective function (for GMM estimation)."}, "@line": {"uri": "systemcmd-System", "anchor": "ww188594", "usage": "@line(i)", "description": "returns a string containing the i -th line of the System object."}, "@linecount": {"uri": "systemcmd-System", "anchor": "ww188580", "usage": "@linecount", "description": "scalar containing the number of lines in the System object."}, "@logl": {"uri": "systemcmd-System", "anchor": "ww177299", "usage": "@logl", "description": "value of the log likelihood function for the system (if applicable)."}, "@meandep": {"uri": "systemcmd-System", "anchor": "ww177275", "usage": "@meandep(k)", "description": "mean of the dependent variable in equation k ."}, "@method": {"uri": "systemcmd-System", "anchor": "ww188595", "usage": "@method", "description": "command line form of estimation method type (\u201cARCH\u201d, \u201cLS\u201d, etc. ...)."}, "@name": {"uri": "systemcmd-System", "anchor": "ww188596", "usage": "@name", "description": "returns the System\u2019s name."}, "@ncoefs": {"uri": "systemcmd-System", "anchor": "ww177300", "usage": "@ncoefs", "description": "total number of estimated coefficients in system."}, "@neqn": {"uri": "systemcmd-System", "anchor": "ww177301", "usage": "@neqn", "description": "number of equations."}, "@options": {"uri": "systemcmd-System", "anchor": "ww188597", "usage": "@options", "description": "command line form of estimation options."}, "@pvals": {"uri": "systemcmd-System", "anchor": "", "description": "System of equations for estimation."}, "@r2": {"uri": "systemcmd-System", "anchor": "ww177277", "usage": "@r2(k)", "description": "R-squared statistic for equation k ."}, "@rbar2": {"uri": "systemcmd-System", "anchor": "ww177278", "usage": "@rbar2(k)", "description": "adjusted R-squared statistic for equation k ."}, "@regobs": {"uri": "systemcmd-System", "anchor": "ww177302", "usage": "@regobs", "description": "number of observations in the sample range used for estimation (\u201c@regobs\u201d will differ from \u201c@eqregobs\u201d if the unbalanced sample is non-overlapping)."}, "@remarks": {"uri": "systemcmd-System", "anchor": "", "description": "System of equations for estimation."}, "@residcov": {"uri": "systemcmd-System", "anchor": "ww179844", "usage": "@residcov", "description": "(sym) covariance matrix of the residuals."}, "@schwarz": {"uri": "systemcmd-System", "anchor": "ww177303", "usage": "@schwarz", "description": "Schwarz information criterion for the system (if applicable)."}, "@sddep": {"uri": "systemcmd-System", "anchor": "ww177279", "usage": "@sddep(k)", "description": "standard deviation of dependent variable in equation k ."}, "@se": {"uri": "systemcmd-System", "anchor": "ww177280", "usage": "@se(k)", "description": "standard error of the regression in equation k ."}, "@smpl": {"uri": "systemcmd-System", "anchor": "ww188598", "usage": "@smpl", "description": "sample used for estimation."}, "@ssr": {"uri": "systemcmd-System", "anchor": "ww177281", "usage": "@ssr(k)", "description": "sum of squared residuals in equation k ."}, "@stderrs": {"uri": "systemcmd-System", "anchor": "ww177282", "usage": "@stderrs(i)", "description": "standard error for coefficient i ."}, "@svector": {"uri": "systemcmd-System", "anchor": "ww188599", "usage": "@svector", "description": "returns an Svector where each element is a line of the System object."}, "@svectornb": {"uri": "systemcmd-System", "anchor": "ww188600", "usage": "@svectornb", "description": "same as @svector, with blank lines removed."}, "@totalobs": {"uri": "systemcmd-System", "anchor": "ww177304", "usage": "@totalobs", "description": "sum of \u201c@eqregobs\u201d from each equation."}, "@tstats": {"uri": "systemcmd-System", "anchor": "ww177286", "usage": "@tstats(i)", "description": "t -statistic or z -statistic for coefficient i ."}, "@type": {"uri": "systemcmd-System", "anchor": "ww188601", "usage": "@type", "description": "returns a string with the object type: \u201cSYSTEM\u201d."}, "@updatetime": {"uri": "systemcmd-System", "anchor": "ww188603", "usage": "@updatetime", "description": "returns a string representation of the time and date at which the System was last updated."}, "3sls": {"uri": "systemcmd-3sls", "anchor": "", "usage": "system_name. 3sls (options)", "description": "Estimate a system of equations by three-stage least squares."}, "append": {"uri": "systemcmd-append", "anchor": "", "usage": "system_name. append text", "description": "Append a specification line to a system.", "long_description": "Type the text to be added after the append keyword."}, "arch": {"uri": "systemcmd-arch", "anchor": "", "usage": "system_name. arch (options) @ diagvech c (arg) [ arch (n, arg)] [ tarch (n, arg)] [ garch (n, arg)] [ exog (series, arg)]\nsystem_name. arch (options) @ ccc c (arg) [ arch (n[, arg])] [ tarch (n[, arg])] [ garch (n[, arg])] [ exog (series, arg)]\nsystem_name. arch (options) @ diagbekk c (arg) [ arch (n[, arg])] [ tarch (n[, arg])] [ garch (n[, arg])] [ exog (series, arg)]", "description": "Estimate generalized autoregressive conditional heteroskedasticity (GARCH) models.", "long_description": "For a Diagonal VECH model:\nIndicate a Diagonal VECH model by using the @diagvech keyword. Follow the keyword with the constant term, c , and other optional terms to include in the variance equation: arch , garch , tarch , or exog (exogenous variable).\nn indicates the order of the term, and arg indicates the type of coefficient for the term. For the exogenous variable, series indicates a series name.\nDiagonal VECH Argument Options\n\nc ( arg ) where arg may be \u201cscalar\u201d, \u201cdiag\u201d (diagonal), \u201crank1\u201d (rank one), \u201cfullrank\u201d, \u201cindef\u201d (indefinite - default), or \u201cvt\u201d (variance target). arch ( n, arg ) where n indicates the order of the term, and arg may be \u201cscalar\u201d, \u201cdiag\u201d (diagonal), \u201crank1\u201d (rank one), \u201cfullrank\u201d, or \u201cindef\u201d (indefinite - default). garch ( n, arg ) where n indicates the order of the term, and arg may be \u201cscalar\u201d, \u201cdiag\u201d (diagonal), \u201crank1\u201d (rank one), \u201cfullrank\u201d, or \u201cindef\u201d (indefinite - default). tarch ( n, arg ) where n indicates the order of the term, and arg may be \u201cscalar\u201d, \u201cdiag\u201d (diagonal), \u201crank1\u201d (rank one), \u201cfullrank\u201d, or \u201cindef\u201d (indefinite - default). exog ( series, arg ) where series indicates a series name, and arg may be \u201cscalar\u201d, \u201cdiag\u201d (diagonal), \u201crank1\u201d (rank one), \u201cfullrank\u201d, or \u201cindef\u201d (indefinite - default).\nFor example, \u201cc(indef)\u201d instructs EViews to use an indefinite matrix for the constant term, while \u201cARCH(1, fullrank)\u201d includes a first order ARCH with a full rank matrix coefficient type.\nFor a Constant Conditional Correlation model:\nIndicate a Constant Conditional Correlation model by using the @ccc keyword. Follow the keyword with the constant term, c , and other optional terms to include in the variance equation: arch , garch , tarch , or exog (exogenous variable).\nn indicates the order of the term, and arg indicates the type of coefficient for the term. For the exogenous variable, series indicates a series name.\nConstant Conditional Correlation Argument Options\n\nc ( arg ) where arg may be \u201cscalar\u201d (default) or \u201cvt\u201d (variance target). arch ( n[, arg] ) where n indicates the order of the term, and the optional arg may be \u201cscalar\u201d (default). garch ( n[, arg] ) where n indicates the order of the term, and the optional arg may be \u201cscalar\u201d (default). tarch ( n[, arg] ) where n indicates the order of the term, and the optional arg may be \u201cscalar\u201d (default). exog ( series, arg ) where series indicates a series name, and arg may be \u201cindiv\u201d (individual - default) or \u201ccommon\u201d.\nFor a Diagonal BEKK model:\nIndicate a Diagonal BEKK model by using the @diagbekk keyword. Follow the keyword with the constant term, c , and other optional terms to include in the variance equation: arch , garch , tarch , or exog (exogenous variable).\nn indicates the order of the term, and arg indicates the type of coefficient for the term. For the exogenous variable, series indicates a series name.\nDiagonal BEKK Argument Options\n\nc ( arg ) where arg may be \u201cscalar\u201d, \u201cdiag\u201d (diagonal), \u201crank1\u201d (rank one), \u201cfullrank\u201d, \u201cindef\u201d (indefinite - default), or \u201cvt\u201d (variance target). arch ( n[, arg] ) where n indicates the order of the term, and the optional arg may be \u201cdiag\u201d (diagonal - default). garch ( n[, arg] ) where n indicates the order of the term, and the optional arg may be \u201cdiag\u201d (diagonal - default). tarch ( n[, arg] ) where n indicates the order of the term, and the optional arg may be \u201cdiag\u201d (diagonal - default). exog ( series, arg ) where series indicates a series name, and arg may be \u201cscalar\u201d, \u201cdiag\u201d (diagonal), \u201crank1\u201d (rank one), \u201cfullrank\u201d, or \u201cindef\u201d (indefinite - default)."}, "autospec": {"uri": "systemcmd-autospec", "anchor": "", "usage": "system_name. autospec (options) y1 y2 y3 ... @reg x1 x2 x3 ... [ @eqreg w1 w2 ...] [ @inst z1 z2 ...] [ @eqinst z3 z4 ...]", "description": "Automatically create system specification text.", "long_description": "Defines the specification of the system. The @reg list consists of regressors with common coefficients in the system. The @eqreg list consists of regressors with different coefficients in each equation. The list of variables that follow @inst are the common instruments. The list of variables that follow @eqinst are the equation specific instruments."}, "cellipse": {"uri": "systemcmd-cellipse", "anchor": "", "usage": "system_name. cellipse (options) restrictions", "description": "Confidence ellipses for coefficient restrictions.", "long_description": "The cellipse view displays confidence ellipses for pairs of coefficient restrictions for an estimation object.\nEnter the object name, followed by a period, and the keyword cellipse . This should be followed by a list of the coefficient restrictions. Joint (multiple) coefficient restrictions should be separated by commas."}, "clearhist": {"uri": "systemcmd-clearhist", "anchor": "", "usage": "system_name. clearhist", "description": "Clear the contents of the history attribute.", "long_description": "Removes the system\u2019s history attribute, as shown in the label view of the system."}, "clearremarks": {"uri": "systemcmd-clearremarks", "anchor": "", "usage": "system_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the system\u2019s remarks attribute, as shown in the label view of the system."}, "coefcov": {"uri": "systemcmd-coefcov", "anchor": "", "usage": "system_name. coefcov (options)", "description": "Coefficient covariance matrix.", "long_description": "Displays the covariances of the coefficient estimates for an estimated system."}, "copy": {"uri": "systemcmd-copy", "anchor": "", "usage": "system_name. copy\nsystem_name. copy dest_name", "description": "Creates a copy of the system.", "long_description": "Creates either a named or unnamed copy of the system."}, "correl": {"uri": "systemcmd-correl", "anchor": "", "usage": "system_name. correl (n, options)", "description": "Display graphs or tables of residual autocorrelations and cross-correlations.", "long_description": "Displays the auto and cross-correlation functions of the estimated system residals.\nYou must specify the largest lag n to use in the computations. The default is to display a graphical view of the auto and cross-correlations."}, "derivs": {"uri": "systemcmd-derivs", "anchor": "", "usage": "system_name. derivs (options)", "description": "Examine derivatives of the system equation specification.", "long_description": "Display information about the derivatives of the equation specification in tabular, graphical, or summary form.\nThe (default) summary form shows information about how the derivative of the equation specification was computed, and will display the analytic expression for the derivative, or a note indicating that the derivative was computed numerically. The tabular form shows a spreadsheet view of the derivatives of the regression specification with respect to each coefficient (for each observation). The graphical form of the view shows this information in a multiple line graph."}, "display": {"uri": "systemcmd-display", "anchor": "", "usage": "system_name. display object_name", "description": "Display table, graph, or spool output in the system object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the system object."}, "displayname": {"uri": "systemcmd-displayname", "anchor": "", "usage": "system_name. displayname display_name", "description": "Display name for system objects.", "long_description": "Attaches a display name to a system object which may be used to label output in place of the standard system object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in system object names."}, "endog": {"uri": "systemcmd-endog", "anchor": "", "usage": "system_name. endog (options)", "description": "Displays a spreadsheet or graph view of the endogenous variables."}, "estcov": {"uri": "systemcmd-estcov", "anchor": "", "usage": "system_name. estcov (options)", "description": "Displays the covariance matrix used in estimation.", "long_description": "The estimation covariance contains:\n1. the identity matrix for OLS and TSLS\n2. a diagonal matrix with equation variances used to compute WOLS and WTSLS\n3. the residual covariance matrix used to compute SUR and 3SLS\n4. the residual covariance matrix for unrestricted FIML; diagonal residual covariance matrix for diagonal FIML; user-specified covariance for user-covariance FIML\n5. the long-run covariance of the moments used to compute the weighting matrix for GMM estimates\n6. a matrix of missing values for ARCH"}, "fiml": {"uri": "systemcmd-fiml", "anchor": "", "usage": "system_name. fiml (options)", "description": "Estimation by full information maximum likelihood.", "long_description": "fiml estimates a system of equations by full information maximum likelihood (assuming a multivariate normal distribution)."}, "garch": {"uri": "systemcmd-garch", "anchor": "", "usage": "system_name. garch (options) [arg1, arg2, ...]", "description": "Conditional variance/covariance of (G)ARCH estimation.", "long_description": "Displays the conditional variance, covariance or correlation of a system estimated by ARCH.\nThe optional arguments following the keyword indicate which endogenous variable to include. If no argument is provided, all variables in the system will be included."}, "gmm": {"uri": "systemcmd-gmm", "anchor": "", "usage": "system_name. gmm (options)", "description": "Estimation by generalized method of moments (GMM).", "long_description": "The system object must be specified with a list of instruments."}, "grads": {"uri": "systemcmd-grads", "anchor": "", "usage": "system_name. grads (options)", "description": "Gradients of the objective function.", "long_description": "Displays the gradients of the objective function (where available) for an estimated system object.\nThe (default) summary form shows the value of the gradient vector at the estimated parameter values (if valid estimates exist) or at the current coefficient values. Evaluating the gradients at current coefficient values allows you to examine the behavior of the objective function at starting values. The tabular form shows a spreadsheet view of the gradients for each observation. The graphical form shows this information in a multiple line graph."}, "jbera": {"uri": "systemcmd-jbera", "anchor": "", "usage": "var_name. jbera (options)", "description": "Multivariate residual normality test.", "long_description": "You must specify a factorization method using the \u201c factor= \u201d option."}, "label": {"uri": "systemcmd-label", "anchor": "", "usage": "system_name. label\nsystem_name. label (options) [text]", "description": "Display or change the label view of the system object, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the system object label."}, "ls": {"uri": "systemcmd-ls", "anchor": "", "usage": "system_name. ls (options)", "description": "Estimation by linear or nonlinear least squares regression."}, "makeendog": {"uri": "systemcmd-makeendog", "anchor": "", "usage": "system_name. makeendog name", "description": "Make a group out of the endogenous series.", "long_description": "Following the keyword makeendog , you should provide a name for the group to hold the endogenous series. If you do not provide a name, EViews will create an untitled group."}, "makegarch": {"uri": "systemcmd-makegarch", "anchor": "", "usage": "system_name. makegarch (options) [series1_name series2_name]", "description": "Generate conditional variance series.", "long_description": "Saves the estimated conditional variance (from a system estimated using ARCH) as a named series. You may also save the conditional covariance or correlation.\nThe optional series name arguments following the makegarch keyword indicate which endogenous variables to include. If no argument is given, all variables in the system will be included."}, "makeloglike": {"uri": "systemcmd-makeloglike", "anchor": "", "usage": "system_name. makeloglike [ser1]", "description": "Create and save log likelihood contribution from system (ARCH estimation).", "long_description": "After the keyword, provide an optional name to save the log likelihood contribution. If you do not provide a name, EViews will name the series using the next available name of the form \u201cLOGLIKE##\u201d. (If LOGLIKE01 already exists, it will be named LOGLIKE02, and so on.)"}, "makemodel": {"uri": "systemcmd-makemodel", "anchor": "", "usage": "system_name. makemodel (name) assign_statement", "description": "Make a model from a system of equations.", "long_description": "If you provide a name for the model in parentheses after the keyword, EViews will create the named model in the workfile. If you do not provide a name, EViews will open an untitled model window if the command is executed from the command line."}, "makeresids": {"uri": "systemcmd-makeresids", "anchor": "", "usage": "system_name. makeresids (options) [residual_names]", "description": "Create residual series.", "long_description": "Creates and saves residuals in the workfile from an estimated system object.\nFollow the system name with a period and the makeresids keyword, then provide a list of names to be given to the stored residuals. You should provide as many names as there are equations. If there are fewer names than equations, EViews creates the extra residual series with names RESID01 , RESID02 , and so on. If you do not provide any names, EViews will also name the residuals RESID01 , RESID02 , and so on."}, "olepush": {"uri": "systemcmd-olepush", "anchor": "", "usage": "system_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "output": {"uri": "systemcmd-output", "anchor": "", "usage": "system_name. output", "description": "Display estimation output.", "long_description": "output changes the default object view to display the estimation output (equivalent to using System::results )."}, "qstats": {"uri": "systemcmd-qstats", "anchor": "", "usage": "system_name. qstats (h, options)", "description": "Multivariate residual autocorrelation Portmanteau tests.", "long_description": "You must specify the highest order of lag h to test for serial correlation ."}, "representations": {"uri": "systemcmd-representations", "anchor": "", "usage": "system_name. representation (options)", "description": "Display text of specification for system objects."}, "residcor": {"uri": "systemcmd-residcor", "anchor": "", "usage": "system_name. residcor (options)", "description": "Residual correlation matrix.", "long_description": "Displays the correlations of the residuals from each equation in the system."}, "residcov": {"uri": "systemcmd-residcov", "anchor": "", "usage": "system_name. residcov (options)", "description": "Residual covariance matrix.", "long_description": "Displays the covariances of the residuals from each equation in the system.\nSyntax"}, "resids": {"uri": "systemcmd-resids", "anchor": "", "usage": "system_name. resids (options)", "description": "Display residuals.", "long_description": "resids displays multiple graphs or a spreadsheet of the residuals. Each graph will contain the residuals for each equation in the system."}, "results": {"uri": "systemcmd-results", "anchor": "", "usage": "system_name. results (options)", "description": "Displays the results view of an estimated system."}, "setattr": {"uri": "systemcmd-setattr", "anchor": "", "usage": "system_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "spec": {"uri": "systemcmd-spec", "anchor": "", "usage": "system_name. spec (options)", "description": "Display the text specification view for system objects."}, "sur": {"uri": "systemcmd-sur", "anchor": "", "usage": "system_name. sur (options)", "description": "Estimate a system object using seemingly unrelated regression (SUR).", "long_description": "Note that the EViews procedure is more general than textbook versions of SUR since the system of equations may contain cross-equation restrictions on parameters."}, "tsls": {"uri": "systemcmd-tsls", "anchor": "", "usage": "system_name. tsls (options)", "description": "Two-stage least squares.", "long_description": "There must be at least as many instrumental variables as there are independent variables. All exogenous variables included in the regressor list should also be included in the instrument list. A constant is included in the list of instrumental variables even if not explicitly specified."}, "updatecoefs": {"uri": "systemcmd-updatecoefs", "anchor": "", "usage": "system_name. updatecoefs", "description": "Update coefficient object values from system object.", "long_description": "Copies coefficients from the system into the appropriate coefficient vector or vectors.\nFollow the name of the system object by a period and the keyword updatecoefs ."}, "wald": {"uri": "systemcmd-wald", "anchor": "", "usage": "system_name. wald restrictions", "description": "Wald coefficient restriction test.", "long_description": "The wald view carries out a Wald test of coefficient restrictions for a system object.\nEnter the system name, followed by a period, and the keyword. You must provide a list of the coefficient restrictions, with joint (multiple) coefficient restrictions separated by commas."}, "wls": {"uri": "systemcmd-wls", "anchor": "", "usage": "system_name.wls (options)", "description": "Estimates a system of equations using weighted least squares."}, "wtsls": {"uri": "systemcmd-wtsls", "anchor": "", "usage": "system_name. wtls (options)", "description": "Perform weighted two-stage least squares estimation of a system of equations."}}, "Table": {"[Table]": {"uri": "tablecmd-Table", "anchor": "", "description": "Table object. Formatted two-dimensional table for output display."}, "@attr": {"uri": "tablecmd-Table", "anchor": "ww208053", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@cols": {"uri": "tablecmd-Table", "anchor": "ww208068", "usage": "@cols", "description": "number of columns in the table."}, "@colwidth": {"uri": "tablecmd-Table", "anchor": "ww243738", "usage": "@colwidth(i)", "description": "the column width of the i -th column in the table."}, "@description": {"uri": "tablecmd-Table", "anchor": "ww208054", "usage": "@description", "description": "string containing the Table object\u2019s description (if available)."}, "@detailedtype": {"uri": "tablecmd-Table", "anchor": "ww208055", "usage": "@detailedtype", "description": "string with the object type: \u201cTABLE\u201d."}, "@displayname": {"uri": "tablecmd-Table", "anchor": "ww208056", "usage": "@displayname", "description": "string containing the Table object\u2019s display name. If the Table has no display name set, the name is returned."}, "@find": {"uri": "tablecmd-Table", "anchor": "ww255930", "usage": "@find(\" arg \")", "description": "string containing the cell identifiers meeting the boolean argument. This argument can be a mathematical or string expression. For example:"}, "@name": {"uri": "tablecmd-Table", "anchor": "ww208057", "usage": "@name", "description": "string containing the Table object\u2019s name."}, "@remarks": {"uri": "tablecmd-Table", "anchor": "ww208058", "usage": "@remarks", "description": "string containing the Table object\u2019s remarks (if available)."}, "@rowheight": {"uri": "tablecmd-Table", "anchor": "ww243750", "usage": "@rowheight(i)", "description": "the row height of the i -th row in the table."}, "@rows": {"uri": "tablecmd-Table", "anchor": "ww208069", "usage": "@rows", "description": "number of rows in the table."}, "@title": {"uri": "tablecmd-Table", "anchor": "ww212475", "usage": "@title", "description": "string containing the Table object\u2019s title (if available)."}, "@type": {"uri": "tablecmd-Table", "anchor": "ww208060", "usage": "@type", "description": "string with the object type: \u201cTABLE\u201d."}, "@updatetime": {"uri": "tablecmd-Table", "anchor": "ww208062", "usage": "@updatetime", "description": "string representation of the time and date at which the Table was last updated."}, "@val": {"uri": "tablecmd-Table", "anchor": "ww244300", "usage": "@val(i,j)", "description": "the numerical value of the ( i , j )-th element of the table."}, "clearhist": {"uri": "tablecmd-clearhist", "anchor": "", "usage": "table_name. clearhist", "description": "Clear the contents of the history attribute.", "long_description": "Removes the table\u2019s history attribute, as shown in the label view of the table."}, "clearremarks": {"uri": "tablecmd-clearremarks", "anchor": "", "usage": "table_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the table\u2019s remarks attribute, as shown in the label view of the table."}, "comment": {"uri": "tablecmd-comment", "anchor": "", "usage": "table_name. comment ( cell_arg ) [comment_arg]", "description": "Adds or removes a comment in a table cell.", "long_description": "where cell_arg , which identifies the cell, can take one of the following forms:\n\ncell Cell identifier. You can reference cells using either the column letter and row number ( e.g ., \u201cA1\u201d), or by using \u201cR\u201d followed by the row number followed by \u201cC\u201d and the column number ( e.g ., \u201cR1C2\u201d). row [,] col Row number, followed by column letter or number ( e.g ., \u201c2,C\u201d, or \u201c2,3\u201d), separated by \u201c,\u201d.\nand where comment_arg is a string expression enclosed in double quotes. If command_arg is omitted, a previously defined comment will be removed."}, "copy": {"uri": "tablecmd-copy", "anchor": "", "usage": "table_name. copy\ntable_name. copy dest_name", "description": "Creates a copy of the table.", "long_description": "Creates either a named or unnamed copy of the table."}, "copyrange": {"uri": "tablecmd-copyrange", "anchor": "", "usage": "table_name. copyrange(options) s1 s2 destname d1\ntable_name. copyrange(options) sr1 sc1 sr2 sc2 destname dr1 dc1", "description": "Copies a portion of the table to the specified location in another table."}, "copytable": {"uri": "tablecmd-copytable", "anchor": "", "usage": "table_name. copytable destname d1\ntable_name. copytable destname dr1 dc1", "description": "Copies the entire table to the specified location in another table.", "long_description": "The copytable command can be specified either using coordinates where columns are signified with a letter, and rows by a number (for example \u201cA3\u201d represents the first column, third row), or by row number and column number.\nThe first syntax represents coordinate form, where destname specifies the name of the table to copy to, and d1 specifies the upper-left coordinate of the destination table.\nThe second syntax represents the row/column number form, where destname specifies the name of the table to copy to, and dr1 and dr2 specify the upper and left most row and column of the destination table, respectively."}, "deletecells": {"uri": "tablecmd-deletecells", "anchor": "", "usage": "table_name. deletecells ( cell_range ) delete_arg", "description": "Delete cells from a table.", "long_description": "where delete_arg specifies what to delete or how the surrounding cells should be moved.\nThe cell_range argument defines the cells to be modified. See Table::setformat for the syntax.\ndelete_arg may be one of the following:\n\nrow Delete row. column Delete column. left Shift cells to right of cell_range to the left after cells have been deleted. up Shift cells below cell_range up after cells have been deleted."}, "deletecol": {"uri": "tablecmd-deletecol", "anchor": "", "usage": "table_name. deletecol ( col_loc ) [num_cols]", "description": "Removes columns from a table.", "long_description": "where col_loc specifies the first column to be removed. The col_loc may either be the integer column number ( e.g. \u201c3\u201d) or the column letter ( e.g. \u201cC\u201d).\nThe num_cols specifies the number of columns to remove from the table. If num_cols is not provided, the default is one."}, "deleterow": {"uri": "tablecmd-deleterow", "anchor": "", "usage": "table_name. deleterow ( row_loc ) [num_rows]", "description": "Removes rows from a table.", "long_description": "where row_loc is an integer which specifies the first row to remove, and num_rows specifies the number of rows to remove from the table. If num_rows is not provided, the default is one."}, "display": {"uri": "tablecmd-display", "anchor": "", "usage": "table_name. display object_name", "description": "Display table, graph, or spool output in the table object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the table object."}, "displayname": {"uri": "tablecmd-displayname", "anchor": "", "usage": "table_name. displayname display_name", "description": "Display name for table objects.", "long_description": "Attaches a display name to a table object which may be used to label output in place of the standard table object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in table object names."}, "fixcol": {"uri": "tablecmd-fixcol", "anchor": "", "usage": "table_name. fixcol cols", "description": "Fixes a set of columns to left of the spreadsheet view of a table object so that the leading columns are always in view.", "long_description": "where cols is the number of columns to be fixed"}, "fixrow": {"uri": "tablecmd-fixrow", "anchor": "", "usage": "table_name. fixrow rows", "description": "Fixes a set of rows at the top of the spreadsheet view of a table object so that the leading rows are always in view.", "long_description": "where rows is the number of rw to be fixed"}, "fixrowcol": {"uri": "tablecmd-fixrowcol", "anchor": "", "usage": "table_name. fixrowcol rows cols", "description": "Fixes a set of rows at the top and a set of columns to left of a spreadsheet view of a table object so that the leading rows and columns are always in view.", "long_description": "where rows is the number of rows to be fixed and cols is the number of columns to be fixed."}, "insertcells": {"uri": "tablecmd-insertcells", "anchor": "", "usage": "table_name. insertcells ( cell_range ) insert_arg", "description": "Inserts cells into a table.", "long_description": "where insert_arg specifies what to be inserted or how the surrounding cells should be shifted.\nThe cell_range argument defines the cells to be modified. See Table::setformat for the syntax.\ninsert_arg may be one of the following:\n\nrow Insert row. column Insert column. right Shift cells in cell_range to the right before inserting new cells. down Shift cells below cell_range down before inserting new cells."}, "insertcol": {"uri": "tablecmd-insertcol", "anchor": "", "usage": "table_name. insertcol ( col_loc ) [num_cols]", "description": "Insert additional columns in a table.", "long_description": "where col_loc specifies the column location to insert the new columns. The col_loc may either be the integer column number ( e.g. \u201c3\u201d) or the column letter ( e.g. \u201cC\u201d).\nThe num_cols specifies the number of columns to insert into the table. If num_cols is not provided, the default is one."}, "insertrow": {"uri": "tablecmd-insertrow", "anchor": "", "usage": "table_name. insertrow ( row_loc ) [num_rows]", "description": "Insert additional rows in a table.", "long_description": "where row_loc is an integer which specifies the row location to insert the new rows, and num_rows specifies the number of rows to insert. If num_rows is not provided, the default is one."}, "label": {"uri": "tablecmd-label", "anchor": "", "usage": "table_name. label\ntable_name. label (options) [text]", "description": "Display or change the label view of the table object, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the table label."}, "olepush": {"uri": "tablecmd-olepush", "anchor": "", "usage": "table_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "save": {"uri": "tablecmd-save", "anchor": "", "usage": "table_name. save (options) [path\\]file_name\ntable_name. save ( options ) [path\\]file_name [table_description]", "description": "Save table to disk as an Excel 2007 XLSX, CSV, tab-delimited ASCII text, RTF, HTML, Enhanced Metafile, LaTeX, PDF, or Markdown file.", "long_description": "Follow the keyword with a name for the file. file_name may include the file type extension, or the file type may be specified using the \u201ct=\u201d option.\nIf an explicit path is not specified, the file will be stored in the default directory, as set in the File Locations global options.\nThe base syntax for writing Excel files is:\nwhere the following table_description elements may be employed:\n\u2022 \u201crange = arg \u201d, where arg is top left cell of the destination Excel workbook, following the standard Excel format [worksheet!][topleft_cell[:bottomright_cell]] .\nIf the worksheet name contains spaces, it should be placed in single quotes. If the worksheet name is omitted, the cell range is assumed to refer to the currently active sheet. If only a top left cell is provided, a bottom right cell will be chosen automatically to cover the range of non-empty cells adjacent to the specified top left cell. If only a sheet name is provided, the first set of non-empty cells in the top left corner of the chosen worksheet will be selected automatically. As an alternative to specifying an explicit range, a name which has been defined inside the excel workbook to refer to a range or cell may be used to specify the cells to read."}, "setattr": {"uri": "tablecmd-setattr", "anchor": "", "usage": "table_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "setfillcolor": {"uri": "tablecmd-setfillcolor", "anchor": "", "usage": "table_name. setfillcolor ( cell_range, options ) color_arg", "description": "Set the fill (background) color of the specified table cells.", "long_description": "where cell_range can take one of the following forms:\n\n@all Apply to all cells in the table. cell Cell identifier. You can identify cells using either the column letter and row number (e.g., \u201cA1\u201d), or by using \u201cR\u201d followed by the row number followed by \u201cC\u201d and the column number (e.g., \u201cR1C2\u201d).You can optionally add an \u2018if\u2019 condition to the identifier. Without the \u2018if\u2019 condition, the formatting will be applied to all the identified cells. If an \u2018if\u2019 condition is supplied, the formatting will be applied to all the identified where the \u2018if\u2019 condition is true. The \u2018if\u2019 condition must be followed by a boolean expression. row [,] col Row number, followed by column letter or number ( e.g ., \u201c2,C\u201d, or \u201c2,3\u201d), separated by \u201c,\u201d. Apply to cell. row Row number ( e.g. , \u201c2\u201d). Apply to all cells in the row. col Column letter ( e.g. , \u201cB\u201d). Apply to all cells in the column. first_cell [:] last_cell , first_cell [,] last_cell Top left cell of the selection range (specified in \u201c cell \u201d format), followed by bottom right cell of the selection range (specified in \u201c cell \u201d format), separated by a \u201c:\u201d or \u201c,\u201d ( e.g. , \u201cA2:C10\u201d, \u201cA2,C10\u201d, or \u201cR2C1:R10C3\u201d, \u201cR2C1,R10C3\u201d). Apply to all cells in the rectangular region defined by the first cell and last cell. first_cell_row [,] first_cell_col [,] last_cell_row [,] last_cell_col Top left cell of the selection range (specified in \u201c row [,] col \u201d format), followed by bottom right cell of the selection range (specified in \u201c row [,] col \u201d format), separated by a \u201c,\u201d ( e.g. , \u201c2,A,10,C\u201d or \u201c2,1,10,3\u201d). Apply to all cells in the rectangular region defined by the first cell and last cell.\nThe color_arg specifies the color to be applied to the text in the cells. The color may be specified using predefined color names, by specifying the individual red-green-blue (RGB) components using the special \u201c@RGB\u201d function, or by specifying the individual red-green-blue (RGB) components in hexadecimal using the special \u201c@HEX\u201d function. The second and third methods are obviously more difficult, but allow you to use custom colors.\nThe predefined colors are given by the keywords (with their RGB and HEX equivalents):\n\nblue @rgb(0, 0, 255) @hex(0000ff) red @rgb(255, 0, 0) @hex(ff0000) ltred @rgb(255, 168, 168) @hex(ffa8a8) green @rgb(0, 128, 0) @hex(008000) black @rgb(0, 0, 0) @hex(000000) white @rgb(255, 255, 255) @hex(ffffff) purple @rgb(128, 0, 128) @hex(800080) orange @rgb(255, 128, 0) @hex(ff8000) yellow @rgb(255, 255, 0) @hex(ffff00) gray @rgb(128, 128, 128) @hex(808080) ltgray @rgb(192, 192, 192) @hex(c0c0c0)"}, "setfont": {"uri": "tablecmd-setfont", "anchor": "", "usage": "table_name. setfont ( cell_range ) font_args", "description": "Set the font for text in the specified table cells.", "long_description": "The font_args may include one or more of the following:\n\ntype([face], [pt] , [+/- b ], [+/- i ], [+/- u ], [+/- s ]) Set characteristics of the font for the graph element type . The font name (face) , size (pt) , and characteristics are all optional. face should be a valid font name, enclosed in double quotes. pt should be the font size in points. The remaining options specify whether to turn on/off boldface (b), italic (i), underline (u), and strikeout (s) styles.\nand type is one of \u201call\u201d, \u201caxes\u201d, \u201clegend\u201d, \u201ctext\u201d, \u201cobs\u201d, where \u201caxes\u201d refers to the axes labels, \u201clegend\u201d refers to the graph legend, \u201ctext\u201d refers to the text objects, \u201cobs\u201d refers to the observation scale, and \u201call\u201d refers to all of the elements."}, "setformat": {"uri": "tablecmd-setformat", "anchor": "", "usage": "table_name. setformat ( cell_range ) format_arg", "description": "Set the display format for cells in a table view.", "long_description": "where format_arg is a set of arguments used to specify format settings. If necessary, you should enclose the format_arg in double quotes.\nThe cell_range option is used to describe the cells to be modified. It may take one of the following forms:\n\n@all Apply to all cells in the table. cell Cell identifier. You can identify cells using either the column letter and row number (e.g., \u201cA2\u201d), or by using \u201cR\u201d followed by the row number followed by \u201cC\u201d and the column number (e.g., \u201cR1C2\u201d).You can optionally add an \u2018if\u2019 condition to the identifier. Without the \u2018if\u2019 condition, the formatting will be applied to all the identified cells. If an \u2018if\u2019 condition is supplied, the formatting will be applied to all the identified where the \u2018if\u2019 condition is true. The \u2018if\u2019 condition must be followed by a boolean expression. row [,] col Row number, followed by column letter or number ( e.g ., \u201c2,C\u201d, or \u201c2,3\u201d), separated by \u201c,\u201d. Apply to cell. row Row number ( e.g. , \u201c2\u201d). Apply to all cells in the row. col Column letter ( e.g. , \u201cB\u201d). Apply to all cells in the column. first_cell [:] last_cell , first_cell [,] last_cell Top left cell of the selection range (specified in \u201c cell \u201d format), followed by bottom right cell of the selection range (specified in \u201c cell \u201d format), separated by a \u201c:\u201d or \u201c,\u201d ( e.g. , \u201cA2:C10\u201d, \u201cA2,C10\u201d, or \u201cR2C1:R10C3\u201d, \u201cR2C1,R10C3\u201d). Apply to all cells in the rectangular region defined by the first cell and last cell. first_cell_row [,] first_cell_col [,] last_cell_row [,] last_cell_col Top left cell of the selection range (specified in \u201c row [,] col \u201d format), followed by bottom right cell of the selection range (specified in \u201c row [,] col \u201d format), separated by a \u201c,\u201d ( e.g. , \u201c2,A,10,C\u201d or \u201c2,1,10,3\u201d). Apply to all cells in the rectangular region defined by the first cell and last cell.\nTo format numeric values, you should use one of the following format specifications:\n\ng [.precision] significant digits f [.precision] fixed decimal places c [.precision] fixed characters e [.precision] scientific/float p [.precision] percentage r [.precision] fraction\nTo specify a format that groups digits into thousands using a comma separator, place a \u201ct\u201d after the format character. For example, to obtain a fixed number of decimal places with commas used to separate thousands, use \u201cft [.precision] \u201d.\nTo use the period character to separate thousands and commas to denote decimal places, use \u201c..\u201d (two periods) when specifying the precision. For example, to obtain a fixed number of characters with a period used to separate thousands, use \u201cct [..precision] \u201d.\nIf you wish to display negative numbers surrounded by parentheses ( i.e. , display the number -37.2 as \u201c(37.2)\u201d), you should enclose the format string in \u201c()\u201d ( e.g. , \u201cf(.8)\u201d).\nTo format numeric values using date and time formats, you may use a subset of the possible date format strings (see \u201cDate Formats\u201d ). The possible format arguments, along with an example of the date number 730856.944793113 (January 7, 2002 10:40:30.125 p.m) formatted using the argument are given by:\n\nWF (uses current EViews workfile period display format) YYYY \u201c2002\u201d YYYY-Mon \u201c2002-Jan\u201d YYYYMon \u201c2002 Jan\u201d YYYY[M]MM \u201c2002[M]01\u201d YYYY:MM \u201c2002:01\u201d YYYY[Q]Q \u201c2002[Q]1\u201d YYYY:Q \u201c2002:Q YYYY[S]S \u201c2002[S]1\u201d (semi-annual) YYYY:S \u201c2002:1\u201d YYYY-MM-DD \u201c2002-01-07\u201d YYYY Mon dd \u201c2002 Jan 7\u201d YYYY Month dd \u201c2002 January 7\u201d YYYY-MM-DD HH:MI \u201c2002-01-07 22:40\u201d YYYY-MM-DD HH:MI:SS \u201c2002-01-07 22:40:30\u201d YYYY-MM-DD HH:MI:SS.SSS \u201c2002-01-07 22:40:30.125\u201d Mon-YYYY \u201cJan-2002\u201d Mon dd YYYY \u201cJan 7 2002\u201d Mon dd, YYYY \u201cJan 7, 2002\u201d Month dd YYYY \u201cJanuary 7 2002\u201d Month dd, YYYY \u201cJanuary 7, 2002\u201d MM/DD/YYYY \u201c01/07/2002\u201d mm/DD/YYYY \u201c1/07/2002\u201d mm/DD/YYYY HH:MI \u201c1/07/2002 22:40\u201d mm/DD/YYYY HH:MI:SS \u201c1/07/2002 22:40:30\u201d mm/DD/YYYY HH:MI:SS.SSS \u201c1/07/2002 22:40:30.125\u201d mm/dd/YYYY \u201c1/7/2002\u201d mm/dd/YYYY HH:MI \u201c1/7/2002 22:40\u201d mm/dd/YYYY HH:MI:SS \u201c1/7/2002 22:40:30\u201d mm/dd/YYYY HH:MI:SS.SSS \u201c1/7/2002 22:40:30.125\u201d dd/MM/YYYY \u201c7/01/2002\u201d dd/mm/YYYY \u201c7/1/2002\u201d DD/MM/YYYY \u201c07/01/2002\u201d dd Mon YYYY \u201c7 Jan 2002\u201d dd Mon, YYYY \u201c7 Jan, 2002\u201d dd Month YYYY \u201c7 January 2002\u201d dd Month, YYYY \u201c7 January, 2002\u201d dd/MM/YYYY HH:MI \u201c7/01/2002 22:40\u201d dd/MM/YYYY HH:MI:SS \u201c7/01/2002 22:40:30\u201d dd/MM/YYYY HH:MI:SS.SSS \u201c7/01/2002 22:40:30.125\u201d dd/mm/YYYY hh:MI \u201c7/1/2002 22:40\u201d dd/mm/YYYY hh:MI:SS \u201c7/1/2002 22:40:30\u201d dd/mm/YYYY hh:MI:SS.SSS \u201c7/1/2002 22:40:30.125\u201d hm:MI am \u201c10:40 pm\u201c hm:MI:SS am \u201c10:40:30 pm\u201d hm:MI:SS.SSS am \u201c10:40:30.125 pm\u201d HH:MI \u201c22:40\u201d HH:MI:SS \u201c22:40:30\u201d HH:MI:SS.SSS \u201c22:40:30.125\u201d hh:MI \u201c22:40\u201d hh:MI:SS \u201c22:40:30\u201d hh:MI:SS.SSS \u201c22:40:30.125\u201d\nNote that the \u201chh\u201d formats display 24-hour time without leading zeros. In our examples above, there is no difference between the \u201cHH\u201d and \u201chh\u201d formats for 10 p.m.\nAlso note that all of the \u201cYYYY\u201d formats above may be displayed using two-digit year \u201cYY\u201d format."}, "setheight": {"uri": "tablecmd-setheight", "anchor": "", "usage": "table_name. setheight ( row_range ) height_arg", "description": "Set the row height of rows in a table.", "long_description": "where row_range is either a single row number ( e.g. , \u201c5\u201d), a colon delimited range of rows (from low to high, e.g. , \u201c3:5\u201d), or the \u201c@ALL\u201d keyword, and height_arg specifies the height unit value, where height units are specified in character heights. The character height is given by the font-specific sum of the units above and below the baseline and the leading, where the font is given by the default font for the current table (the EViews table default font at the time the table was created). height_arg values may be non-integer values with resolution up to 1/10 of a height unit."}, "setindent": {"uri": "tablecmd-setindent", "anchor": "", "usage": "table_name. setindent ( cell_range ) indent_arg", "description": "Set the display indentation for a table view.", "long_description": "where indent_arg is an indent value specified in 1/5 of a width unit. The width unit is computed from representative characters in the default font for the current table (the EViews table default font at the time the table was created), and corresponds roughly to a single character. Indentation is only relevant for non-center justified cells.\nThe default values are taken from the settings at the time the table is created.\nThe cell_range defines the cells to be modified. See Table::setformat for the syntax for cell_range specifications."}, "setjust": {"uri": "tablecmd-setjust", "anchor": "", "usage": "table_name. setjust ( cell_range ) format_arg", "description": "Set the justification for cells in the table.", "long_description": "where format_arg may consist of the following:\n\ntop / middle / bottom Vertical justification setting. auto / left / center / right Horizontal justification setting. Strings are left-justified and numbers are right-justified under \u201cauto\u201d.\nThe default settings are taken from the original view when created by freezing a view, or as \u201cmiddle bottom\u201d for newly created tables.\nThe cell_range defines the cells to be modified. See Table::setformat for syntax."}, "setlines": {"uri": "tablecmd-setlines", "anchor": "", "usage": "table_name. setlines ( cell_range ) line_args", "description": "Sets line characteristics and borders for a set of table cells.", "long_description": "where cell_range describes the table cells to be modified, and line_args is a set of arguments used to modify the existing line settings. See Table::setfillcolor for the syntax for cell_range .\nThe line_args may contain one or more of the following:\n\n+t / -t Top border [on/off]. +b / -b Bottom border [on/off]. +l / -l Left border [on/off]. +r / -r Right border [on/off]. +i / -i Inner borders [on/off]. +o / -o Outer borders [on/off]. +v / -v Vertical inner borders [on/off]. +h / -h Horizontal inner borders [on/off]. +a / -a All borders [on/off]. +d / -d Double middle lines [on/off]."}, "setmerge": {"uri": "tablecmd-setmerge", "anchor": "", "usage": "table_name. setmerge ( cell_range )", "description": "Merges/unmerges one or more table cells.", "long_description": "where cell_range describes the table cells (in a single row) to be merged. The cell_range specifications are given by:\n\nfirst_cell [:] last_cell , first_cell [,] last_cell Left (right) cell of the selection range (specified in \u201c cell \u201d format), followed by right (left) cell of the selection range (specified in \u201c cell \u201d format), separated by a \u201c:\u201d or \u201c,\u201d ( e.g. , \u201cA2:C2\u201d, \u201cA2,C2\u201d, or \u201cR2C1:R2C3\u201d, \u201cR2C1,R2C3\u201d). Merge all cells in the region defined by the first column and last column for the specified row. cell_row [,] first_cell_col [,] cell_row [,] last_cell_col Left (right) cell of the selection range (specified in \u201c row [,] col \u201d format), followed by right (left) cell of the selection range (specified in \u201c row [,] col \u201d format, with a fixed row ), separated by a \u201c,\u201d ( e.g. , \u201c2,A,2,C\u201d or \u201c2,1,2,3\u201d). Merge all cells in the row defined by the first column and last column identifier.\nIf the first specified column is less than the last specified column (left specified before right), the cells in the row will be merged left to right, otherwise, the cells will be merged from right to left.The contents of the merged cell will be taken from the first non-empty cell in the merged region. If merging from left to right, the left-most cell contents will be used; if merging from right to left, the right-most cell contents will be displayed.\nIf you specify a merge involving previously merged cells, EViews will unmerge all cells within the specified range."}, "setprefix": {"uri": "tablecmd-setprefix", "anchor": "", "usage": "table_name. setprefix ( cell_range ) prefix", "description": "Set the cell prefix string for the specified table cells.", "long_description": "where prefix is the prefix you wish to assign to the cells. To remove a prefix from a cell, leave prefix empty.\nThe cell_range defines the cells to be modified. See Table::setformat for the syntax for cell_range specifications."}, "setsuffix": {"uri": "tablecmd-setsuffix", "anchor": "", "usage": "table_name. setsuffix ( cell_range ) suffix", "description": "Set the cell suffix string for the specified table cells.", "long_description": "where suffix is the suffix you wish to assign to the cells. To remove a suffix from a cell, leave suffix empty.\nThe cell_range defines the cells to be modified. See Table::setformat for the syntax for cell_range specifications."}, "settextcolor": {"uri": "tablecmd-settextcolor", "anchor": "", "usage": "table_name. settextcolor ( cell_range ) color_arg", "description": "Changes the text color of the specified table cells.", "long_description": "where cell_range describes the table cells to be modified, and color_arg specifies the color to be applied to the text in the cells. See Table::setfillcolor for the syntax for cell_range and color_arg."}, "setwidth": {"uri": "tablecmd-setwidth", "anchor": "", "usage": "table_name. setwidth ( col_range ) width_arg", "description": "Set the column width for selected columns in a table.", "long_description": "where col_range is either a single column number or letter ( e.g. , \u201c5\u201d, \u201cE\u201d), a colon delimited range of columns (from low to high, e.g. , \u201c3:5\u201d, \u201cC:E\u201d), or the keyword \u201c@ALL\u201d, and width_arg specifies the width unit value. The width unit is computed from representative characters in the default font for the current table (the EViews table default font at the time the table was created), and corresponds roughly to a single character. width_arg values may be non-integer values with resolution up to 1/10 of a width unit."}, "sheet": {"uri": "tablecmd-sheet", "anchor": "", "usage": "table_name. sheet (options)", "description": "Display a table object."}, "sort": {"uri": "tablecmd-sort", "anchor": "", "usage": "table_name. sort ( cell_range ) column_arg", "description": "Sort the selected rows of a table object.", "long_description": "where column_arg is a list of columns by which to sort the cell_range . You may specify up to three columns for sorting. The specified columns must be within the cell_range . If you list two or more columns, sort uses the values of the second column to resolve ties in the first column, and values of the third column to resolve ties in the first and second. By default, EViews will sort in ascending order. To sort in descending order, precede the column name with a minus sign (\u201c-\u201d).\nThe cell_range defines the cells to be modified. See Table::setformat for the syntax for cell_range specifications."}, "title": {"uri": "tablecmd-title", "anchor": "", "usage": "table_name. title title_arg", "description": "Assign or change the title of a table.", "long_description": "where title_arg is a case sensitive string which may contain spaces."}, "transpose": {"uri": "tablecmd-transpose", "anchor": "", "description": "Transposes a set of cells in the table.", "long_description": "table_name.transpose(cell_range)\nwhere cell_range can take one of the following forms:\n\n@all Apply to all cells in the table. cell Cell identifier. You can identify cells using either the column letter and row number (e.g., \u201cA1\u201d), or by using \u201cR\u201d followed by the row number, followed by \u201cC\u201d and the column number (e.g., \u201cR1C2\u201d). row[,] col Row number, followed by column letter or number, separated by \u201c,\u201d (e.g., \u201c2,C\u201d, or \u201c2,3\u201d). Apply to cell. row Row number (e.g., \u201c2\u201d). Apply to all cells in the row. col Column letter (e.g., \u201cB\u201d). Apply to all cells in the column. first_cell[:]last_cell, first_cell[,]last_cell Top left cell of the selection range (specified in \u201ccell\u201d format), followed by bottom right cell of the selection range (specified in \u201ccell\u201d format), separated by a \u201c:\u201d or \u201c,\u201d (e.g., \u201cA2:C10\u201d, \u201cA2,C10\u201d, or \u201cR2C1:R10C3\u201d, \u201cR2C1,R10C3\u201d). Apply to all cells in the rectangular region defined by the first cell and last cell. first_cell_row[,] first_cell_col[,] last_cell_row[,] last_cell_col Top left cell of the selection range (specified in \u201crow[,] col\u201d format), followed by bottom right cell of the selection range (specified in \u201crow[,] col\u201d format), separated by a \u201c,\u201d (e.g., \u201c2,A,10,C\u201d or \u201c2,1,10,3\u201d). Apply to all cells in the rectangular region defined by the first cell and last cell."}}, "Text": {"[Text]": {"uri": "textcmd-Text", "anchor": "", "description": "Text object."}, "@attr": {"uri": "textcmd-Text", "anchor": "ww205916", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@description": {"uri": "textcmd-Text", "anchor": "ww178691", "usage": "@description", "description": "string containing the Text object\u2019s description (if available)."}, "@detailedtype": {"uri": "textcmd-Text", "anchor": "ww188687", "usage": "@detailedtype", "description": "string with the object type: \u201cTEXT\u201d."}, "@displayname": {"uri": "textcmd-Text", "anchor": "ww178692", "usage": "@displayname", "description": "string containing the Text object\u2019s display name. If the object has no display name set, the name is returned."}, "@line": {"uri": "textcmd-Text", "anchor": "ww178696", "usage": "@line(i)", "description": "returns a string containing the Text on i -th line of the Text object."}, "@linecount": {"uri": "textcmd-Text", "anchor": "ww178689", "usage": "@linecount", "description": "scalar containing the number of lines in a Text object."}, "@name": {"uri": "textcmd-Text", "anchor": "ww178697", "usage": "@name", "description": "string containing the Text object\u2019s name."}, "@remarks": {"uri": "textcmd-Text", "anchor": "ww178698", "usage": "@remarks", "description": "string containing the Text object\u2019s remarks (if available)."}, "@svector": {"uri": "textcmd-Text", "anchor": "ww178700", "usage": "@svector", "description": "returns an Svector where each element is a line of the Text object."}, "@svectornb": {"uri": "textcmd-Text", "anchor": "ww178701", "usage": "@svectornb", "description": "same as @svector, with blank lines removed."}, "@type": {"uri": "textcmd-Text", "anchor": "ww178702", "usage": "@type", "description": "string with the object type: \u201cTEXT\u201d."}, "@updatetime": {"uri": "textcmd-Text", "anchor": "ww178703", "usage": "@updatetime", "description": "string representation of the time and date at which the Text object was last updated."}, "append": {"uri": "textcmd-append", "anchor": "", "usage": "text_name. append \u201ctext to append\u201d\ntext_name. append(file) [path\\]file_name", "description": "Appends text or a text file to the end of a text object.", "long_description": "There are different forms of the command, with the syntax depending on whether you are appending a line of text or the contents of a text file to the end of the text object.\nSpecify the literal text or file name after the append keyword."}, "clear": {"uri": "textcmd-clear", "anchor": "", "usage": "text_name. clear", "description": "Clear a text object."}, "clearhist": {"uri": "textcmd-clearhist", "anchor": "", "usage": "text_name. clearhist", "description": "Clear the contents of the history attribute for text objects.", "long_description": "Removes the text\u2019s history attribute, as shown in the label view of the text."}, "clearremarks": {"uri": "textcmd-clearremarks", "anchor": "", "usage": "text_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the text\u2019s remarks attribute, as shown in the label view of the text."}, "copy": {"uri": "textcmd-copy", "anchor": "", "usage": "text_name. copy\ntext_name. copy dest_name", "description": "Creates a copy of the text.", "long_description": "Creates either a named or unnamed copy of the text."}, "display": {"uri": "textcmd-display", "anchor": "", "usage": "text_name. display object_name", "description": "Display table, graph, or spool output in the text object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the text object."}, "displayname": {"uri": "textcmd-displayname", "anchor": "", "usage": "text_name. displayname display_name", "description": "Display name for text objects.", "long_description": "Attaches a display name to a text object which may be used in place of the standard text object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in text object names."}, "label": {"uri": "textcmd-label", "anchor": "", "usage": "text_name. label\ntext_name. label (options) [text]", "description": "Display or change the label view of the text object, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the text object label."}, "olepush": {"uri": "textcmd-olepush", "anchor": "", "usage": "text_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "save": {"uri": "textcmd-save", "anchor": "", "usage": "text_name. save (options) [path\\]file_name", "description": "Save text object to disk as an ASCII text, RTF, HTML, PDF, TEX, or MD file.", "long_description": "Follow the keyword with a name for the file. file_name may include the file type extension, or the file type may be specified using the \u201ct=\u201d option.\nIf an explicit path is not specified, the file will be stored in the default directory, as set in the File Locations global options.\nThe MD (Markdown) setting uses very basic syntax and should be usable in most editors."}, "setattr": {"uri": "textcmd-setattr", "anchor": "", "usage": "text_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "svector": {"uri": "textcmd-svector", "anchor": "", "usage": "text_name. svector name", "description": "Make an svector out of the contents of the text object.", "long_description": "Makes an svector called name, where each row of the svector is equal to a line of the text object."}, "text": {"uri": "textcmd-text", "anchor": "", "description": "Text object."}}, "Valmap": {"[Valmap]": {"uri": "valmapcmd-Valmap", "anchor": "", "description": "Valmap (value map). Assigns descriptive labels to values in numeric or alpha series."}, "@attr": {"uri": "valmapcmd-Valmap", "anchor": "ww209453", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@description": {"uri": "valmapcmd-Valmap", "anchor": "ww209454", "usage": "@description", "description": "string containing the Valmap object\u2019s description (if available)."}, "@detailedtype": {"uri": "valmapcmd-Valmap", "anchor": "ww209455", "usage": "@detailedtype", "description": "string with the object type: \u201cVALMAP\u201d."}, "@displayname": {"uri": "valmapcmd-Valmap", "anchor": "ww179487", "usage": "@displayname", "description": "string containing the Valmap object\u2019s display name. If the matrix has no display name set, the name is returned."}, "@name": {"uri": "valmapcmd-Valmap", "anchor": "ww179488", "usage": "@name", "description": "string containing the Valmap object\u2019s name."}, "@remarks": {"uri": "valmapcmd-Valmap", "anchor": "ww179489", "usage": "@remarks", "description": "string containing the Valmap object\u2019s remarks (if available)."}, "@type": {"uri": "valmapcmd-Valmap", "anchor": "ww179491", "usage": "@type", "description": "string with the object type: \u201cVALMAP\u201d."}, "@updatetime": {"uri": "valmapcmd-Valmap", "anchor": "ww179493", "usage": "@updatetime", "description": "string representation of the time and date at which the Valmap was last updated."}, "append": {"uri": "valmapcmd-append", "anchor": "", "usage": "valmap_name. append value1 label1 [value2 label2...]", "description": "Append one or more value/label mappings to a valmap's specification."}, "clearhist": {"uri": "valmapcmd-clearhist", "anchor": "", "usage": "valmap_name. clearhist", "description": "Clear the contents of the history attribute.", "long_description": "Removes the valmap\u2019s history attribute, as shown in the label view of the valmap."}, "clearremarks": {"uri": "valmapcmd-clearremarks", "anchor": "", "usage": "valmap_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the valmap\u2019s remarks attribute, as shown in the label view of the valmap."}, "copy": {"uri": "valmapcmd-copy", "anchor": "", "usage": "valmap_name. copy\nvalmap_name. copy dest_name", "description": "Creates a copy of the valmap.", "long_description": "Creates either a named or unnamed copy of the valmap."}, "displayname": {"uri": "valmapcmd-displayname", "anchor": "", "usage": "valmap_name. displayname display_name", "description": "Display name for a valmap objects.", "long_description": "Attaches a display name to a valmap which may be used to label output in place of the standard valmap object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in valmap object names."}, "label": {"uri": "valmapcmd-label", "anchor": "", "usage": "valmap_name. label\nvalmap_name. label (options) [text]", "description": "Display or change the label view of a valmap, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the valmap label."}, "olepush": {"uri": "valmapcmd-olepush", "anchor": "", "usage": "valmap_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "setattr": {"uri": "valmapcmd-setattr", "anchor": "", "usage": "valmap_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "sheet": {"uri": "valmapcmd-sheet", "anchor": "", "usage": "valmap_name. sheet (options)", "description": "Definitions view of a valmap object."}, "stats": {"uri": "valmapcmd-stats", "anchor": "", "usage": "valmap_name. stats (options)", "description": "Statistics for valmap usage.", "long_description": "Displays a description of the composition of a valmap."}, "usage": {"uri": "valmapcmd-usage", "anchor": "", "usage": "valmap_name. stats (options)", "description": "Find series and alphas which use the valmap.", "long_description": "Display list of series and alpha objects which use the valmap."}}, "Var": {"[Var]": {"uri": "varcmd-Var", "anchor": "", "description": "Vector autoregression and error correction object."}, "@aic": {"uri": "varcmd-Var", "anchor": "ww177427", "usage": "@aic", "description": "Akaike information criterion for the system."}, "@attr": {"uri": "varcmd-Var", "anchor": "ww215453", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@coefmat": {"uri": "varcmd-Var", "anchor": "ww177439", "usage": "@coefmat", "description": "coefficient matrix (as displayed in output table)."}, "@coefse": {"uri": "varcmd-Var", "anchor": "ww177440", "usage": "@coefse", "description": "matrix of coefficient standard errors (corresponding to the output table)."}, "@cointadj": {"uri": "varcmd-Var", "anchor": "ww320520", "usage": "@cointadj", "description": "matrix containing cointegrating variable adjustment coefficients [img:../content/images/varcmd.129.01.1.jpg] (where applicable)."}, "@cointadjse": {"uri": "varcmd-Var", "anchor": "ww320684", "usage": "@cointadjse", "description": "matrix containing standard errors of cointegrating variable adjustment coefficients (where applicable)."}, "@cointlr": {"uri": "varcmd-Var", "anchor": "ww320729", "usage": "@cointlr", "description": "matrix containing long-run equilibrium coefficients [img:../content/images/varcmd.129.01.2.jpg] (where applicable)."}, "@cointse": {"uri": "varcmd-Var", "anchor": "ww177441", "usage": "@cointse", "description": "standard errors of matrix of cointegrating vectors (where applicable)."}, "@cointsr": {"uri": "varcmd-Var", "anchor": "ww321132", "usage": "@cointsr", "description": "matrix containing short-run adjustment coefficients [img:../content/images/varcmd.129.01.3.jpg] (where applicable)."}, "@cointsrse": {"uri": "varcmd-Var", "anchor": "ww321134", "usage": "@cointsrse", "description": "matrix containing standard errors of short-run adjustment coefficients (where applicable)."}, "@cointvec": {"uri": "varcmd-Var", "anchor": "ww177442", "usage": "@cointvec", "description": "matrix of cointegrating vectors, [img:../content/images/varcmd.129.01.4.jpg] (where applicable)."}, "@command": {"uri": "varcmd-Var", "anchor": "ww186919", "usage": "@command", "description": "full command line form of the estimation command. Note this is a combination of @method and @options ."}, "@companion": {"uri": "varcmd-Var", "anchor": "ww233209", "usage": "@companion", "description": "companion matrix for the full set of lag coefficients."}, "@description": {"uri": "varcmd-Var", "anchor": "ww204436", "usage": "@description", "description": "string containing the VAR object\u2019s description (if available)."}, "@detailedtype": {"uri": "varcmd-Var", "anchor": "ww204428", "usage": "@detailedtype", "description": "returns a string with the object type: \u201cVAR\u201d."}, "@detresid": {"uri": "varcmd-Var", "anchor": "ww177428", "usage": "@detresid", "description": "determinant of the residual covariance matrix."}, "@displayname": {"uri": "varcmd-Var", "anchor": "ww186920", "usage": "@displayname", "description": "returns the VAR\u2019s display name. If the VAR has no display name set, the VAR\u2019s name is returned."}, "@eqlogl": {"uri": "varcmd-Var", "anchor": "ww177390", "usage": "@eqlogl(k)", "description": "log likelihood for equation k ."}, "@eqncoef": {"uri": "varcmd-Var", "anchor": "ww177391", "usage": "@eqncoef(k)", "description": "number of estimated coefficients in equation k ."}, "@eqregobs": {"uri": "varcmd-Var", "anchor": "ww177392", "usage": "@eqregobs(k)", "description": "number of observations in equation k ."}, "@hq": {"uri": "varcmd-Var", "anchor": "ww177429", "usage": "@hq", "description": "Hannan-Quinn information criterion for the system."}, "@impfact": {"uri": "varcmd-Var", "anchor": "ww177443", "usage": "@impfact", "description": "factorization matrix used in last impulse response view."}, "@lagcoef": {"uri": "varcmd-Var", "anchor": "ww233473", "usage": "@lagcoef(k)", "description": "lag coefficient matrix for lag k ."}, "@lagcoefs": {"uri": "varcmd-Var", "anchor": "ww233280", "usage": "@lagcoefs", "description": "coefficient matrix containing the full set of horizontally concatenated lag coefficient matrices."}, "@lagcoefsum": {"uri": "varcmd-Var", "anchor": "ww266322", "usage": "@lagcoefsum", "description": "sum of the lag coefficient matrices."}, "@lagcount": {"uri": "varcmd-Var", "anchor": "ww233544", "usage": "@lagcount", "description": "number of lags included in the VAR."}, "@lagids": {"uri": "varcmd-Var", "anchor": "ww233662", "usage": "@lagids", "description": "vector of integers containing the lags used in estimation."}, "@lagorder": {"uri": "varcmd-Var", "anchor": "ww233599", "usage": "@lagorder", "description": "highest lag order included in the VAR."}, "@logl": {"uri": "varcmd-Var", "anchor": "ww177430", "usage": "@logl", "description": "log likelihood for system."}, "@lrrsp": {"uri": "varcmd-Var", "anchor": "ww177444", "usage": "@lrrsp", "description": "accumulated long-run responses from last impulse response view."}, "@lrrspse": {"uri": "varcmd-Var", "anchor": "ww177445", "usage": "@lrrspse", "description": "standard errors of accumulated long-run responses."}, "@meandep": {"uri": "varcmd-Var", "anchor": "ww177393", "usage": "@meandep(k)", "description": "mean of the dependent variable in equation k ."}, "@name": {"uri": "varcmd-Var", "anchor": "ww186921", "usage": "@name", "description": "returns the VAR\u2019s name."}, "@ncoefs": {"uri": "varcmd-Var", "anchor": "ww177431", "usage": "@ncoefs", "description": "total number of estimated coefficients in the var."}, "@neqn": {"uri": "varcmd-Var", "anchor": "ww177432", "usage": "@neqn", "description": "number of equations."}, "@nrestrict": {"uri": "varcmd-Var", "anchor": "ww252742", "usage": "@nrestrict", "description": "number of coefficient restrictions in the system."}, "@options": {"uri": "varcmd-Var", "anchor": "ww186922", "usage": "@options", "description": "command line form of estimation options."}, "@postresidcov": {"uri": "varcmd-Var", "anchor": "ww271665", "usage": "@postresidcov", "description": "estimated posterior error covariance for Bayesian models; ordinary residual covariance, otherwise."}, "@r2": {"uri": "varcmd-Var", "anchor": "ww177394", "usage": "@r2(k)", "description": "R-squared statistic for equation k ."}, "@rbar2": {"uri": "varcmd-Var", "anchor": "ww177395", "usage": "@rbar2(k)", "description": "adjusted R-squared statistic for equation k ."}, "@regobs": {"uri": "varcmd-Var", "anchor": "ww177433", "usage": "@regobs", "description": "number of observations in the var."}, "@remarks": {"uri": "varcmd-Var", "anchor": "", "description": "Vector autoregression and error correction object."}, "@residcov": {"uri": "varcmd-Var", "anchor": "ww177446", "usage": "@residcov", "description": "(sym) covariance matrix of the residuals."}, "@sc": {"uri": "varcmd-Var", "anchor": "ww177434", "usage": "@sc", "description": "Schwarz information criterion for the system."}, "@sddep": {"uri": "varcmd-Var", "anchor": "ww177396", "usage": "@sddep(k)", "description": "std. dev. of dependent variable in equation k ."}, "@se": {"uri": "varcmd-Var", "anchor": "ww177397", "usage": "@se(k)", "description": "standard error of the regression in equation k ."}, "@smpl": {"uri": "varcmd-Var", "anchor": "ww186923", "usage": "@smpl", "description": "sample used for estimation."}, "@ssr": {"uri": "varcmd-Var", "anchor": "ww177398", "usage": "@ssr(k)", "description": "sum of squared residuals in equation k ."}, "@svaramat": {"uri": "varcmd-Var", "anchor": "ww177447", "usage": "@svaramat", "description": "estimated A matrix for structural factorization (structural VAR only)."}, "@svarbmat": {"uri": "varcmd-Var", "anchor": "ww177448", "usage": "@svarbmat", "description": "estimated B matrix for structural factorization (structural VAR only)."}, "@svarcovab": {"uri": "varcmd-Var", "anchor": "ww236521", "usage": "@svarcovab", "description": "covariance matrix of stacked A and B matrix for structural factorization (structural VAR only)."}, "@svarcvgtype": {"uri": "varcmd-Var", "anchor": "ww177435", "usage": "@svarcvgtype", "description": "integer indicating the convergence type of the structural decomposition estimation (structural VAR only): 0 (convergence achieved), 1 (convergence achieved, but first or second order conditions not met), 2 (failure to improve), 3 (maximum iterations reached), 4 (no convergence\u2014structural decomposition not estimated)."}, "@svarfmat": {"uri": "varcmd-Var", "anchor": "ww236549", "usage": "@svarfmat", "description": "estimated F matrix for long-run impulse responses (structural VAR only)."}, "@svaroverid": {"uri": "varcmd-Var", "anchor": "ww177436", "usage": "@svaroverid", "description": "over-identification LR statistic from structural factorization (structural VAR only)."}, "@svarrcov": {"uri": "varcmd-Var", "anchor": "ww236522", "usage": "@svarrcov", "description": "restricted residual covariance matrix from structural factorization (structural VAR only)."}, "@svarsmat": {"uri": "varcmd-Var", "anchor": "ww236532", "usage": "@svarsmat", "description": "estimated S matrix for short-run impulse responses (structural VAR only)."}, "@swcompanion": {"uri": "varcmd-Var", "anchor": "ww271667", "usage": "@swcompanion(i)", "description": "switching companion matrix for the full set of lag coefficients in regime i (switching VAR only)."}, "@swimpfact": {"uri": "varcmd-Var", "anchor": "ww271670", "usage": "@swimpfact(i)", "description": "switching factorization matrix for regime i used in last impulse response view (switching VAR only)."}, "@swlagcoefs": {"uri": "varcmd-Var", "anchor": "ww271673", "usage": "@swlagcoefs", "description": "switching coefficient matrix containing the full set of horizontally concatenated lag coefficient matrices for regime i (switching VAR only)."}, "@swlagcoefsum": {"uri": "varcmd-Var", "anchor": "ww271677", "usage": "@swlagcoefsum(i)", "description": "sum of the switching lag coefficient matrices for regime i (switching VAR only)."}, "@totalobs": {"uri": "varcmd-Var", "anchor": "ww177437", "usage": "@totalobs", "description": "sum of @eqregobs from each equation (\u201c @regobs*@neqn \u201d)."}, "@type": {"uri": "varcmd-Var", "anchor": "ww186924", "usage": "@type", "description": "returns a string with the object type: \u201cVAR\u201d."}, "@updatetime": {"uri": "varcmd-Var", "anchor": "ww186925", "usage": "@updatetime", "description": "returns a string representation of the time and date at which the VAR was last updated."}, "append": {"uri": "varcmd-append", "anchor": "", "usage": "var_name. append (options) text", "description": "Append a specification line to a var.", "long_description": "Type the text to be added after the append keyword. You must specify the restrictions type option ."}, "arlm": {"uri": "varcmd-arlm", "anchor": "", "usage": "var_name. arlm ( h, options )", "description": "Perform multivariate residual serial correlation LM test using an estimated Var.", "long_description": "You must specify the highest order of lag, h , for which to test."}, "arroots": {"uri": "varcmd-arroots", "anchor": "", "usage": "var_name. arroots (options)", "description": "Inverse roots of the characteristic AR polynomial."}, "btvcvar": {"uri": "varcmd-btvcvar", "anchor": "", "usage": "var_name. btvcvar (options) lag_pairs endog_list [ @ exog_list]", "description": "Estimate a Bayesian time-varying coefficients VAR, or BTVCVAR, model.", "long_description": "btvcvar estimates a Bayesian time-varying coefficients VAR. The order of the VAR is specified using a lag pair, followed by a list of series or groups for endogenous variables. Exogenous variables can be included using the @-sign followed by a list of series or groups. A constant is automatically added to the list of exogenous variables; to estimate a specification without a constant, use the noconst option."}, "bvar": {"uri": "varcmd-bvar", "anchor": "", "description": "Estimate a Bayesian VAR specification."}, "clearhist": {"uri": "varcmd-clearhist", "anchor": "", "usage": "var_name. clearhist", "description": "Clear the contents of the history attribute for VAR objects.", "long_description": "Removes the VAR\u2019s history attribute, as shown in the label view of the VAR."}, "clearremarks": {"uri": "varcmd-clearremarks", "anchor": "", "usage": "var_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the var\u2019s remarks attribute, as shown in the label view of the var."}, "cleartext": {"uri": "varcmd-cleartext", "anchor": "", "usage": "var_name. cleartext (arg)", "description": "Clear restriction text from a VAR object.", "long_description": "You must specify the text type you wish to clear using one of the following arguments:\n\nsvar Clear text of identifying restrictions for a structural VAR. coint Clear text of restrictions on the cointegration relations and/or adjustment coefficients."}, "coint": {"uri": "varcmd-coint", "anchor": "", "usage": "var_name. coint (options) [lag_spec] [ @ x1 x2 x3 ...] [ @exogsr sx1 sx2 sx3 ...] [ @exoglr lx1 lx2 lx3 ...] [ @exogboth bx1 bx2 bx3 ...]", "description": "Johansen\u2019s cointegration test for the series in the var object.", "long_description": "uses the coint keyword followed by options, and optionally,\n\u2022 a lag_spec consisting of one or more pairs of lag intervals, where the lag orders are for the differences in the error correction representation of the VEC, not the levels representation of the VAR.\n\u2022 an \u201c @ \u201d-sign or \u201c@exogsr\u201d followed by a list of exogenous variables in the short-run equation only\n\u2022 \u201c@exoglr\u201d followed by a list of exogenous variables in the long-run relation only\n\u2022 \u201c@exogboth\u201d followed by a list of exogenous variables in both the long-run relation and the short-run equations\nThe coint command tests for cointegration among the series in the var object using the lag spec, exogenous variables, and if relevant, deterministic spec and VEC restrictions specified in estimation.\n\u2022 You may provide explicit lag_spec to override the one used in estimation.\nNote that if the estimation lags were for a VAR specification in levels, the default lag_spec will be the original spec adjusted for the error correction differences. Thus, if the original estimation was for a \u201c1 4\u201d VAR, the default lag_spec will be \u201c1 3\u201d.\n\u2022 You may provide a \u201cdeterm=\u201d option to override an existing VEC deterministic trend specification.\n\u2022 You may explicitly list any type of exogenous variable to override the entire existing specification for the exogenous variables.\nThe output for cointegration tests displays p -values for the rank test statistics. These p -values are computed using the response surface coefficients as estimated in MacKinnon, Haug, and Michelis (1999). The 0.05 critical values are also based on the response surface coefficients from MacKinnon-Haug-Michelis. Note: the reported critical values assume no exogenous variables other than an intercept and trend ."}, "copy": {"uri": "varcmd-copy", "anchor": "", "usage": "var_name. copy\nvar_name. copy dest_name", "description": "Creates a copy of the var.", "long_description": "Creates either a named or unnamed copy of the var."}, "correl": {"uri": "varcmd-correl", "anchor": "", "usage": "var_name. correl (n, options)", "description": "Display autocorrelation and partial correlations.", "long_description": "Displays the autocorrelation and partial correlation functions in the specified form, together with the Q -statistics and p -values associated with each lag.\nYou must specify the largest lag n to use when computing the autocorrelations."}, "decomp": {"uri": "varcmd-decomp", "anchor": "", "usage": "var_name. decomp (n, options) series_list [ @ @ ordering]", "description": "Variance decomposition in VARs.", "long_description": "List the series names in the VAR whose variance decomposition you would like to compute. You may optionally specify the ordering for the factorization after two \u201c@\u201d-signs.\nYou must specify the number of periods [img:../content/images/varcmd.129.13.1.jpg] over which to compute the variance decompositions."}, "display": {"uri": "varcmd-display", "anchor": "", "usage": "var_name. display object_name", "description": "Display table, graph, or spool output in the VAR object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the VAR object."}, "displayname": {"uri": "varcmd-displayname", "anchor": "", "usage": "var_name. displayname display_name", "description": "Display name for a var object.", "long_description": "Attaches a display name to a var object which may be used to label output in place of the standard var object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in var object names."}, "drawcoefs": {"uri": "varcmd-drawcoefs", "anchor": "", "usage": "var_name. drawcoefs (options) matrix_name", "description": "Draw from the posterior coefficient distribution.", "long_description": "Draws samples from the posterior coefficient distribution of a Bayesian VAR and saves the individual draws into a matrix object. Each row of the matrix will contain the vec\u2019d coefficients from a single draw."}, "drawrescov": {"uri": "varcmd-drawrescov", "anchor": "", "usage": "var_name. drawrescov (options) matrix_name", "description": "Draw from the posterior coefficient distribution.", "long_description": "Draws samples from the posterior residual covariance distribution of a Bayesian VAR and saves the individual draws into a matrix object. Each row of the matrix will contain the vec\u2019d form of the covariance matrix from a single draw."}, "ec": {"uri": "varcmd-ec", "anchor": "", "usage": "var_name. ec (options) lag_pairs endog_list [ @ x1 x2 x3 ...] [ @exogsr sx1 sx2 sx3 ...] [ @exoglr lx1 lx2 lx3 ...] [ @exogboth bx1 bx2 bx3 ...]", "description": "Estimate a vector error correction model (VEC).", "long_description": "Specify the order of the VEC by entering lag_pairs consisting of one or more pairs of lag intervals, and then list the series or groups to be used as endogenous variables.\nNote that the lag orders are for the differences in the error correction representation of the VEC, not the levels representation of the VAR. If you are comparing results obtained elsewhere, you should be certain that the specifications for the lag orders are comparable.\nIn addition, you may optionally provide:\n\u2022 an \u201c @ \u201d-sign or \u201c@exogsr\u201d followed by a list of exogenous variables in the short-run equation only\n\u2022 \u201c@exoglr\u201d followed by a list of exogenous variables in the long-run relation only\n\u2022 \u201c@exogboth\u201d followed by a list of exogenous variables in both the long-run relation and the short-run equations\nDo not include an intercept or trend in the VEC specification, these deterministic trend terms should be specified using the \u201cdeterm=\u201d option, as described below."}, "endog": {"uri": "varcmd-endog", "anchor": "", "usage": "var_name. endog (options)", "description": "Displays a spreadsheet or graph view of the endogenous variables."}, "fit": {"uri": "varcmd-fit", "anchor": "", "usage": "var_name. fit (options) f_pattern [se_pattern]", "description": "Computes static forecasts of the VAR or VEC equation.", "long_description": "fit computes the static forecast of variables and all observations in a specified sample. In some settings, you may instruct forecast to compare the forecasted data to actual data, and to compute summary statistics.\nYou should enter a naming suffix for the forecast series and, optionally, a naming suffix for the series containing the standard errors. Standard errors are currently only available for non-Bayesian VARs, and are computed via simulation.\nNot currently available for switching VARs"}, "forecast": {"uri": "varcmd-forecast", "anchor": "", "usage": "var_name. forecast (options) f_pattern [se_pattern]", "description": "Computes ( n -period ahead) dynamic forecasts of the VAR or VEC equation.", "long_description": "forecast computes the forecast for all variables and all observations in a specified sample. In some settings, you may instruct forecast to compare the forecasted data to actual data, and to compute summary statistics.\nYou should enter a naming suffix for the forecast series and, optionally, a naming suffix for the series containing the standard errors. Forecast standard errors are currently only available for non-Bayesian VARs, and are computed via simulation.\nNot currently available for switching VARs"}, "hdecomp": {"uri": "varcmd-hdecomp", "anchor": "", "usage": "var_name. hdecomp ( n, options ) [ser1 ser2 ser3 ...] [ @ component_series [ @ ordering_series]]", "description": "Performs graph of historical decomposition for a standard VAR.", "long_description": "List the series names in the Var you would like to decompose in the order you wish to display the graphs. If you do not specify series, all of the series in the Var will be employed. You may optionally specify the component series by listing the series after an \u201c@\u201d and, if you are using Cholesky weighting for the decomposition, you may change the ordering by listing the order of the series after a second \u201c@\u201d.\nBy default, EViews computes the decomposition of only the stochastic component into all components using the ordering in the Var. You may instead elect to include the baseline in the decomposition."}, "impulse": {"uri": "varcmd-impulse", "anchor": "", "usage": "var_name. impulse ( n, options ) ser1 [ser2 ser3 ...] [ @ shock_series [ @ ordering_series]]", "description": "Display impulse response functions of var object with an estimated VAR or VEC.", "long_description": "You must specify the number of periods [img:../content/images/varcmd.129.23.1.jpg] over which to compute the impulse response functions.\nList the series names in the var whose responses you would like to compute. You may optionally specify the sources of shocks. To specify the shocks, list the series after an \u201c@\u201d. By default, EViews computes the responses to all possible sources of shocks using the ordering in the Var.\nIf you are using impulses from the Cholesky factor, you may change the Cholesky ordering by listing the order of the series after a second \u201c@\u201d."}, "jbera": {"uri": "varcmd-jbera", "anchor": "", "usage": "var_name. jbera (options)", "description": "Multivariate residual normality test.", "long_description": "You must specify a factorization method using the \u201c factor= \u201d option."}, "label": {"uri": "varcmd-label", "anchor": "", "usage": "var_name. label\nvar_name. label (options) [text]", "description": "Display or change the label view of a var object, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the var object label."}, "laglen": {"uri": "varcmd-laglen", "anchor": "", "usage": "var_name. laglen (m, options)", "description": "VAR lag order selection criteria.", "long_description": "You must specify the maximum lag order m for which you wish to test."}, "ls": {"uri": "varcmd-ls", "anchor": "", "usage": "var_name. ls (options) lag_pairs endog_list [ @ exog_list] [ @restrict restrict_list]", "description": "Estimate VAR specification.", "long_description": "ls estimates an unrestricted VAR using equation-by-equation OLS. You must specify the order of the VAR (using one or more pairs of lag intervals), and then provide a list of series or groups to be used as endogenous variables. You may include exogenous variables such as trends and seasonal dummies in the VAR by including an \u201c@-sign\u201d followed by a list of series or groups. A constant is automatically added to the list of exogenous variables; to estimate a specification without a constant, you should use the option \u201cnoconst\u201d.\nThe restrict_list is a comma-separated list of text restrictions in the form described below and in greater detail in \u201cVARs With Linear Constraints\u201d .\nRestriction text expressions use the following \u201c@\u201d keywords to refer to individual coefficient matrix elements:\n\n@l#( r, c ) Element (r, c) of the lag # coefficient matrix. @e#( r ) Element r of the exogenous variable # coefficient vector. @e( X , r ) Element r of the exogenous variable X coefficient vector\nNote that the canonical names (\u201cL#\u201d, \u201cE#\u201d, \u201cE( X )\u201d) that refer to lag matrices and exogenous variable vectors are preceded by \u201c@\u201d to avoid ambiguity.\nFor example, we may have:\n@L1(1,1) = 0\n@L2(2,2) = @L1(3,3) / 2\n@L2(1,1) + @L4(2,1) = 1\n@E(C, 1) = 0\n@E(X, 2) = @E(C, 2)\n@E1(1) + @E1(2) = 1\nIn addition, you may use text expressions to refer to parts of lag coefficient matrices and to impose specialized restrictions,\n\n@vec( W )= [img:../content/images/varcmd.129.27.1.jpg] , [img:../content/images/varcmd.129.27.2.jpg] , [img:../content/images/varcmd.129.27.3.jpg] , ... Restricts all elements of matrix W similar to a pattern matrix. Element ordering matches the vectorization of the matrix, i.e. , the elements of the first column, followed by the second column, followed by the third column, etc. @diag( W ) Restricts W to be a diagonal matrix, i.e. , off-diagonal elements are zero. The diagonal elements are unrestricted. @diag( W ) = n Restricts W to be a diagonal matrix with elements on the diagonal restricted to be n . @lower( W ) Restricts W to be a lower triangular matrix, i.e. , elements above the diagonal are zero. @unitlower( W ) Restricts W to be a unit lower triangular matrix, i.e. , elements above the diagonal are zero and elements on the diagonal are one. @upper( W ) Restricts W to be an upper triangular matrix, i.e. , elements below the diagonal are zero. @unitupper( W ) Restricts W to be a unit upper triangular matrix, i.e. , elements below the diagonal are zero and elements on the diagonal are one. @row( W , r ) = n Restricts the elements in row r of W to be n . @col( W , c ) = n Restricts the elements in column c of W to be n .\nwhere [img:../content/images/varcmd.129.27.4.jpg] is a reference to a canonical matrix name ( e.g. , \u201cL1\u201d, \u201cL3\u201d).\nWhen a \u201c@vec\u201d restriction is included in the restriction list, its own list of values must be enclosed in double quotes, as in\n@vec(W) = \"1, 2, 3, 4\""}, "makecoefs": {"uri": "varcmd-makecoefs", "anchor": "", "usage": "var_name. makecoefs c_est_name c_cis_name", "description": "Creates groups of the coefficient series used to make the BTVCVAR estimation output view.", "long_description": "Creates a series group containing estimates and a series group containing credibility intervals for the coefficients of a BTVCVAR model.\nGroup names can be passed in as arguments. The first argument is the name for the series group containing estimates. The second argument is the name for the series group containing credibility intervals."}, "makecoint": {"uri": "varcmd-makecoint", "anchor": "", "usage": "var_name. makecoint [group_name]", "description": "Create group containing the estimated cointegrating relations from a VEC.", "long_description": "The series contained in the group are given names of the form \u201cCOINTEQ##\u201d , where ## are numbers such that \u201cCOINTEQ##\u201d is the next available unused name.\nIf you provide a name for the group in parentheses after the keyword, EViews will quietly create the named group in the workfile. If you do not provide a name, EViews will open an untitled group window if the command is executed from the command line, otherwise no group will be created.\nThis proc will return an error message unless you have estimated an error correction model using the var object."}, "makeendog": {"uri": "varcmd-makeendog", "anchor": "", "usage": "var_name. makeendog name", "description": "Make a group out of the endogenous series.", "long_description": "Following the keyword makeendog , you should provide a name for the group to hold the endogenous series. If you do not provide a name, EViews will create an untitled group."}, "makeess": {"uri": "varcmd-makeess", "anchor": "", "usage": "var_name. makeess c_ess_name s_ess_name q_ess_name", "description": "Outputs effective sample sizes (ESSs) of the draws of the parameters in a BTVCVAR model.", "long_description": "Generates three matrix objects (one per parameter block) containing ESSs. The ESS for the draws of a parameter is equal to the relative numerical efficiency (RNE) times the posterior sample size. Values near the posterior sample size are desirable. ESSs much smaller than the posterior sample size indicate slow mixing. An NA is returned if sample autocorrelation does not taper off sufficiently quickly (i.e., if sample autocorrelation does not fall below 0.05 in the first 100 lags).\nThe ESS is the number of IID draws that is needed to achieve the same level of numerical precision as the obtained set of MCMC draws. It measures the extent of efficiency loss for using MCMC instead of vanilla Monte Carlo for sample generation.\nThe ESS, inefficiency factor, and relative numerical efficiency (RNE) convey the same information and only differ in interpretation.\nNames for the output matrices can be passed in as arguments. ESS matrix names are entered in the order: coefficients (C), observation covariance (S), then process covariance (Q). Untitled matrices are returned if no names are given."}, "makeif": {"uri": "varcmd-makeif", "anchor": "", "usage": "var_name. makeif c_if_name s_if_name q_if_name", "description": "Outputs inefficiency factors of the draws of the parameters in a BTVCVAR model.", "long_description": "Generates three matrix objects (one per parameter block) containing inefficiency factors. The inefficiency factor of the draws of [img:../content/images/varcmd.129.32.1.jpg] is defined as\n[img:../content/images/varcmd.129.32.2.jpg]\nwhere [img:../content/images/varcmd.129.32.3.jpg] is the sample autocorrelation in the draws of [img:../content/images/varcmd.129.32.4.jpg] at lag [img:../content/images/varcmd.129.32.5.jpg] , and [img:../content/images/varcmd.129.32.6.jpg] is the lag at which the sample autocorrelation tapers off. Values near one are desirable. Inefficiency factors much greater than one indicate slow mixing. An NA is returned if sample autocorrelation does not taper off sufficiently quickly (i.e., if sample autocorrelation does not fall below 0.05 in the first 100 lags).\nThe inefficiency factor can be interpreted as the ratio of the numerical variance of the sample mean computed using MCMC draws and the numerical variance of the sample mean computed using hypothetical IID draws. It measures the extent of efficiency loss for using MCMC instead of vanilla Monte Carlo for sample generation.\nThe inefficiency factor, relative numerical efficiency (RNE), and effective sample size (ESS) convey the same information and only differ in interpretation.\nNames for the output matrices can be passed in as arguments. Inefficiency factor matrix names are entered in the order: coefficients (C), observation covariance (S), then process covariance (Q). Untitled matrices are returned if no names are given."}, "makemodel": {"uri": "varcmd-makemodel", "anchor": "", "usage": "var_name. makemodel (name)", "description": "Make a model from a var object.", "long_description": "If you provide a name for the model in parentheses after the keyword, EViews will create the named model in the workfile. If you do not provide a name, EViews will open an untitled model window if the command is executed from the command line."}, "makeresids": {"uri": "varcmd-makeresids", "anchor": "", "usage": "var_name. makeresids (options) [res1 res2 res3]", "description": "Create residual series.", "long_description": "Creates and saves residuals in the workfile from an estimated VAR.\nFollow the VAR name with a period and the makeresids keyword, then provide a list of names to be given to the stored residuals. You should provide as many names as there are equations. If there are fewer names than equations, EViews creates the extra residual series with names RESID01 , RESID02 , and so on. If you do not provide any names, EViews will also name the residuals RESID01 , RESID02 , and so on."}, "makergmprobs": {"uri": "varcmd-makergmprobs", "anchor": "", "usage": "var_name. makergmprobs (options) series_names", "description": "Save the regime probabilities for switching VAR in series in the workfile.", "long_description": "where var_name is the name of an switching VAR object. The series to be saved should be listed following the command name and options, with one name per regime for one up to the number of estimated regimes."}, "makerne": {"uri": "varcmd-makerne", "anchor": "", "usage": "var_name. makerne c_rne_name s_rne_name q_rne_name", "description": "Outputs relative numerical efficiencies (RNEs) of the draws of the parameters in a BTVCVAR model.", "long_description": "Generates three matrix objects (one per parameter block) containing RNEs. The RNE of the draws of a parameter is the reciprocal of their inefficiency factor. Values near one are desirable. RNEs much smaller than one indicate slow mixing. An NA is returned if sample autocorrelation does not taper off sufficiently quickly (i.e., if sample autocorrelation does not fall below 0.05 in the first 100 lags).\nThe RNE can be interpreted as the ratio of the numerical variance of the sample mean computed using hypothetical IID draws and the numerical variance of the sample mean computed using MCMC draws. It measures the extent of efficiency loss for using MCMC instead of vanilla Monte Carlo for sample generation.\nThe RNE, inefficiency factor, and effective sample size (ESS) convey the same information and only differ in interpretation.\nNames for the output matrices can be passed in as arguments. RNE matrix names are entered in the order: coefficients (C), observation covariance (S), then process covariance (Q). Untitled matrices are returned if no names are given."}, "makesystem": {"uri": "varcmd-makesystem", "anchor": "", "usage": "var_name. makesystem (options)", "description": "Create system from a var.", "long_description": "You may order the equations by series ( default ) or by lags."}, "maketransprobs": {"uri": "varcmd-maketransprobs", "anchor": "", "usage": "var_name. maketransprobs (options) [base_name]\nvar_name. maketransprobs ( out=mat , options) [matrix_name]", "description": "Save the regime transition probabilities and expected durations of switching VAR into the workfile.", "long_description": "where VAR_name is the name of a VAR estimated using switching regression.\n\u2022 In the first form of the command, base_name will be used to generate series names for the series that will hold the transition probabilities or durations. The series names for regime transition probabilities will be of the form base_name ##, where ## are the indices representing elements of the transition matrix [img:../content/images/varcmd.129.38.1.jpg] . The series names for expected durations will be of the form base_name # where # corresponds to the regime index. Thus, in a two-regime model, the base name \u201cTEMP\u201d corresponds to the transition probability series TEMP11, TEMP12, TEMP21, TEMP22, and the expected duration series TEMP1, TEMP2.\nIf base_name is not provided, EViews will use the default of \u201cTPROB\u201d\n\u2022 When the option \u201coutput=mat\u201d is provided, the matrix_name is the name of the output matrix that will hold the transition probabilities or durations.\nIf matrix_name are not provided, EViews will default to \u201cTPROB\u201d or the next available name of the form \u201cTPROB##\u201d.\nEViews will evaluate the transition probabilities or durations at the date specified by the \u201cobs=\u201d option. If no observation is specified, EViews will use the first date of the estimation sample to evaluate the transition probabilities. Note that if the transition probabilities are time-invariant, setting the observation will have no effect on the contents of the saved results."}, "mfvar": {"uri": "varcmd-mfvar", "anchor": "", "description": "Estimate a mixed frequency VAR specification."}, "olepush": {"uri": "varcmd-olepush", "anchor": "", "usage": "var_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "output": {"uri": "varcmd-output", "anchor": "", "usage": "var_name. output", "description": "Display estimation output.", "long_description": "output changes the default object view to display the estimation output (equivalent to using Var::results )."}, "postdraws": {"uri": "varcmd-postdraws", "anchor": "", "usage": "var_name. postdraws page_name", "description": "Puts posterior draws of a BTVCVAR model in a new page.", "long_description": "Creates a copy of a posterior sample and pastes it into a new page. A series represents draws for a particular parameter. EViews will prompt you to run the posterior sampler if draws are not available."}, "postresidcov": {"uri": "varcmd-postresidcov", "anchor": "", "usage": "var_name. postresidcov ( options )", "description": "Posterior residual covariance matrix."}, "qstats": {"uri": "varcmd-qstats", "anchor": "", "usage": "var_name. qstats (h, options)", "description": "Multivariate residual autocorrelation Portmanteau tests.", "long_description": "You must specify the highest order of lag h to test for serial correlation. h must be larger than the VAR lag order."}, "representations": {"uri": "varcmd-representations", "anchor": "", "usage": "var_name. representation (options)", "description": "Display text of specification for var objects."}, "residcor": {"uri": "varcmd-residcor", "anchor": "", "usage": "var_name. residcor (options)", "description": "Residual correlation matrix.", "long_description": "Displays the correlations of the residuals from each equation in the var object.\nNote that for Bayesian VARs, this command will display the empirical residual correlation\u2014the correlation of the residuals calculated from the posterior means of the coefficients."}, "residcov": {"uri": "varcmd-residcov", "anchor": "", "usage": "var_name. residcov (options)", "description": "Residual covariance matrix.", "long_description": "Displays the covariances of the residuals from each equation in the var object.\nNote that for Bayesian VARs, this command will display the empirical residual covariance\u2014the covariance of the residuals calculated from the posterior means of the coefficients."}, "resids": {"uri": "varcmd-resids", "anchor": "", "usage": "var_name. resids (options)", "description": "Display residuals.", "long_description": "resids displays multiple graphs of the residuals. Each graph will contain the residuals for an equation in the VAR."}, "results": {"uri": "varcmd-results", "anchor": "", "usage": "var_name. results (options)", "description": "Displays the results view of an estimated VAR."}, "rgmprobs": {"uri": "varcmd-rgmprobs", "anchor": "", "usage": "var_name. rgmprobs (options) [indices]", "description": "Display regime probabilities for a switching VAR.", "long_description": "where var_name is the name of a switching VAR object. The elements to display are given by the optional indices corresponding to the regimes ( e.g. , \u201c1 2 3\u201d or \u201c2 3\u201d). If indices is not provided, results for all of the regimes will be displayed."}, "setattr": {"uri": "varcmd-setattr", "anchor": "", "usage": "var_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "svar": {"uri": "varcmd-svar", "anchor": "", "usage": "var_name. svar ( options )", "description": "Estimate factorization matrix for structural innovations.", "long_description": "The var object must previously have been estimated in unrestricted form.\nYou must specify the identifying restrictions either in text form by the append proc or by a pattern matrix option. See \u201cSpecifying SVAR Restrictions in EViews\u201d for details on specifying restrictions."}, "switchvar": {"uri": "varcmd-switchvar", "anchor": "", "description": "Estimate a switching VAR specification."}, "testexog": {"uri": "varcmd-testexog", "anchor": "", "usage": "var_name. testexog (options)", "description": "Perform exogeneity (Granger causality) tests on a VAR."}, "testlags": {"uri": "varcmd-testlags", "anchor": "", "usage": "var_name. testlags (options)", "description": "Perform lag exclusion (Wald) tests on a VAR."}, "transprobs": {"uri": "varcmd-transprobs", "anchor": "", "usage": "var_name. transprobs (options)", "description": "Display regime transition probabilities and expected durations for a switching VAR.", "long_description": "where equation_name is the name of an equation estimated using switching regression."}, "white": {"uri": "varcmd-white", "anchor": "", "usage": "var_name. white (options)", "description": "Performs White\u2019s test for heteroskedasticity of residuals.", "long_description": "Carries out White\u2019s multivariate test for heteroskedasticity of the residuals of the specified Var object. By default, the test is computed without the cross-product terms (using only the terms involving the original variables and squares of the original variables). You may elect to compute the original form of the White test that includes the cross-products."}}, "Coef": {"[Coef]": {"uri": "coefcmd-Coef", "anchor": "", "description": "Coefficient vector. Coefficients are used to represent the parameters of equations and systems."}, "@attr": {"uri": "coefcmd-Coef", "anchor": "ww207605", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@collabels": {"uri": "coefcmd-Coef", "anchor": "", "description": "Coefficient vector. Coefficients are used to represent the parameters of equations and systems."}, "@description": {"uri": "coefcmd-Coef", "anchor": "ww189469", "usage": "@description", "description": "string containing the Coef object\u2019s description (if available)."}, "@detailedtype": {"uri": "coefcmd-Coef", "anchor": "ww201155", "usage": "@detailedtype", "description": "string describing the object type: \u201cCOEF\u201d."}, "@displayname": {"uri": "coefcmd-Coef", "anchor": "ww189470", "usage": "@displayname", "description": "string containing the Coef object\u2019s display name. If the Coef has no display name set, the name is returned."}, "@droprow": {"uri": "coefcmd-Coef", "anchor": "ww238457", "usage": "@droprow( arg )", "description": "Returns the Coef with the rows defined by arg removed. arg may be an integer, vector of integers, string, or svector of strings. Integer values correspond to rows and string values correspond to previously defined row labels."}, "@name": {"uri": "coefcmd-Coef", "anchor": "ww189471", "usage": "@name", "description": "string containing the Coef object\u2019s name."}, "@remarks": {"uri": "coefcmd-Coef", "anchor": "ww189472", "usage": "@remarks", "description": "string containing the Coef object\u2019s remarks (if available)."}, "@row": {"uri": "coefcmd-Coef", "anchor": "ww238484", "usage": "@row( arg )", "description": "Returns the rows defined by arg . arg may be an integer, vector of integers, string, or svector of strings. Integer values correspond to rows and string values correspond to previously defined row labels."}, "@rowlabels": {"uri": "coefcmd-Coef", "anchor": "", "description": "Coefficient vector. Coefficients are used to represent the parameters of equations and systems."}, "@rows": {"uri": "coefcmd-Coef", "anchor": "", "description": "Coefficient vector. Coefficients are used to represent the parameters of equations and systems."}, "@type": {"uri": "coefcmd-Coef", "anchor": "ww189473", "usage": "@type", "description": "string describing the object type: \u201cCOEF\u201d."}, "@updatetime": {"uri": "coefcmd-Coef", "anchor": "ww189475", "usage": "@updatetime", "description": "string representation of the time and date at which the Coef was last updated."}, "area": {"uri": "graphmaster-area", "anchor": "", "usage": "area (options) o1 [o2 o3 ... ]\nobject_name. area (options) [categorical_spec(arg)]", "description": "Display an area graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the area keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "bar": {"uri": "graphmaster-bar", "anchor": "", "usage": "bar (options) o1 [o2 o3 ... ]\nobject_name. bar (options) [categorical_spec(arg)]", "description": "Display a bar graph.", "long_description": "(Note: when the individual bars in a bar graph become too thin to be distinguished, the graph will automatically be converted into an area graph; see area .)\nwhere o1 , o2 , ..., are series or group objects. Following the bar keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "boxplot": {"uri": "graphmaster-boxplot", "anchor": "", "usage": "boxplot (options) o1 [o2 o3 ... ]\nobject_name. boxplot (options) [categorical_spec(arg)]", "description": "Display boxplots for each series or column.", "long_description": "where o1 , o2 , ..., are series or group objects. You may specify general options after the boxplot keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "clearcollabels": {"uri": "coefcmd-clearcollabels", "anchor": "", "usage": "coef_name. clearcollabels", "description": "Clear the column label in a coef object."}, "clearhist": {"uri": "coefcmd-clearhist", "anchor": "", "usage": "coef_name. clearhist", "description": "Clear the contents of the history attribute.", "long_description": "Removes the coef\u2019s history attribute, as shown in the label view of the coef."}, "clearremarks": {"uri": "coefcmd-clearremarks", "anchor": "", "usage": "coef_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the coef\u2019s remarks attribute, as shown in the label view of the coef."}, "clearrowlabels": {"uri": "coefcmd-clearrowlabels", "anchor": "", "usage": "coef_name. clearrowlabels", "description": "Clear the row labels in a coef object."}, "copy": {"uri": "coefcmd-copy", "anchor": "", "usage": "coef_name. copy\ncoef_name. copy dest_name", "description": "Creates a copy of the coef.", "long_description": "Creates either a named or unnamed copy of the coef."}, "display": {"uri": "coefcmd-display", "anchor": "", "usage": "coef_name. display object_name", "description": "Display table, graph, or spool output in the coef object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the coef object."}, "displayname": {"uri": "coefcmd-displayname", "anchor": "", "usage": "coef_name. displayname display_name", "description": "Display name for a coefficient vector.", "long_description": "Attaches a display name to a coef object which may be used to label output in tables and graphs in place of the standard coef object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in coef object names."}, "distplot": {"uri": "graphmaster-distplot", "anchor": "", "usage": "distplot (options) o1 [o2 o3 ... ]\nobject_name. distplot (options) analytical_spec ( arg ) [categorical_spec(arg)]", "description": "Display a distribution graph.", "long_description": "where o1 , o2 , ..., are series or group objects.\nWhen used as a command, distplot only allows you to display the default histogram view.\nWhen used as an object view, you must specify the type of distribution graph you wish to create in the analytical_spec . You may select from: histogram, histogram polygon, histogram edge polygon, average shifted histogram, kernel density, theoretical distribution, empirical CDF, empirical survivor, empirical log survivor, or empirical quantile (see \u201cAnalytical Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )"}, "dot": {"uri": "graphmaster-dot", "anchor": "", "usage": "dot (options) o1 [o2 o3 ... ]\nobject_name. dot (options) [categorical_spec(arg)]", "description": "Display a dot plot graph view.", "long_description": "A dot plot is a symbol only version of the line and symbol graph that uses circles to represent the value of each observation.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the dot keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "errbar": {"uri": "graphmaster-errbar", "anchor": "", "usage": "errbar (options) o1 o2 [o3 ...]\nobject_name. errbar (options)", "description": "Display an error bar graph view (if possible).", "long_description": "If there are two series or columns, the error bar will show the high and low values in the bar. The optional third series or column will be plotted as a symbol.\nwhere o1 , o2 , ..., are series or group objects."}, "export": {"uri": "coefcmd-export", "anchor": "", "usage": "coef_name. export (options) [path\\]file_name\ncoef_name. export ( options ) [path\\]file_name [table_description]", "description": "Export coef vector to disk as an Excel 2007 XLSX, CSV, tab-delimited ASCII text, RTF, HTML, Enhanced Metafile, LaTeX, PDF, or Markdown file.", "long_description": "Follow the keyword with a name for the file. file_name may include the file type extension, or the file type may be specified using the \u201ct=\u201d option.\nIf an explicit path is not specified, the file will be stored in the default directory set in the File Locations global options.\nThe base syntax for writing Excel 2007 files is:\nwhere table_description contains:\n\u2022 \u201crange = arg \u201d, where arg is top left cell of the destination Excel workbook, following the standard Excel format [worksheet!][topleft_cell[:bottomright_cell]] .\nIf the worksheet name contains spaces, it should be placed in single quotes. If the worksheet name is omitted, the cell range is assumed to refer to the currently active sheet. If only a top left cell is provided, a bottom right cell will be chosen automatically to cover the range of non-empty cells adjacent to the specified top left cell. If only a sheet name is provided, the first set of non-empty cells in the top left corner of the chosen worksheet will be selected automatically. As an alternative to specifying an explicit range, a name defined inside the Excel workbook to refer to a range or cell may specify the cells to read."}, "fill": {"uri": "coefcmd-fill", "anchor": "", "usage": "coef_name. fill (options) n1[, n2, n3 \u2026]", "description": "Fill a coef object with specified values.", "long_description": "Follow the keyword with a list of values to place in the specified object. Each value should be separated by a comma .\nRunning out of values before the coef vector is completely filled is not an error; the remaining cells or observations will not be modified unless the \u201cl\u201d option is specified. However, if you list more values than the coef vector can hold, EViews will not modify any observations and will return an error message."}, "hilo": {"uri": "graphmaster-hilo", "anchor": "", "usage": "hilo (options) o1 o2 [o3 ...]\nobject_name. hilo (options)", "description": "Display a high-low[-open-close] graph view (if possible).", "long_description": "where o1 , o2 , ..., are series or group objects. For a high-low[-open-close] graph, EViews uses the first series or column as the high series, the second series or column as the low series, and an optional third series or column as the close series. If four series or columns are provided, EViews will use them in the following order: high-low-open-close.\nNote that if you wish to display a high-low-open graph, you should use an \u201cNA\u201d-series for the close values."}, "import": {"uri": "coefcmd-import", "anchor": "", "usage": "coef_name. import ([type=]) source_description import_specification\ncoef_name. import(type=excel [xml] ) source_description [table_description] [variables_description]\ncoef_name. import(type=html) source_description [table_description] [variables_description]\ncoef_name .import(type =arg ) source_description [table_description] [variables_description]", "description": "Imports data from a foreign file into the coef object.", "long_description": "\u2022 source_description should contain a description of the file from which the data is to be imported. The specification of the description is usually just the path and file name of the file, however you can also specify more precise information. See wfopen for more details on the specification of source_description .\n\u2022 The optional \u201ctype=\u201d option may be used to specify a source type. For the most part, you should not need to specify a \u201ctype=\u201d option as EViews will automatically determine the type from the filename. The following table summaries the various source formats and along with the corresponding \u201ctype=\u201d keywords:\n\nOption Keywords Excel (through 2003) \u201cexcel\u201d Excel 2007 (xml) \u201cexcelxml\u201d HTML \u201chtml\u201d Text / ASCII \u201ctext\u201d\n\n\u2022 import_specification can be used to provide additional information about the file to be read. The details of import_specification will depend upon the type of file being imported.\nExcel Files\nThe syntax for reading Excel files is:\nThe following table_description elements may be used when reading Excel data:\n\u2022 \u201crange = arg \u201d, where arg is a range of cells to read from the Excel workbook, following the standard Excel format [worksheet ! ][topleft_cell[:bottomright_cell]] .\nIf the worksheet name contains spaces, it should be placed in single quotes. If the worksheet name is omitted, the cell range is assumed to refer to the currently active sheet. If only a top left cell is provided, a bottom right cell will be chosen automatically to cover the range of non-empty cells adjacent to the specified top left cell. If only a sheet name is provided, the first set of non-empty cells in the top left corner of the chosen worksheet will be selected automatically. As an alternative to specifying an explicit range, a name which has been defined inside the excel workbook to refer to a range or cell may be used to specify the cells to read.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to read files where the series are contained in rows (one row per series) rather than columns.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file).\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nExcel Examples\ncoef_obj.import \"c:\\data files\\data.xls\"\nloads the active sheet of \u201cdata.XLSX\u201d into the VEC_NAME vector object.\ncoef_obj.import \"c:\\data files\\data.xls\" range=\"GDP data\"\nreads the data contained in the \u201cGDP data\u201d sheet of \u201cdata.XLS\u201d into the COEF_OBJ object.\n\nHTML Files\nThe syntax for reading HTML pages is:\nThe following table_description elements may be used when reading an HTML file or page:\n\u2022 \u201ctable = arg \u201d, where arg specifies which HTML table to read in an HTML file/page containing multiple tables.\nWhen specifying arg, you should remember that tables are named automatically following the pattern \u201cTable01\u201d, \u201cTable02\u201d, \u201cTable03\u201d, etc . If no table name is specified, the largest table found in the file will be chosen by default. Note that the table numbering may include trivial tables that are part of the HTML content of the file, but would not normally be considered as data tables by a person viewing the page.\n\u2022 \u201cskip = int \u201d, where int is the number of rows to discard from the top of the HTML table.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to import files where the series are contained in rows (one row per series) rather than columns.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file).\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the table of data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the table of data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nHTML Examples\ncoef_obj.import \"c:\\data.html\"\nloads into the COEF_OBJ the data located in the HTML file \u201cData.HTML\u201d located on the C:\\ drive\ncoef_obj.import(type=html) \"http://www.tradingroom.com.au/apps/mkt/forex.ac\" colhead=3\nloads into a coef object called COEF_OBJ the data with the given URL located on the website site \u201chttp://www.tradingroom.com.au\u201d. The column header is set to three rows.\nText and Binary Files\nThe syntax for reading text or binary files is:\nIf a table_description is not provided, EViews will attempt to read the file as a free-format text file. The following table_description elements may be used when reading a text or binary file:\n\u2022 \u201cftype = [ascii|binary]\u201d specifies whether numbers and dates in the file are stored in a human readable text (ASCII), or machine readable (Binary) form.\n\u2022 \u201crectype = [crlf|fixed|streamed]\u201d describes the record structure of the file:\n\u201ccrlf\u201d, each row in the output table is formed using a fixed number of lines from the file (where lines are separated by carriage return/line feed sequences). This is the default setting.\n\u201cfixed\u201d, each row in the output table is formed using a fixed number of characters from the file (specified in \u201creclen= arg \u201d). This setting is typically used for files that contain no line breaks.\n\u201cstreamed\u201d, each row in the output table is formed by reading a fixed number of fields, skipping across lines if necessary. This option is typically used for files that contain line breaks, but where the line breaks are not relevant to how rows from the data should be formed.\n\u2022 \u201creclines = int \u201d, number of lines to use in forming each row when \u201crectype=crlf\u201d (default is 1).\n\u2022 \u201creclen= int \u201d, number of bytes to use in forming each row when \u201crectype=fixed\u201d.\n\u2022 \u201crecfields= int \u201d, number of fields to use in forming each row when \u201crectype=streamed\u201d.\n\u2022 \u201cskip= int \u201d, number of lines (if rectype is \u201ccrlf\u201d) or bytes (if rectype is not \u201ccrlf\u201d) to discard from the top of the file.\n\u2022 \u201ccomment= string \u201c, where string is a double-quoted string, specifies one or more characters to treat as a comment indicator. When a comment indicator is found, everything on the line to the right of where the comment indicator starts is ignored.\n\u2022 \u201cemptylines=[keep|drop]\u201d, specifies whether empty lines should be ignored (\u201cdrop\u201d), or treated as valid lines (\u201ckeep\u201d) containing missing values. The default is to ignore empty lines.\n\u2022 \u201ctabwidth= int \u201d, specifies the number of characters between tab stops when tabs are being replaced by spaces (default=8). Note that tabs are automatically replaced by spaces whenever they are not being treated as a field delimiter.\n\u2022 \u201cfieldtype=[delim|fixed|streamed|undivided]\u201d, specifies the structure of fields within a record:\n\u201cDelim\u201d, fields are separated by one or more delimiter characters\n\u201cFixed\u201d, each field is a fixed number of characters\n\u201cStreamed\u201d, fields are read from left to right, with each field starting immediately after the previous field ends.\n\u201cUndivided\u201d, read entire record as a single series.\n\u2022 \u201cquotes=[single|double|both|none]\u201d, specifies the character used for quoting fields, where \u201csingle\u201d is the apostrophe, \u201cdouble\u201d is the double quote character, and \u201cboth\u201d means that either single or double quotes are allowed (default is \u201cboth\u201d). Characters contained within quotes are never treated as delimiters.\n\u2022 \u201csinglequote\u201c, same as \u201cquotes = single\u201d.\n\u2022 \u201cdelim=[comma|tab|space|dblspace|white|dblwhite]\u201d, specifies the character(s) to treat as a delimiter. \u201cWhite\u201d means that either a tab or a space is a valid delimiter. You may also use the abbreviation \u201cd=\u201d in place of \u201cdelim=\u201d.\n\u2022 \u201ccustom=\" arg1 \"\u201d, specifies custom delimiter characters in the double quoted string. Use the character \u201ct\u201d for tab, \u201cs\u201d for space and \u201ca\u201d for any character.\n\u2022 \u201cmult=[on|off]\u201d, to treat multiple delimiters as one. Default value is \u201con\u201d if \u201cdelim\u201d is \u201cspace\u201d, \u201cdblspace\u201d, \u201cwhite\u201d, or \u201cdblwhite\u201d, and \u201coff\u201d otherwise.\n\u2022 \u201cendian = [big|little]\u201d, selects the endianness of numeric fields contained in binary files.\n\u2022 \u201cstring = [nullterm|nullpad|spacepad]\u201d, specifies how strings are stored in binary files. If \u201cnullterm\u201d, strings shorter than the field width are terminated with a single zero character. If \u201cnullpad\u201d, strings shorter than the field width are followed by extra zero characters up to the field width. If \u201cspacepad\u201d, strings shorter than the field width are followed by extra space characters up to the field width.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to import files where the series are contained in rows (one row per series) rather than columns.\n\u2022 \u201clastcol\u201d, include implied last column. For lines that end with a delimiter, this option adds an additional column. When importing a CSV file, lines which have the delimiter as the last character (for example: \u201cname, description, date\u201d), EViews normally determines the line to have 3 columns. With the above option, EViews will determine the line to have 4 columns. Note this is not the same as a line containing \u201cname, description, date\u201d. In this case, EViews will always determine the line to have 3 columns regardless if the option is set.\nA central component of the table_description element is the format statement. You may specify the data format using the following table descriptors:\n\u2022 Fortran Format:\nfformat=( [n1]Type[Width][.Precision] , [n2]Type[Width][.Precision] , ...)\nwhere Type specifies the underlying data type, and may be one of the following,\nI - integer\nF - fixed precision\nE - scientific\nA - alphanumeric\nX - skip\nand n1 , n2 , ... are the number of times to read using the descriptor ( default =1). More complicated Fortran compatible variations on this format are possible.\n\u2022 Column Range Format:\nrformat=\" [n1]Type[Width][.Precision] , [n2]Type[Width][.Precision] , ...)\"\nwhere optional type is \u201c$\u201d for string or \u201c#\u201d for number, and n1 , n2 , n3 , n4 , etc . are the range of columns containing the data.\n\u2022 C printf/scanf Format:\ncformat=\" fmt \"\nwhere fmt follows standard C language (printf/scanf) format rules.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file).\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the table of data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the table of data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nText and Binary File Examples (.txt, .csv, etc.)\ncoef_obj.import c:\\data.csv skip=5\nreads \u201cData.CSV\u201d into a coef_obj , skipping the first 5 rows.\ncoef_obj.import(type=text) c:\\date.txt delim=comma\nloads the comma delimited data \u201cDate.TXT\u201d into the COEF_OBJ matrix object.\nCross-references\nSee also Coef::read ."}, "label": {"uri": "coefcmd-label", "anchor": "", "usage": "coef_name. label\ncoef_name. label (options) text", "description": "Display or change the label view of the coefficient vector, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the coef object label."}, "line": {"uri": "graphmaster-line", "anchor": "", "usage": "line (options) o1 [o2 o3 ... ]\nobject_name. line (options) [categorical_spec(arg)]", "description": "Display a line graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the line keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "olepush": {"uri": "coefcmd-olepush", "anchor": "", "usage": "coef_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "pie": {"uri": "graphmaster-pie", "anchor": "", "usage": "pie (options) o1 o2 [o3 ... ]\nobject_name. pie (options) [categorical_spec(arg)]", "description": "Display a pie chart view.", "long_description": "In the default setting, there will be one pie for each date or observation number. Each series or column of data is shown as a wedge in a different color/pattern, where the width of the wedge equals the percentage contribution of the series or column to the total of all listed series or columns. Negative and missing values are treated as zeros.\nwhere o1 , o2 , ..., are series or group objects. You may specify general graph characteristics by including options following the pie keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "read": {"uri": "coefcmd-read", "anchor": "", "usage": "coef_name. read (options) [path \\] file_name", "description": "Import data from a foreign disk file into a coefficient vector.", "long_description": "May be used to import data into an existing workfile from a text, Excel, or Lotus file on disk.\nYou must supply the name of the source file. If you do not include the optional path specification, EViews will look for the file in the default directory. Path specifications may point to local or network drives. If the path specification contains a space, you should enclose the entire expression in double quotation marks."}, "resize": {"uri": "coefcmd-resize", "anchor": "", "usage": "coef_name. resize rows", "description": "Resize the coef object."}, "setattr": {"uri": "coefcmd-setattr", "anchor": "", "usage": "coef_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "setcollabels": {"uri": "coefcmd-setcollabels", "anchor": "", "usage": "coef_name. setcollabels label", "description": "Set the column label in a coef object.", "long_description": "Follow the keyword with the column label. Note that the column label should not contain spaces unless it is enclosed in quotes."}, "setformat": {"uri": "coefcmd-setformat", "anchor": "", "usage": "coef_name. setformat format_arg", "description": "Set the display format for cells in coefficient vector spreadsheet views.", "long_description": "where format_arg is a set of arguments used to specify format settings. If necessary, you should enclose the format_arg in double quotes.\nFor coefficient vectors, setformat operates on all of the cells in the vector.\nYou should use one of the following format specifications:\n\ng [.precision] significant digits f [.precision] fixed decimal places c [.precision] fixed characters e [.precision] scientific/float p [.precision] percentage r [.precision] fraction\nTo specify a format that groups digits into thousands using a comma separator, place a \u201ct\u201d after the format character. For example, to obtain a fixed number of decimal places with commas used to separate thousands, use \u201cft [.precision] \u201d.\nTo use the period character to separate thousands and commas to denote decimal places, use \u201c..\u201d (two periods) when specifying the precision. For example, to obtain a fixed number of characters with a period used to separate thousands, use \u201cct [..precision] \u201d.\nIf you wish to display negative numbers surrounded by parentheses ( i.e. , display the number -37.2 as \u201c(37.2)\u201d), you should enclose the format string in \u201c()\u201d ( e.g. , \u201cf(.8)\u201d)."}, "setindent": {"uri": "coefcmd-setindent", "anchor": "", "usage": "coef_name. setindent indent_arg", "description": "Set the display indentation for cells in coefficient vector spreadsheet views.", "long_description": "where indent_arg is an indent value specified in 1/5 of a width unit. The width unit is computed from representative characters in the default font for the current spreadsheet (the EViews spreadsheet default font at the time the spreadsheet was created), and corresponds roughly to a single character. Indentation is only relevant for non-center justified cells.\nThe default indentation setttings are taken from the Global Defaults for spreadsheet views ( \u201cSpreadsheet Data Display\u201d ) at the time the spreadsheet was created."}, "setjust": {"uri": "coefcmd-setjust", "anchor": "", "usage": "coef_name. setjust format_arg", "description": "Set the horizontal justification for all cells in the spreadsheet view of the coef object.", "long_description": "where format_arg may be set to left, center, right, or auto (strings are left-justified and numbers are right-justified). Default display settings can be set in General Options; see \u201cSpreadsheet Data Display\u201d ."}, "setrowlabels": {"uri": "coefcmd-setrowlabels", "anchor": "", "usage": "coef_name. setrowlabels label1 label2 label3...", "description": "Set the row labels in a coef object.", "long_description": "Follow the keyword with a space delimited list of row labels. Note that each row label should not contain spaces unless it is enclosed in quotes. If you provide fewer labels than there are rows, EViews will keep the corresponding default row names (\u201dR11\u201d, \u201cR12\u201d, etc\u2026)."}, "setwidth": {"uri": "coefcmd-setwidth", "anchor": "", "usage": "coef_name. setwidth width_arg", "description": "Set the column width in a coefficient object spreadsheet view.", "long_description": "where width_arg specifies the width unit value. The width unit is computed from representative characters in the default font for the current spreadsheet (the EViews spreadsheet default font at the time the spreadsheet was created), and corresponds roughly to a single character. width_arg values may be non-integer values with resolution up to 1/10 of a width unit."}, "sheet": {"uri": "coefcmd-sheet", "anchor": "", "usage": "coef_name. sheet (options)", "description": "Spreadsheet view of a coefficient vector."}, "showlabels": {"uri": "coefcmd-showlabels", "anchor": "", "usage": "coef_name. showlabels mode", "description": "Displays the custom row and column labels of a coef spreadsheet.", "long_description": "where mode is either 0 or 1 where 0 displays the default row and column labels and 1 displays the custom row and column labels (if present)."}, "spike": {"uri": "graphmaster-spike", "anchor": "", "usage": "spike (options) o1 [o2 o3 ... ]\nobject_name. spike (options) [categorical_spec(arg)]", "description": "Display a spike graph view.", "long_description": "where o1 , o2 , ..., are series or group objects.\nFollowing the spike keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "stats": {"uri": "coefcmd-stats", "anchor": "", "usage": "coef_name. stats (options)", "description": "Descriptive statistics.", "long_description": "Computes and displays a table of means, medians, maximum and minimum values, standard deviations, and other descriptive statistics for the data in the coef object."}, "write": {"uri": "coefcmd-write", "anchor": "", "usage": "coef_name. write (options) [path\\filename]", "description": "Write EViews data to a text (ASCII), Excel, or Lotus file on disk.", "long_description": "Creates a foreign format disk file containing data in a coefficient vector object. May be used to export EViews data to another program.\nThis routine should realistically only be used in the oft-hand chance that you wish to write into a Lotus file. Improved Excel, text, and other format writing is available in Coef::export .\nFollow the name of the coef object by a period, the keyword, and the name for the output file. The optional path name may be on the local machine, or may point to a network drive. If the path name contains spaces, enclose the entire expression in double quotation marks. The entire coef will be exported.\nNote that EViews cannot, at present, write into an existing file. The file that you select will, if it exists, be replaced."}}, "Vector": {"[Vector]": {"uri": "vectorcmd-Vector", "anchor": "", "description": "Vector. (One dimensional array of numbers)."}, "@attr": {"uri": "vectorcmd-Vector", "anchor": "ww205717", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@collabels": {"uri": "vectorcmd-Vector", "anchor": "ww220287", "usage": "@collabels", "description": "string containing the column label of the vector."}, "@description": {"uri": "vectorcmd-Vector", "anchor": "ww220289", "usage": "@description", "description": "string containing the Vector object\u2019s description (if available)."}, "@detailedtype": {"uri": "vectorcmd-Vector", "anchor": "ww199406", "usage": "@detailedtype", "description": "string with the object type: \u201cVECTOR\u201d."}, "@displayname": {"uri": "vectorcmd-Vector", "anchor": "ww185437", "usage": "@displayname", "description": "string containing the Vector object\u2019s display name. If the Vector has no display name set, the name is returned."}, "@droprow": {"uri": "vectorcmd-Vector", "anchor": "ww205855", "usage": "@droprow( arg )", "description": "Returns the vector with the rows defined by arg removed. arg may be an integer, vector of integers, string, or svector of strings. Integers correspond to row numbers so that, for example, arg = 2 specifies the second row. Strings correspond to row labels so that arg = \"2\" specifies the first row labeled \u201c2\u201d."}, "@name": {"uri": "vectorcmd-Vector", "anchor": "ww185438", "usage": "@name", "description": "string containing the Vector object\u2019s name."}, "@remarks": {"uri": "vectorcmd-Vector", "anchor": "ww185439", "usage": "@remarks", "description": "string containing the Vector object\u2019s remarks (if available)."}, "@row": {"uri": "vectorcmd-Vector", "anchor": "ww237898", "usage": "@row( arg )", "description": "Returns the rows defined by arg . arg may be an integer, vector of integers, string, or svector of strings. Integers correspond to row numbers so that, for example, arg = 2 specifies the second row. Strings correspond to row labels so that arg = \"2\" specifies the first row labeled \u201c2\u201d."}, "@rowlabels": {"uri": "vectorcmd-Vector", "anchor": "ww220402", "usage": "@rowlabels", "description": "string containing the row labels of the vector."}, "@rows": {"uri": "vectorcmd-Vector", "anchor": "ww205826", "usage": "@rows", "description": "number of rows in the svector."}, "@t": {"uri": "vectorcmd-Vector", "anchor": "ww237837", "usage": "@t", "description": "Returns transpose."}, "@type": {"uri": "vectorcmd-Vector", "anchor": "ww185441", "usage": "@type", "description": "string with the object type: \u201cVECTOR\u201d."}, "@updatetime": {"uri": "vectorcmd-Vector", "anchor": "ww185443", "usage": "@updatetime", "description": "string representation of the time and date at which the Vector was last updated."}, "area": {"uri": "graphmaster-area", "anchor": "", "usage": "area (options) o1 [o2 o3 ... ]\nobject_name. area (options) [categorical_spec(arg)]", "description": "Display an area graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the area keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "bar": {"uri": "graphmaster-bar", "anchor": "", "usage": "bar (options) o1 [o2 o3 ... ]\nobject_name. bar (options) [categorical_spec(arg)]", "description": "Display a bar graph.", "long_description": "(Note: when the individual bars in a bar graph become too thin to be distinguished, the graph will automatically be converted into an area graph; see area .)\nwhere o1 , o2 , ..., are series or group objects. Following the bar keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "boxplot": {"uri": "graphmaster-boxplot", "anchor": "", "usage": "boxplot (options) o1 [o2 o3 ... ]\nobject_name. boxplot (options) [categorical_spec(arg)]", "description": "Display boxplots for each series or column.", "long_description": "where o1 , o2 , ..., are series or group objects. You may specify general options after the boxplot keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "clearcollabels": {"uri": "vectorcmd-clearcollabels", "anchor": "", "usage": "vector_name. clearcollabels", "description": "Clear the column label in a vector object."}, "clearhist": {"uri": "vectorcmd-clearhist", "anchor": "", "usage": "vector_name. clearhist", "description": "Clear the contents of the history attribute for vector objects.", "long_description": "Removes the vector\u2019s history attribute, as shown in the label view of the vector."}, "clearremarks": {"uri": "vectorcmd-clearremarks", "anchor": "", "usage": "vector_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the vector\u2019s remarks attribute, as shown in the label view of the vector."}, "clearrowlabels": {"uri": "vectorcmd-clearrowlabels", "anchor": "", "usage": "vector_name. clearrowlabels", "description": "Clear the row labels in a vector object."}, "copy": {"uri": "vectorcmd-copy", "anchor": "", "usage": "vector_name. copy\nvector_name. copy dest_name", "description": "Creates a copy of the vector.", "long_description": "Creates either a named or unnamed copy of the vector."}, "display": {"uri": "vectorcmd-display", "anchor": "", "usage": "vector_name. display object_name", "description": "Display table, graph, or spool output in the vector object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the vector object."}, "displayname": {"uri": "vectorcmd-displayname", "anchor": "", "usage": "vector_name. displayname display_name", "description": "Set display name for vector.", "long_description": "Attaches a display name to a vector which may be used to label output in tables and graphs in place of the standard vector name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in object names."}, "distplot": {"uri": "graphmaster-distplot", "anchor": "", "usage": "distplot (options) o1 [o2 o3 ... ]\nobject_name. distplot (options) analytical_spec ( arg ) [categorical_spec(arg)]", "description": "Display a distribution graph.", "long_description": "where o1 , o2 , ..., are series or group objects.\nWhen used as a command, distplot only allows you to display the default histogram view.\nWhen used as an object view, you must specify the type of distribution graph you wish to create in the analytical_spec . You may select from: histogram, histogram polygon, histogram edge polygon, average shifted histogram, kernel density, theoretical distribution, empirical CDF, empirical survivor, empirical log survivor, or empirical quantile (see \u201cAnalytical Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )"}, "dot": {"uri": "graphmaster-dot", "anchor": "", "usage": "dot (options) o1 [o2 o3 ... ]\nobject_name. dot (options) [categorical_spec(arg)]", "description": "Display a dot plot graph view.", "long_description": "A dot plot is a symbol only version of the line and symbol graph that uses circles to represent the value of each observation.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the dot keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "errbar": {"uri": "graphmaster-errbar", "anchor": "", "usage": "errbar (options) o1 o2 [o3 ...]\nobject_name. errbar (options)", "description": "Display an error bar graph view (if possible).", "long_description": "If there are two series or columns, the error bar will show the high and low values in the bar. The optional third series or column will be plotted as a symbol.\nwhere o1 , o2 , ..., are series or group objects."}, "export": {"uri": "vectorcmd-export", "anchor": "", "usage": "vector_name. export (options) [path\\]file_name\nvector_name. export ( options ) [path\\]file_name [table_description]", "description": "Export vector to disk as an Excel 2007 XLSX, CSV, tab-delimited ASCII text, RTF, HTML, Enhanced Metafile, LaTeX, PDF, or Markdown file.", "long_description": "Follow the keyword with a name for the file. file_name may include the file type extension, or the file type may be specified using the \u201ct=\u201d option.\nIf an explicit path is not specified, the file will be stored in the default directory, as set in the File Locations global options.\nThe base syntax for writing Excel 2007 files is:\nwhere the table_description may contain:\n\u2022 \u201crange = arg \u201d, where arg is top left cell of the destination Excel workbook, following the standard Excel format [worksheet!][topleft_cell[:bottomright_cell]] .\nIf the worksheet name contains spaces, it should be placed in single quotes. If the worksheet name is omitted, the cell range is assumed to refer to the currently active sheet. If only a top left cell is provided, a bottom right cell will be chosen automatically to cover the range of non-empty cells adjacent to the specified top left cell. If only a sheet name is provided, the first set of non-empty cells in the top left corner of the chosen worksheet will be selected automatically. As an alternative to specifying an explicit range, a name which has been defined inside the Excel workbook to refer to a range or cell may be used to specify the cells to read."}, "fill": {"uri": "vectorcmd-fill", "anchor": "", "usage": "vector_name. fill (options) n1[, n2, n3 \u2026]", "description": "Fill a vector with the specified values.", "long_description": "Follow the keyword with a list of values to place in the specified object. Each value should be separated by a comma .\nRunning out of values before the object is completely filled is not an error; the remaining cells or observations will be unaffected, unless the \u201cl\u201d (loop) option is specified. If, however, you list more values than the vector can hold, EViews will not modify any observations and will return an error message."}, "hilo": {"uri": "graphmaster-hilo", "anchor": "", "usage": "hilo (options) o1 o2 [o3 ...]\nobject_name. hilo (options)", "description": "Display a high-low[-open-close] graph view (if possible).", "long_description": "where o1 , o2 , ..., are series or group objects. For a high-low[-open-close] graph, EViews uses the first series or column as the high series, the second series or column as the low series, and an optional third series or column as the close series. If four series or columns are provided, EViews will use them in the following order: high-low-open-close.\nNote that if you wish to display a high-low-open graph, you should use an \u201cNA\u201d-series for the close values."}, "import": {"uri": "vectorcmd-import", "anchor": "", "usage": "vector_name. import ([type=]) source_description import_specification\nvector_name. import(type=excel [xml] ) source_description [table_description] [variables_description]\nvector_name. import(type=html) source_description [table_description] [variables_description]\nvector_name .import(type =arg ) source_description [table_description] [variables_description]", "description": "Imports data from a foreign file into the vector object.", "long_description": "\u2022 source_description should contain a description of the file from which the data is to be imported. The specification of the description is usually just the path and file name of the file, however you can also specify more precise information. See wfopen for more details on the specification of source_description .\n\u2022 The optional \u201ctype=\u201d option may be used to specify a source type. For the most part, you should not need to specify a \u201ctype=\u201d option as EViews will automatically determine the type from the filename. The following table summaries the various source formats and along with the corresponding \u201ctype=\u201d keywords:\n\nOption Keywords Excel (through 2003) \u201cexcel\u201d Excel 2007 (xml) \u201cexcelxml\u201d HTML \u201chtml\u201d Text / ASCII \u201ctext\u201d\n\n\u2022 import_specification can be used to provide additional information about the file to be read. The details of import_specification will depend upon the type of file being imported.\nExcel Files\nThe syntax for reading Excel files is:\nThe following table_description elements may be used when reading Excel data:\n\u2022 \u201crange = arg \u201d, where arg is a range of cells to read from the Excel workbook, following the standard Excel format [worksheet ! ][topleft_cell[:bottomright_cell]] .\nIf the worksheet name contains spaces, it should be placed in single quotes. If the worksheet name is omitted, the cell range is assumed to refer to the currently active sheet. If only a top left cell is provided, a bottom right cell will be chosen automatically to cover the range of non-empty cells adjacent to the specified top left cell. If only a sheet name is provided, the first set of non-empty cells in the top left corner of the chosen worksheet will be selected automatically. As an alternative to specifying an explicit range, a name which has been defined inside the excel workbook to refer to a range or cell may be used to specify the cells to read.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to read files where the series are contained in rows (one row per series) rather than columns.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201ctypes=(\" arg1 \",\" arg2 \",\u2026)\u201d, user specified data types of the series. If types are provided they will override the types automatically detected by EViews. You may use any of the following format keywords: \u201ca\u201d (character data), \u201cf\u201d (numeric data), \u201cd\u201d (dates), or \u201cw\u201d (EViews automatic detection). This option is rarely required.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file).\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nExcel Examples\nvec_obj.import \"c:\\data files\\data.xls\"\nloads the active sheet of DATA.XLSX into the VEC_NAME vector object.\nvec_obj.import \"c:\\data files\\data.xls\" range=\"GDP data\"\nreads the data contained in the \u201cGDP data\u201d sheet of \u201cData.XLS\u201d into the VEC_OBJ object.\n\nHTML Files\nThe syntax for reading HTML pages is:\nThe following table_description elements may be used when reading an HTML file or page:\n\u2022 \u201ctable = arg \u201d, where arg specifies which HTML table to read in an HTML file/page containing multiple tables.\nWhen specifying arg, you should remember that tables are named automatically following the pattern \u201cTable01\u201d, \u201cTable02\u201d, \u201cTable03\u201d, etc . If no table name is specified, the largest table found in the file will be chosen by default. Note that the table numbering may include trivial tables that are part of the HTML content of the file, but would not normally be considered as data tables by a person viewing the page.\n\u2022 \u201cskip = int \u201d, where int is the number of rows to discard from the top of the HTML table.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to import files where the series are contained in rows (one row per series) rather than columns.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file).\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the table of data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the table of data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nHTML Examples\nvec1.import \"c:\\data.html\"\nloads into the VEC1 vector object the data located in the HTML file \u201cData.HTML\u201d located on the C:\\ drive\nvec1.import(type=html) \"http://www.tradingroom.com.au/apps/mkt/forex.ac\" colhead=3\nloads into a vector object called VEC1 the data with the given URL located on the website site \u201chttp://www.tradingroom.com.au\u201d. The column header is set to three rows.\nText and Binary Files\nThe syntax for reading text or binary files is:\nIf a table_description is not provided, EViews will attempt to read the file as a free-format text file. The following table_description elements may be used when reading a text or binary file:\n\u2022 \u201cftype = [ascii|binary]\u201d specifies whether numbers and dates in the file are stored in a human readable text (ASCII), or machine readable (Binary) form.\n\u2022 \u201crectype = [crlf|fixed|streamed]\u201d describes the record structure of the file:\n\u201ccrlf\u201d, each row in the output table is formed using a fixed number of lines from the file (where lines are separated by carriage return/line feed sequences). This is the default setting.\n\u201cfixed\u201d, each row in the output table is formed using a fixed number of characters from the file (specified in \u201creclen= arg \u201d). This setting is typically used for files that contain no line breaks.\n\u201cstreamed\u201d, each row in the output table is formed by reading a fixed number of fields, skipping across lines if necessary. This option is typically used for files that contain line breaks, but where the line breaks are not relevant to how rows from the data should be formed.\n\u2022 \u201creclines = int \u201d, number of lines to use in forming each row when \u201crectype=crlf\u201d (default is 1).\n\u2022 \u201creclen= int \u201d, number of bytes to use in forming each row when \u201crectype=fixed\u201d.\n\u2022 \u201crecfields= int \u201d, number of fields to use in forming each row when \u201crectype=streamed\u201d.\n\u2022 \u201cskip= int \u201d, number of lines (if rectype is \u201ccrlf\u201d) or bytes (if rectype is not \u201ccrlf\u201d) to discard from the top of the file.\n\u2022 \u201ccomment= string \u201c, where string is a double-quoted string, specifies one or more characters to treat as a comment indicator. When a comment indicator is found, everything on the line to the right of where the comment indicator starts is ignored.\n\u2022 \u201cemptylines=[keep|drop]\u201d, specifies whether empty lines should be ignored (\u201cdrop\u201d), or treated as valid lines (\u201ckeep\u201d) containing missing values. The default is to ignore empty lines.\n\u2022 \u201ctabwidth= int \u201d, specifies the number of characters between tab stops when tabs are being replaced by spaces (default=8). Note that tabs are automatically replaced by spaces whenever they are not being treated as a field delimiter.\n\u2022 \u201cfieldtype=[delim|fixed|streamed|undivided]\u201d, specifies the structure of fields within a record:\n\u201cDelim\u201d, fields are separated by one or more delimiter characters\n\u201cFixed\u201d, each field is a fixed number of characters\n\u201cStreamed\u201d, fields are read from left to right, with each field starting immediately after the previous field ends.\n\u201cUndivided\u201d, read entire record as a single series.\n\u2022 \u201cquotes=[single|double|both|none]\u201d, specifies the character used for quoting fields, where \u201csingle\u201d is the apostrophe, \u201cdouble\u201d is the double quote character, and \u201cboth\u201d means that either single or double quotes are allowed (default is \u201cboth\u201d). Characters contained within quotes are never treated as delimiters.\n\u2022 \u201csinglequote\u201c, same as \u201cquotes = single\u201d.\n\u2022 \u201cdelim=[comma|tab|space|dblspace|white|dblwhite]\u201d, specifies the character(s) to treat as a delimiter. \u201cWhite\u201d means that either a tab or a space is a valid delimiter. You may also use the abbreviation \u201cd=\u201d in place of \u201cdelim=\u201d.\n\u2022 \u201ccustom=\" arg1 \"\u201d, specifies custom delimiter characters in the double quoted string. Use the character \u201ct\u201d for tab, \u201cs\u201d for space and \u201ca\u201d for any character.\n\u2022 \u201cmult=[on|off]\u201d, to treat multiple delimiters as one. Default value is \u201con\u201d if \u201cdelim\u201d is \u201cspace\u201d, \u201cdblspace\u201d, \u201cwhite\u201d, or \u201cdblwhite\u201d, and \u201coff\u201d otherwise.\n\u2022 \u201cendian = [big|little]\u201d, selects the endianness of numeric fields contained in binary files.\n\u2022 \u201cstring = [nullterm|nullpad|spacepad]\u201d, specifies how strings are stored in binary files. If \u201cnullterm\u201d, strings shorter than the field width are terminated with a single zero character. If \u201cnullpad\u201d, strings shorter than the field width are followed by extra zero characters up to the field width. If \u201cspacepad\u201d, strings shorter than the field width are followed by extra space characters up to the field width.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to import files where the series are contained in rows (one row per series) rather than columns.\n\u2022 \u201clastcol\u201d, include implied last column. For lines that end with a delimiter, this option adds an additional column.\nWhen importing a CSV file, lines which have the delimiter as the last character (for example: \u2018name,description,date,\u2019), EViews normally determines the line to have 3 columns. With the above option, EViews will determine the line to have 4 columns. Note this is not the same as a line containing \u2018name,description,date\u2019. In this case, EViews will always determine the line to have 3 columns regardless if the option is set.\nA central component of the table_description element is the format statement. You may specify the data format using the following table descriptors:\n\u2022 Fortran Format:\nfformat=( [n1]Type[Width][.Precision] , [n2]Type[Width][.Precision] , ...)\nwhere Type specifies the underlying data type, and may be one of the following,\nI - integer\nF - fixed precision\nE - scientific\nA - alphanumeric\nX - skip\nand n1 , n2 , ... are the number of times to read using the descriptor ( default =1). More complicated Fortran compatible variations on this format are possible.\n\u2022 Column Range Format:\nrformat=\" [n1]Type[Width][.Precision] , [n2]Type[Width][.Precision] , ...)\"\nwhere optional type is \u201c$\u201d for string or \u201c#\u201d for number, and n1 , n2 , n3 , n4 , etc . are the range of columns containing the data.\n\u2022 C printf/scanf Format:\ncformat=\" fmt \"\nwhere fmt follows standard C language (printf/scanf) format rules.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201ctypes=(\" arg1 \",\" arg2 \",\u2026)\u201d, user specified data types of the series. If types are provided they will override the types automatically detected by EViews. You may use any of the following format keywords: \u201ca\u201d (character data), \u201cf\u201d (numeric data), \u201cd\u201d (dates), or \u201cw\u201d (EViews automatic detection). This option is rarely used.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file).\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the table of data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the table of data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nText and Binary File Examples (.txt, .csv, etc.)\nvec2.import c:\\data.csv skip=5\nreads \u201cData.CSV\u201d into VEC2, skipping the first 5 rows.\nvec01.import(type=text) c:\\date.txt delim=comma\nloads the comma delimited data DATE.TXT into the VEC01 vector object.\nCross-references\nSee Vector::export ."}, "label": {"uri": "vectorcmd-label", "anchor": "", "usage": "vector_name. label\nvector_name. label (options) [text]", "description": "Display or change the label view of the vector, including the last modified date and display name (if any).", "long_description": "Used as a procedure, label changes the fields in the vector label."}, "line": {"uri": "graphmaster-line", "anchor": "", "usage": "line (options) o1 [o2 o3 ... ]\nobject_name. line (options) [categorical_spec(arg)]", "description": "Display a line graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the line keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "olepush": {"uri": "vectorcmd-olepush", "anchor": "", "usage": "vector_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "pie": {"uri": "graphmaster-pie", "anchor": "", "usage": "pie (options) o1 o2 [o3 ... ]\nobject_name. pie (options) [categorical_spec(arg)]", "description": "Display a pie chart view.", "long_description": "In the default setting, there will be one pie for each date or observation number. Each series or column of data is shown as a wedge in a different color/pattern, where the width of the wedge equals the percentage contribution of the series or column to the total of all listed series or columns. Negative and missing values are treated as zeros.\nwhere o1 , o2 , ..., are series or group objects. You may specify general graph characteristics by including options following the pie keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "read": {"uri": "vectorcmd-read", "anchor": "", "usage": "vector_name. read (options) [path \\] file_name", "description": "Import data from a foreign disk file into a vector.", "long_description": "(This is a deprecated method of importing into a vector. See Vector::import for the supported method.)\nMay be used to import data into an existing workfile from a text, Excel, or Lotus file on disk.\nYou must supply the name of the source file. If you do not include the optional path specification, EViews will look for the file in the default directory. Path specifications may point to local or network drives. If the path specification contains a space, you may enclose the entire expression in double quotation marks."}, "resize": {"uri": "vectorcmd-resize", "anchor": "", "usage": "vector_name. resize rows", "description": "Resize the vector object."}, "setattr": {"uri": "vectorcmd-setattr", "anchor": "", "usage": "vector_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "setcollabels": {"uri": "vectorcmd-setcollabels", "anchor": "", "usage": "vector_name. setcollabels label1", "description": "Set the column label in a vector object.", "long_description": "Follow the setcollabels command with the column label. Note that the column label should not contain spaces unless it is enclosed in quotes."}, "setformat": {"uri": "vectorcmd-setformat", "anchor": "", "usage": "vector_name. setformat format_arg", "description": "Set the display format for cells in a vector spreadsheet view.", "long_description": "where format_arg is a set of arguments used to specify format settings. If necessary, you should enclose the format_arg in double quotes.\nFor vectors, setformat operates on all of the cells in the vector.\nYou should use one of the following format specifications:\n\ng [.precision] significant digits f [.precision] fixed decimal places c [.precision] fixed characters e [.precision] scientific/float p [.precision] percentage r [.precision] fraction\nTo specify a format that groups digits into thousands using a comma separator, place a \u201ct\u201d after the format character. For example, to obtain a fixed number of decimal places with commas used to separate thousands, use \u201cft [.precision] \u201d.\nTo use the period character to separate thousands and commas to denote decimal places, use \u201c..\u201d (two periods) when specifying the precision. For example, to obtain a fixed number of characters with a period used to separate thousands, use \u201cct [..precision] \u201d.\nIf you wish to display negative numbers surrounded by parentheses ( i.e. , display the number -37.2 as \u201c(37.2)\u201d), you should enclose the format string in \u201c()\u201d ( e.g. , \u201cf(.8)\u201d)."}, "setindent": {"uri": "vectorcmd-setindent", "anchor": "", "usage": "view_name. setindent indent_arg", "description": "Set the display indentation for cells in vector spreadsheet views.", "long_description": "where indent_arg is an indent value specified in 1/5 of a width unit. The width unit is computed from representative characters in the default font for the current spreadsheet (the EViews spreadsheet default font at the time the spreadsheet was created), and corresponds roughly to a single character. Indentation is only relevant for non-center justified cells.\nThe default indentation setttings are taken from the Global Defaults for spreadsheet views ( \u201cSpreadsheet Data Display\u201d ) at the time the spreadsheet was created."}, "setjust": {"uri": "vectorcmd-setjust", "anchor": "", "usage": "vector_name. setjust format_arg", "description": "Set the horizontal justification for all cells in the spreadsheet view of the vector object.", "long_description": "where format_arg may be set to left, center, right, or auto (strings are left-justified and numbers are right-justified). Default display settings can be set in General Options; see \u201cSpreadsheet Data Display\u201d ."}, "setrowlabels": {"uri": "vectorcmd-setrowlabels", "anchor": "", "usage": "vector_name. setrowlabels label1 label2 label3....", "description": "Set the row labels in a vector object.", "long_description": "Follow the setrowlabels command with a space delimited list of row labels. Note that each row label should not contain spaces unless it is enclosed in quotes. If you provide fewer labels than there are rows, EViews will keep the corresponding default row names (\u201cR11\u201d, \u201cR12\u201d, etc...)."}, "setwidth": {"uri": "vectorcmd-setwidth", "anchor": "", "usage": "vector_name. setwidth width_arg", "description": "Set the column width in a vector spreadsheet view.", "long_description": "where width_arg specifies the width unit value. The width unit is computed from representative characters in the default font for the current spreadsheet (the EViews spreadsheet default font at the time the spreadsheet was created), and corresponds roughly to a single character. width_arg values may be non-integer values with resolution up to 1/10 of a width unit."}, "sheet": {"uri": "vectorcmd-sheet", "anchor": "", "usage": "vector_name. sheet (options)", "description": "Spreadsheet view of vector object."}, "showlabels": {"uri": "vectorcmd-showlabels", "anchor": "", "usage": "vector_name. showlabels mode", "description": "Displays the custom row and column labels of a vector spreadsheet.", "long_description": "where mode is either 0 or 1 where 0 displays the default row and column labels and 1 displays the custom row and column labels (if present)."}, "spike": {"uri": "graphmaster-spike", "anchor": "", "usage": "spike (options) o1 [o2 o3 ... ]\nobject_name. spike (options) [categorical_spec(arg)]", "description": "Display a spike graph view.", "long_description": "where o1 , o2 , ..., are series or group objects.\nFollowing the spike keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "stats": {"uri": "vectorcmd-stats", "anchor": "", "usage": "vector_name. stats (options)", "description": "Descriptive statistics for the vector.", "long_description": "Computes and displays a table of means, medians, maximum and minimum values, standard deviations, and other descriptive statistics for the data in the vector object."}, "write": {"uri": "vectorcmd-write", "anchor": "", "usage": "vector_name. write (options) [path\\filename]", "description": "Write EViews data to a text (ASCII), Excel, or Lotus file on disk.", "long_description": "Creates a foreign format disk file containing data in a vector object. May be used to export EViews data to another program.\nThis routine should realistically only be used in the oft-hand chance that you wish to write into a Lotus file. Improved Excel, text, and other format writing is available in Vector::export .\nFollow the name of the vector object by a period, the keyword, and the name for the output file. The optional path name may be on the local machine, or may point to a network drive. If the path name contains spaces, enclose the entire expression in double quotation marks. The entire vector will be exported.\nNote that EViews cannot, at present, write into an existing file. The file that you select will, if it exists, be replaced."}}, "Row Vector": {"[Row Vector]": {"uri": "rowvectorcmd-Rowvector", "anchor": "", "description": "Row vector. (One dimensional array of numbers)."}, "@attr": {"uri": "rowvectorcmd-Rowvector", "anchor": "ww205498", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@col": {"uri": "rowvectorcmd-Rowvector", "anchor": "ww237910", "usage": "@col( arg )", "description": "Returns the rowvector defined by arg . arg may be an integer, vector of integers, string, or svector of strings. Integers correspond to column numbers so that, for example, arg = 2 specifies the second column. Strings correspond to column labels so that arg = \"2\" specifies the first column labeled \u201c2\u201d."}, "@collabels": {"uri": "rowvectorcmd-Rowvector", "anchor": "ww220238", "usage": "@collabels", "description": "string containing the column labels of the rowvector."}, "@cols": {"uri": "rowvectorcmd-Rowvector", "anchor": "ww205574", "usage": "@cols", "description": "number of columns in the rowvector."}, "@description": {"uri": "rowvectorcmd-Rowvector", "anchor": "ww185382", "usage": "@description", "description": "string containing the Rowvector object\u2019s description (if available)."}, "@detailedtype": {"uri": "rowvectorcmd-Rowvector", "anchor": "ww198846", "usage": "@detailedtype", "description": "string with the object type: \u201cROWVECTOR\u201d."}, "@displayname": {"uri": "rowvectorcmd-Rowvector", "anchor": "ww185383", "usage": "@displayname", "description": "string containing the Rowvector object\u2019s display name. If the Rowvector has no display name set, the name is returned."}, "@dropcol": {"uri": "rowvectorcmd-Rowvector", "anchor": "ww205615", "usage": "@dropcol( arg )", "description": "Returns the rowvector with the columns defined by arg removed. arg may be an integer, vector of integers, string, or svector of strings. Integers correspond to column numbers so that, for example, arg = 2 specifies the second column. Strings correspond to column labels so that arg = \"2\" specifies the first column labeled \u201c2\u201d."}, "@name": {"uri": "rowvectorcmd-Rowvector", "anchor": "ww185384", "usage": "@name", "description": "string containing the Rowvector object\u2019s name."}, "@remarks": {"uri": "rowvectorcmd-Rowvector", "anchor": "ww185385", "usage": "@remarks", "description": "string containing the Rowvector object\u2019s remarks (if available)."}, "@rowlabels": {"uri": "rowvectorcmd-Rowvector", "anchor": "ww220261", "usage": "@rowlabels", "description": "string containing the row label of the rowvector."}, "@t": {"uri": "rowvectorcmd-Rowvector", "anchor": "ww237887", "usage": "@t", "description": "Returns transpose."}, "@type": {"uri": "rowvectorcmd-Rowvector", "anchor": "ww185387", "usage": "@type", "description": "string with the object type: \u201cROWVECTOR\u201d."}, "@updatetime": {"uri": "rowvectorcmd-Rowvector", "anchor": "ww185389", "usage": "@updatetime", "description": "string representation of the time and date at which the Rowvector was last updated."}, "area": {"uri": "graphmaster-area", "anchor": "", "usage": "area (options) o1 [o2 o3 ... ]\nobject_name. area (options) [categorical_spec(arg)]", "description": "Display an area graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the area keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "bar": {"uri": "graphmaster-bar", "anchor": "", "usage": "bar (options) o1 [o2 o3 ... ]\nobject_name. bar (options) [categorical_spec(arg)]", "description": "Display a bar graph.", "long_description": "(Note: when the individual bars in a bar graph become too thin to be distinguished, the graph will automatically be converted into an area graph; see area .)\nwhere o1 , o2 , ..., are series or group objects. Following the bar keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "boxplot": {"uri": "graphmaster-boxplot", "anchor": "", "usage": "boxplot (options) o1 [o2 o3 ... ]\nobject_name. boxplot (options) [categorical_spec(arg)]", "description": "Display boxplots for each series or column.", "long_description": "where o1 , o2 , ..., are series or group objects. You may specify general options after the boxplot keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "clearcollabels": {"uri": "rowvectorcmd-clearcollabels", "anchor": "", "usage": "rowvector_name. clearcollabels", "description": "Clear the column labels in a rowvector object."}, "clearhist": {"uri": "rowvectorcmd-clearhist", "anchor": "", "usage": "rowvector_name. clearhist", "description": "Clear the contents of the history attribute.", "long_description": "Removes the rowvector\u2019s history attribute, as shown in the label view of the rowvector."}, "clearremarks": {"uri": "rowvectorcmd-clearremarks", "anchor": "", "usage": "rowvector_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the rowvector\u2019s remarks attribute, as shown in the label view of the rowvector."}, "clearrowlabels": {"uri": "rowvectorcmd-clearrowlabels", "anchor": "", "usage": "rowvector_name. clearrowlabels", "description": "Clear the row label in a rowvector object."}, "copy": {"uri": "rowvectorcmd-copy", "anchor": "", "usage": "rowvector_name. copy\nrowvector_name. copy dest_name", "description": "Creates a copy of the rowvector.", "long_description": "Creates either a named or unnamed copy of the rowvector."}, "display": {"uri": "rowvectorcmd-display", "anchor": "", "usage": "rowvector_name. display object_name", "description": "Display table, graph, or spool output in the rowvector object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the rowvector object."}, "displayname": {"uri": "rowvectorcmd-displayname", "anchor": "", "usage": "vector_name. displayname display_name", "description": "Display name for rowvector objects.", "long_description": "Attaches a display name to a rowvector object which may be used to label output in tables and graphs in place of the standard rowvector object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in rowvector object names."}, "distplot": {"uri": "graphmaster-distplot", "anchor": "", "usage": "distplot (options) o1 [o2 o3 ... ]\nobject_name. distplot (options) analytical_spec ( arg ) [categorical_spec(arg)]", "description": "Display a distribution graph.", "long_description": "where o1 , o2 , ..., are series or group objects.\nWhen used as a command, distplot only allows you to display the default histogram view.\nWhen used as an object view, you must specify the type of distribution graph you wish to create in the analytical_spec . You may select from: histogram, histogram polygon, histogram edge polygon, average shifted histogram, kernel density, theoretical distribution, empirical CDF, empirical survivor, empirical log survivor, or empirical quantile (see \u201cAnalytical Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )"}, "dot": {"uri": "graphmaster-dot", "anchor": "", "usage": "dot (options) o1 [o2 o3 ... ]\nobject_name. dot (options) [categorical_spec(arg)]", "description": "Display a dot plot graph view.", "long_description": "A dot plot is a symbol only version of the line and symbol graph that uses circles to represent the value of each observation.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the dot keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "errbar": {"uri": "graphmaster-errbar", "anchor": "", "usage": "errbar (options) o1 o2 [o3 ...]\nobject_name. errbar (options)", "description": "Display an error bar graph view (if possible).", "long_description": "If there are two series or columns, the error bar will show the high and low values in the bar. The optional third series or column will be plotted as a symbol.\nwhere o1 , o2 , ..., are series or group objects."}, "export": {"uri": "rowvectorcmd-export", "anchor": "", "usage": "vector_name. export (options) [path\\]file_name\nvector_name. export ( options ) [path\\]file_name [table_description]", "description": "Export rowvector to disk as an Excel 2007 XLSX, CSV, tab-delimited ASCII text, RTF, HTML, Enhanced Metafile, LaTeX, PDF, or Markdown file.", "long_description": "Follow the keyword with a name for the file. file_name may include the file type extension, or the file type may be specified using the \u201ct=\u201d option.\nIf an explicit path is not specified, the file will be stored in the default directory, as set in the File Locations global options.\nThe base syntax for writing Excel 2007 files is:\nwhere the table_description may contain:\n\u2022 \u201crange = arg \u201d, where arg is top left cell of the destination Excel workbook, following the standard Excel format [worksheet!][topleft_cell[:bottomright_cell]] .\nIf the worksheet name contains spaces, it should be placed in single quotes. If the worksheet name is omitted, the cell range is assumed to refer to the currently active sheet. If only a top left cell is provided, a bottom right cell will be chosen automatically to cover the range of non-empty cells adjacent to the specified top left cell. If only a sheet name is provided, the first set of non-empty cells in the top left corner of the chosen worksheet will be selected automatically. As an alternative to specifying an explicit range, a name which has been defined inside the Excel workbook to refer to a range or cell may be used to specify the cells to read."}, "fill": {"uri": "rowvectorcmd-fill", "anchor": "", "usage": "vector_name. fill (options) n1[, n2, n3 \u2026]", "description": "Fill a rowvector object with specified values.", "long_description": "Follow the keyword with a list of values to place in the specified object. Each value should be separated by a comma .\nRunning out of values before the object is completely filled is not an error; the remaining cells or observations will be unaffected, unless the \u201cl\u201d option is specified. If, however, you list more values than the object can hold, EViews will not modify any observations and will return an error message."}, "hilo": {"uri": "graphmaster-hilo", "anchor": "", "usage": "hilo (options) o1 o2 [o3 ...]\nobject_name. hilo (options)", "description": "Display a high-low[-open-close] graph view (if possible).", "long_description": "where o1 , o2 , ..., are series or group objects. For a high-low[-open-close] graph, EViews uses the first series or column as the high series, the second series or column as the low series, and an optional third series or column as the close series. If four series or columns are provided, EViews will use them in the following order: high-low-open-close.\nNote that if you wish to display a high-low-open graph, you should use an \u201cNA\u201d-series for the close values."}, "import": {"uri": "rowvectorcmd-import", "anchor": "", "usage": "rowvector_name. import ([type=]) source_description import_specification\nrowvector_name. import(type=excel [xml] ) source_description [table_description] [variables_description]\nrowvector_name. import(type=html) source_description [table_description] [variables_description]\nrowvector_name .import(type =arg ) source_description [table_description] [variables_description]", "description": "Imports data from a foreign file into the rowvector object.", "long_description": "\u2022 source_description should contain a description of the file from which the data is to be imported. The specification of the description is usually just the path and file name of the file, however you can also specify more precise information. See wfopen for more details on the specification of source_description .\n\u2022 The optional \u201ctype=\u201d option may be used to specify a source type. For the most part, you should not need to specify a \u201ctype=\u201d option as EViews will automatically determine the type from the filename. The following table summaries the various source formats and along with the corresponding \u201ctype=\u201d keywords:\n\nOption Keywords Excel (through 2003) \u201cexcel\u201d Excel 2007 (xml) \u201cexcelxml\u201d HTML \u201chtml\u201d Text / ASCII \u201ctext\u201d\n\n\u2022 import_specification can be used to provide additional information about the file to be read. The details of import_specification will depend upon the type of file being imported.\nExcel Files\nThe syntax for reading Excel files is:\nThe following table_description elements may be used when reading Excel data:\n\u2022 \u201crange = arg \u201d, where arg is a range of cells to read from the Excel workbook, following the standard Excel format [worksheet ! ][topleft_cell[:bottomright_cell]] .\nIf the worksheet name contains spaces, it should be placed in single quotes. If the worksheet name is omitted, the cell range is assumed to refer to the currently active sheet. If only a top left cell is provided, a bottom right cell will be chosen automatically to cover the range of non-empty cells adjacent to the specified top left cell. If only a sheet name is provided, the first set of non-empty cells in the top left corner of the chosen worksheet will be selected automatically. As an alternative to specifying an explicit range, a name which has been defined inside the excel workbook to refer to a range or cell may be used to specify the cells to read.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to read files where the series are contained in rows (one row per series) rather than columns.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file).\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nExcel Examples\nrowvec_obj.import \"c:\\data files\\data.xls\"\nloads the active sheet of \u201cData.XLSX\u201d into the ROWVEC_OBJ rowvector object.\nrowvec_obj.import \"c:\\data files\\data.xls\" range=\"GDP data\"\nreads the data contained in the \u201cGDP data\u201d sheet of \u201cData.XLS\u201d into the ROWVEC_OBJ object.\n\nHTML Files\nThe syntax for reading HTML pages is:\nThe following table_description elements may be used when reading an HTML file or page:\n\u2022 \u201ctable = arg \u201d, where arg specifies which HTML table to read in an HTML file/page containing multiple tables.\nWhen specifying arg, you should remember that tables are named automatically following the pattern \u201cTable01\u201d, \u201cTable02\u201d, \u201cTable03\u201d, etc . If no table name is specified, the largest table found in the file will be chosen by default. Note that the table numbering may include trivial tables that are part of the HTML content of the file, but would not normally be considered as data tables by a person viewing the page.\n\u2022 \u201cskip = int \u201d, where int is the number of rows to discard from the top of the HTML table.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to import files where the series are contained in rows (one row per series) rather than columns.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file).\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the table of data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the table of data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nHTML Examples\nrvec.import \"c:\\data.html\"\nloads into the RVEC object the data located in the HTML file \u201cData.HTML\u201d located on the C:\\ drive\nrvec.import(type=html) \"http://www.tradingroom.com.au/apps/mkt/forex.ac\" colhead=3\nloads into a rowvector RVEC the data with the given URL located on the website site \u201chttp://www.tradingroom.com.au\u201d. The column header is set to three rows.\nText and Binary Files\nThe syntax for reading text or binary files is:\nIf a table_description is not provided, EViews will attempt to read the file as a free-format text file. The following table_description elements may be used when reading a text or binary file:\n\u2022 \u201cftype = [ascii|binary]\u201d specifies whether numbers and dates in the file are stored in a human readable text (ASCII), or machine readable (Binary) form.\n\u2022 \u201crectype = [crlf|fixed|streamed]\u201d describes the record structure of the file:\n\u201ccrlf\u201d, each row in the output table is formed using a fixed number of lines from the file (where lines are separated by carriage return/line feed sequences). This is the default setting.\n\u201cfixed\u201d, each row in the output table is formed using a fixed number of characters from the file (specified in \u201creclen= arg \u201d). This setting is typically used for files that contain no line breaks.\n\u201cstreamed\u201d, each row in the output table is formed by reading a fixed number of fields, skipping across lines if necessary. This option is typically used for files that contain line breaks, but where the line breaks are not relevant to how rows from the data should be formed.\n\u2022 \u201creclines = int \u201d, number of lines to use in forming each row when \u201crectype=crlf\u201d (default is 1).\n\u2022 \u201creclen= int \u201d, number of bytes to use in forming each row when \u201crectype=fixed\u201d.\n\u2022 \u201crecfields= int \u201d, number of fields to use in forming each row when \u201crectype=streamed\u201d.\n\u2022 \u201cskip= int \u201d, number of lines (if rectype is \u201ccrlf\u201d) or bytes (if rectype is not \u201ccrlf\u201d) to discard from the top of the file.\n\u2022 \u201ccomment= string \u201c, where string is a double-quoted string, specifies one or more characters to treat as a comment indicator. When a comment indicator is found, everything on the line to the right of where the comment indicator starts is ignored.\n\u2022 \u201cemptylines=[keep|drop]\u201d, specifies whether empty lines should be ignored (\u201cdrop\u201d), or treated as valid lines (\u201ckeep\u201d) containing missing values. The default is to ignore empty lines.\n\u2022 \u201ctabwidth= int \u201d, specifies the number of characters between tab stops when tabs are being replaced by spaces (default=8). Note that tabs are automatically replaced by spaces whenever they are not being treated as a field delimiter.\n\u2022 \u201cfieldtype=[delim|fixed|streamed|undivided]\u201d, specifies the structure of fields within a record:\n\u201cDelim\u201d, fields are separated by one or more delimiter characters\n\u201cFixed\u201d, each field is a fixed number of characters\n\u201cStreamed\u201d, fields are read from left to right, with each field starting immediately after the previous field ends.\n\u201cUndivided\u201d, read entire record as a single series.\n\u2022 \u201cquotes=[single|double|both|none]\u201d, specifies the character used for quoting fields, where \u201csingle\u201d is the apostrophe, \u201cdouble\u201d is the double quote character, and \u201cboth\u201d means that either single or double quotes are allowed (default is \u201cboth\u201d). Characters contained within quotes are never treated as delimiters.\n\u2022 \u201csinglequote\u201c, same as \u201cquotes = single\u201d.\n\u2022 \u201cdelim=[comma|tab|space|dblspace|white|dblwhite]\u201d, specifies the character(s) to treat as a delimiter. \u201cWhite\u201d means that either a tab or a space is a valid delimiter. You may also use the abbreviation \u201cd=\u201d in place of \u201cdelim=\u201d.\n\u2022 \u201ccustom=\" arg1 \"\u201d, specifies custom delimiter characters in the double quoted string. Use the character \u201ct\u201d for tab, \u201cs\u201d for space and \u201ca\u201d for any character.\n\u2022 \u201cmult=[on|off]\u201d, to treat multiple delimiters as one. Default value is \u201con\u201d if \u201cdelim\u201d is \u201cspace\u201d, \u201cdblspace\u201d, \u201cwhite\u201d, or \u201cdblwhite\u201d, and \u201coff\u201d otherwise.\n\u2022 \u201cendian = [big|little]\u201d, selects the endianness of numeric fields contained in binary files.\n\u2022 \u201cstring = [nullterm|nullpad|spacepad]\u201d, specifies how strings are stored in binary files. If \u201cnullterm\u201d, strings shorter than the field width are terminated with a single zero character. If \u201cnullpad\u201d, strings shorter than the field width are followed by extra zero characters up to the field width. If \u201cspacepad\u201d, strings shorter than the field width are followed by extra space characters up to the field width.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to import files where the series are contained in rows (one row per series) rather than columns.\n\u2022 \u201clastcol\u201d, include implied last column. For lines that end with a delimiter, this option adds an additional column.\nWhen importing a CSV file, lines which have the delimiter as the last character (for example: \u2018name,description,date,\u2019), EViews normally determines the line to have 3 columns. With the above option, EViews will determine the line to have 4 columns. Note this is not the same as a line containing \u2018name,description,date\u2019. In this case, EViews will always determine the line to have 3 columns regardless if the option is set.\nA central component of the table_description element is the format statement. You may specify the data format using the following table descriptors:\n\u2022 Fortran Format:\nfformat=( [n1]Type[Width][.Precision] , [n2]Type[Width][.Precision] , ...)\nwhere Type specifies the underlying data type, and may be one of the following,\nI - integer\nF - fixed precision\nE - scientific\nA - alphanumeric\nX - skip\nand n1 , n2 , ... are the number of times to read using the descriptor ( default =1). More complicated Fortran compatible variations on this format are possible.\n\u2022 Column Range Format:\nrformat=\" [n1]Type[Width][.Precision] , [n2]Type[Width][.Precision] , ...)\"\nwhere optional type is \u201c$\u201d for string or \u201c#\u201d for number, and n1 , n2 , n3 , n4 , etc . are the range of columns containing the data.\n\u2022 C printf/scanf Format:\ncformat=\" fmt \"\nwhere fmt follows standard C language (printf/scanf) format rules.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file).\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the table of data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the table of data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nText and Binary File Examples (.txt, .csv, etc.)\nrvec2.import c:\\data.csv skip=5\nreads \u201cData.CSV\u201d into a RVEC2, skipping the first 5 rows.\nrvec2.import(type=text) c:\\date.txt delim=comma\nloads the comma delimited data \u201cDate.TXT\u201d into the RVEC2 rowvector object.\nCross-references\nSee also Rowvector::export ."}, "label": {"uri": "rowvectorcmd-label", "anchor": "", "usage": "vector_name. label\nvector_name. label (options) [text]", "description": "Display or change the label view of a rowvector object, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the rowvector label."}, "line": {"uri": "graphmaster-line", "anchor": "", "usage": "line (options) o1 [o2 o3 ... ]\nobject_name. line (options) [categorical_spec(arg)]", "description": "Display a line graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the line keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "olepush": {"uri": "rowvectorcmd-olepush", "anchor": "", "usage": "vector_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "pie": {"uri": "graphmaster-pie", "anchor": "", "usage": "pie (options) o1 o2 [o3 ... ]\nobject_name. pie (options) [categorical_spec(arg)]", "description": "Display a pie chart view.", "long_description": "In the default setting, there will be one pie for each date or observation number. Each series or column of data is shown as a wedge in a different color/pattern, where the width of the wedge equals the percentage contribution of the series or column to the total of all listed series or columns. Negative and missing values are treated as zeros.\nwhere o1 , o2 , ..., are series or group objects. You may specify general graph characteristics by including options following the pie keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "read": {"uri": "rowvectorcmd-read", "anchor": "", "usage": "vector_name. read (options) [path \\] file_name", "description": "Import data from a foreign disk file into a rowvector.", "long_description": "(This is a deprecated method of importing into a rowvector. See Rowvector::import for the currently supported method.)\nMay be used to import data into an existing workfile from a text, Excel, or Lotus file on disk.\nYou must supply the name of the source file. If you do not include the optional path specification, EViews will look for the file in the default directory. Path specifications may point to local or network drives. If the path specification contains a space, you may enclose the entire expression in double quotation marks."}, "resize": {"uri": "rowvectorcmd-resize", "anchor": "", "usage": "rowvector_name. resize rows", "description": "Resize the rowvector object."}, "setattr": {"uri": "rowvectorcmd-setattr", "anchor": "", "usage": "rowvector_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "setcollabels": {"uri": "rowvectorcmd-setcollabels", "anchor": "", "usage": "rowvector_name. setcollabels label1 label2 label3....", "description": "Set the column labels in a rowvector object.", "long_description": "Follow the setcollabels command with a space delimited list of column labels. Note that each column label should not contain spaces unless it is enclosed in quotes. If you provide fewer labels than there are columns, EViews will keep the corresponding default column names (\u201cC11\u201d, \u201cC12\u201d, etc...)."}, "setformat": {"uri": "rowvectorcmd-setformat", "anchor": "", "usage": "vector_name. setformat format_arg", "description": "Set the display format for cells in a rowvector object spreadsheet view.", "long_description": "where format_arg is a set of arguments used to specify format settings. If necessary, you should enclose the format_arg in double quotes.\nFor rowvectors, setformat operates on all of the cells in the rowvector.\nTo format numeric values, you should use one of the following format specifications:\n\ng [.precision] significant digits f [.precision] fixed decimal places c [.precision] fixed characters e [.precision] scientific/float p [.precision] percentage r [.precision] fraction\nTo specify a format that groups digits into thousands using a comma separator, place a \u201ct\u201d after the format character. For example, to obtain a fixed number of decimal places with commas used to separate thousands, use \u201cft [.precision] \u201d.\nTo use the period character to separate thousands and commas to denote decimal places, use \u201c..\u201d (two periods) when specifying the precision. For example, to obtain a fixed number of characters with a period used to separate thousands, use \u201cct [..precision] \u201d.\nIf you wish to display negative numbers surrounded by parentheses ( i.e. , display the number -37.2 as \u201c(37.2)\u201d), you should enclose the format string in \u201c()\u201d ( e.g. , \u201cf(.8)\u201d)."}, "setindent": {"uri": "rowvectorcmd-setindent", "anchor": "", "usage": "vector_name. setindent indent_arg", "description": "Set the display indentation for cells in a rowvector object spreadsheet view.", "long_description": "where indent_arg is an indent value specified in 1/5 of a width unit. The width unit is computed from representative characters in the default font for the current spreadsheet (the EViews spreadsheet default font at the time the spreadsheet was created), and corresponds roughly to a single character. Indentation is only relevant for non-center justified cells.\nThe default indentation setttings are taken from the Global Defaults for spreadsheet views ( \u201cSpreadsheet Data Display\u201d ) at the time the spreadsheet was created.\nFor rowvectors, setindent operates on all of the cells in the rowvector."}, "setjust": {"uri": "rowvectorcmd-setjust", "anchor": "", "usage": "rowvector_name. setjust format_arg", "description": "Set the horizontal justification for all cells in the spreadsheet view of the rowvector object.", "long_description": "where format_arg may be set to left, center, right, or auto (strings are left-justified and numbers are right-justified). Default display settings can be set in General Options; see \u201cSpreadsheet Data Display\u201d ."}, "setrowlabels": {"uri": "rowvectorcmd-setrowlabels", "anchor": "", "usage": "vector_name. setrowlabels label", "description": "Set the row label in a rowvector object.", "long_description": "Follow the setrowlabels command with a row label. Note that the row label should not contain spaces unless it is enclosed in quotes."}, "setwidth": {"uri": "rowvectorcmd-setwidth", "anchor": "", "usage": "vector_name. setwidth width_arg", "description": "Set the column width for all columns in a rowvector object spreadsheet.", "long_description": "where width_arg specifies the width unit value. The width unit is computed from representative characters in the default font for the current spreadsheet (the EViews spreadsheet default font at the time the spreadsheet was created), and corresponds roughly to a single character. width_arg values may be non-integer values with resolution up to 1/10 of a width unit."}, "sheet": {"uri": "rowvectorcmd-sheet", "anchor": "", "usage": "vector_name. sheet (options)", "description": "Spreadsheet view of a rowvector object."}, "showlabels": {"uri": "rowvectorcmd-showlabels", "anchor": "", "usage": "rowvector_name. showlabels mode", "description": "Displays the custom row and column labels of a rowvector spreadsheet.", "long_description": "where mode is either 0 or 1 where 0 displays the default row and column labels and 1 displays the custom row and column labels (if present)."}, "spike": {"uri": "graphmaster-spike", "anchor": "", "usage": "spike (options) o1 [o2 o3 ... ]\nobject_name. spike (options) [categorical_spec(arg)]", "description": "Display a spike graph view.", "long_description": "where o1 , o2 , ..., are series or group objects.\nFollowing the spike keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "stats": {"uri": "rowvectorcmd-stats", "anchor": "", "usage": "vector_name. stats (options)", "description": "Descriptive statistics.", "long_description": "Computes and displays a table of means, medians, maximum and minimum values, standard deviations, and other descriptive statistics for a rowvector.\nThe stats command computes the statistics for each column. Note that in the case of a rowvector, this will be for a single observation."}, "write": {"uri": "rowvectorcmd-write", "anchor": "", "usage": "vector_name. write (options) [path\\filename]", "description": "Write EViews data to a text (ASCII), Excel, or Lotus file on disk.", "long_description": "Creates a foreign format disk file containing EViews data. May be used to export EViews data to another program.\nThis routine should realistically only be used in the oft-hand chance that you wish to write into a Lotus file. Improved Excel, text, and other format writing is available in Rowvector::export .\nFollow the name of the rowvector object by a period, the keyword, and the name for the output file. The optional path name may be on the local machine, or may point to a network drive. If the path name contains spaces, enclose the entire expression in double quotation marks. The entire rowvector will be exported.\nNote that EViews cannot, at present, write into an existing file. The file that you select will, if it exists, be replaced."}}, "Sym": {"[Sym]": {"uri": "symcmd-Sym", "anchor": "", "description": "Symmetric matrix (symmetric two-dimensional array)."}, "@attr": {"uri": "symcmd-Sym", "anchor": "ww215849", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@col": {"uri": "symcmd-Sym", "anchor": "", "description": "Symmetric matrix (symmetric two-dimensional array)."}, "@collabels": {"uri": "symcmd-Sym", "anchor": "", "description": "Symmetric matrix (symmetric two-dimensional array)."}, "@cols": {"uri": "symcmd-Sym", "anchor": "", "description": "Symmetric matrix (symmetric two-dimensional array)."}, "@description": {"uri": "symcmd-Sym", "anchor": "ww187859", "usage": "@description", "description": "string containing the Sym object\u2019s description (if available)."}, "@detailedtype": {"uri": "symcmd-Sym", "anchor": "ww206822", "usage": "@detailedtype", "description": "string with the object type: \u201cSCALAR\u201d."}, "@diag": {"uri": "symcmd-Sym", "anchor": "", "description": "Symmetric matrix (symmetric two-dimensional array)."}, "@displayname": {"uri": "symcmd-Sym", "anchor": "ww187860", "usage": "@displayname", "description": "string containing the Sym object\u2019s display name. If the Sym has no display name set, the name is returned."}, "@drop": {"uri": "symcmd-Sym", "anchor": "", "description": "Symmetric matrix (symmetric two-dimensional array)."}, "@dropboth": {"uri": "symcmd-Sym", "anchor": "", "description": "Symmetric matrix (symmetric two-dimensional array)."}, "@dropcol": {"uri": "symcmd-Sym", "anchor": "", "description": "Symmetric matrix (symmetric two-dimensional array)."}, "@droprow": {"uri": "symcmd-Sym", "anchor": "", "description": "Symmetric matrix (symmetric two-dimensional array)."}, "@name": {"uri": "symcmd-Sym", "anchor": "ww187861", "usage": "@name", "description": "string containing the Sym object\u2019s name."}, "@remarks": {"uri": "symcmd-Sym", "anchor": "ww187862", "usage": "@remarks", "description": "string containing the Sym object\u2019s remarks (if available)."}, "@row": {"uri": "symcmd-Sym", "anchor": "", "description": "Symmetric matrix (symmetric two-dimensional array)."}, "@rowlabels": {"uri": "symcmd-Sym", "anchor": "", "description": "Symmetric matrix (symmetric two-dimensional array)."}, "@rows": {"uri": "symcmd-Sym", "anchor": "", "description": "Symmetric matrix (symmetric two-dimensional array)."}, "@sub": {"uri": "symcmd-Sym", "anchor": "", "description": "Symmetric matrix (symmetric two-dimensional array)."}, "@type": {"uri": "symcmd-Sym", "anchor": "ww187864", "usage": "@type", "description": "string with the object type: \u201cSCALAR\u201d."}, "@updatetime": {"uri": "symcmd-Sym", "anchor": "ww187866", "usage": "@updatetime", "description": "string representation of the time and date at which the Sym was last updated."}, "area": {"uri": "graphmaster-area", "anchor": "", "usage": "area (options) o1 [o2 o3 ... ]\nobject_name. area (options) [categorical_spec(arg)]", "description": "Display an area graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the area keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "band": {"uri": "graphmaster-band", "anchor": "", "usage": "band (options) o1 [o2 o3 ... ]\nobject_name. band (options)", "description": "Display an area band graph view (if possible).", "long_description": "An area band graph fills the area between pairs of series or columns of a matrix.\nwhere o1 , o2 , ..., are series or group objects. Following the band keyword, you may specify general graph characteristics using options . Available options include axis settings and template application."}, "bar": {"uri": "graphmaster-bar", "anchor": "", "usage": "bar (options) o1 [o2 o3 ... ]\nobject_name. bar (options) [categorical_spec(arg)]", "description": "Display a bar graph.", "long_description": "(Note: when the individual bars in a bar graph become too thin to be distinguished, the graph will automatically be converted into an area graph; see area .)\nwhere o1 , o2 , ..., are series or group objects. Following the bar keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "boxplot": {"uri": "graphmaster-boxplot", "anchor": "", "usage": "boxplot (options) o1 [o2 o3 ... ]\nobject_name. boxplot (options) [categorical_spec(arg)]", "description": "Display boxplots for each series or column.", "long_description": "where o1 , o2 , ..., are series or group objects. You may specify general options after the boxplot keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "bubble": {"uri": "graphmaster-bubble", "anchor": "", "usage": "group_name. bubble (options)", "description": "Displays a XY..YZ bubble plot.", "long_description": "At least three series must be present in the group. The first series will be plotted on the horizontal axis. The remaining series, aside from the last, will be plotted on the vertical axis. The last series will be used to determine the size of the bubbles."}, "bubbletrip": {"uri": "graphmaster-bubbletrip", "anchor": "", "usage": "group_name. bubbletrip (options)", "description": "Display a bubble triplet plot.", "long_description": "Groups should contain series in multiples of three (triplets). Series not part of a triplet will be ignored. The first series of each triplet will be plotted on the horizontal axis. The second series of the triplet will be plotted on the vertical axis. The last series of the triplet will be used to determine the size of the bubbles."}, "clearcollabels": {"uri": "symcmd-clearcollabels", "anchor": "", "usage": "sym_name. clearcollabels", "description": "Clear the column label in a sym object."}, "clearhist": {"uri": "symcmd-clearhist", "anchor": "", "usage": "sym_name. clearhist", "description": "Clear the contents of the history attribute.", "long_description": "Removes the sym\u2019s history attribute, as shown in the label view of the sym."}, "clearremarks": {"uri": "symcmd-clearremarks", "anchor": "", "usage": "sym_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the sym\u2019s remarks attribute, as shown in the label view of the sym."}, "clearrowlabels": {"uri": "symcmd-clearrowlabels", "anchor": "", "usage": "sym_name. clearrowlabels", "description": "Clear the row labels in a sym object."}, "copy": {"uri": "symcmd-copy", "anchor": "", "usage": "sym_name. copy\nsym_name. copy dest_name", "description": "Creates a copy of the sym.", "long_description": "Creates either a named or unnamed copy of the sym."}, "cor": {"uri": "symcmd-cor", "anchor": "", "usage": "matrix_name. cor ( options ) [keywords [ @partial z1 z2 z3...]]", "description": "Compute covariances, correlations, and other measures of association for the columns in a matrix.", "long_description": "You may compute measures related to Pearson product-moment (ordinary) covariances and correlations, Spearman rank covariances, or Kendall\u2019s tau along with test statistics for evaluating whether the correlations are equal to zero.\nYou should specify keywords indicating the statistics you wish to display from the list below, optionally followed by the keyword @partial and a list of conditioning series or groups (for the group view), or the name of a conditioning matrix (for the matrix view). In the matrix view setting, the columns of the matrix should contain the conditioning information, and the number or rows should match the original matrix.\nYou may specify keywords from one of the four sets (Pearson correlation, Spearman correlation, Kendall\u2019s tau, Uncentered Pearson) corresponding the computational method you wish to employ. (You may not select keywords from more than one set.)\nIf you do not specify keywords , EViews will assume \u201ccorr\u201d and compute the Pearson correlation matrix. Note that Sym::cor is equivalent to the Sym::cov command with a different default setting.\nPearson Correlation\n\ncov Product moment covariance. corr Product moment correlation. sscp Sums-of-squared cross-products. stat Test statistic ( t -statistic) for evaluating whether the correlation is zero. prob Probability under the null for the test statistic. cases Number of cases. obs Number of observations. wgts Sum of the weights.\nSpearman Rank Correlation\n\nrcov Spearman\u2019s rank covariance. rcorr Spearman\u2019s rank correlation. rsscp Sums-of-squared cross-products. rstat Test statistic ( t -statistic) for evaluating whether the correlation is zero. rprob Probability under the null for the test statistic. cases Number of cases. obs Number of observations. wgts Sum of the weights.\nKendall\u2019s tau\n\ntaub Kendall\u2019s tau-b. taua Kendall\u2019s tau-a. taucd Kendall\u2019s concordances and discordances. taustat Kendall\u2019s score statistic for evaluating whether the Kendall\u2019s tau-b measure is zero. tauprob Probability under the null for the score statistic. cases Number of cases. obs Number of observations. wgts Sum of the weights.\nUncentered Pearson\n\nucov Product moment covariance. ucorr Product moment correlation. usscp Sums-of-squared cross-products. ustat Test statistic ( t -statistic) for evaluating whether the correlation is zero. uprob Probability under the null for the test statistic. cases Number of cases. obs Number of observations. wgts Sum of the weights.\nNote that cases , obs , and wgts are available for each of the methods."}, "display": {"uri": "symcmd-display", "anchor": "", "usage": "sym_name. display object_name", "description": "Display table, graph, or spool output in the sym object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the sym object."}, "displayname": {"uri": "symcmd-displayname", "anchor": "", "usage": "matrix_name. displayname display_name", "description": "Display name for symmetric matrix objects.", "long_description": "Attaches a display name to a symmetric matrix object which may be used to label output in place of the standard matrix object name.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in matrix object names."}, "distplot": {"uri": "graphmaster-distplot", "anchor": "", "usage": "distplot (options) o1 [o2 o3 ... ]\nobject_name. distplot (options) analytical_spec ( arg ) [categorical_spec(arg)]", "description": "Display a distribution graph.", "long_description": "where o1 , o2 , ..., are series or group objects.\nWhen used as a command, distplot only allows you to display the default histogram view.\nWhen used as an object view, you must specify the type of distribution graph you wish to create in the analytical_spec . You may select from: histogram, histogram polygon, histogram edge polygon, average shifted histogram, kernel density, theoretical distribution, empirical CDF, empirical survivor, empirical log survivor, or empirical quantile (see \u201cAnalytical Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )"}, "dot": {"uri": "graphmaster-dot", "anchor": "", "usage": "dot (options) o1 [o2 o3 ... ]\nobject_name. dot (options) [categorical_spec(arg)]", "description": "Display a dot plot graph view.", "long_description": "A dot plot is a symbol only version of the line and symbol graph that uses circles to represent the value of each observation.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the dot keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "errbar": {"uri": "graphmaster-errbar", "anchor": "", "usage": "errbar (options) o1 o2 [o3 ...]\nobject_name. errbar (options)", "description": "Display an error bar graph view (if possible).", "long_description": "If there are two series or columns, the error bar will show the high and low values in the bar. The optional third series or column will be plotted as a symbol.\nwhere o1 , o2 , ..., are series or group objects."}, "export": {"uri": "symcmd-export", "anchor": "", "usage": "sym_name. export (options) [path\\]file_name\nsym_name. export ( options ) [path\\]file_name [table_description]", "description": "Export sym to disk as an Excel 2007 XLSX, CSV, tab-delimited ASCII text, RTF, HTML, Enhanced Metafile, LaTeX, PDF, or Markdown file.", "long_description": "Follow the keyword with a name for the file. file_name may include the file type extension, or the file type may be specified using the \u201ct=\u201d option.\nIf an explicit path is not specified, the file will be stored in the default directory, as set in the File Locations global options.\nThe base syntax for writing Excel 2007 files is:\nwhere the table_description may contain:\n\u2022 \u201crange = arg \u201d, where arg is top left cell of the destination Excel workbook, following the standard Excel format [worksheet!][topleft_cell[:bottomright_cell]] .\nIf the worksheet name contains spaces, it should be placed in single quotes. If the worksheet name is omitted, the cell range is assumed to refer to the currently active sheet. If only a top left cell is provided, a bottom right cell will be chosen automatically to cover the range of non-empty cells adjacent to the specified top left cell. If only a sheet name is provided, the first set of non-empty cells in the top left corner of the chosen worksheet will be selected automatically. As an alternative to specifying an explicit range, a name which has been defined inside the Excel workbook to refer to a range or cell may be used to specify the cells to read."}, "fill": {"uri": "symcmd-fill", "anchor": "", "usage": "matrix_name. fill (options) n1[, n2, n3 \u2026]", "description": "Fill a symmetric matrix object with specified values.", "long_description": "Follow the keyword with a list of values to place in the specified object. Each value should be separated by a comma .\nRunning out of values before the object is completely filled is not an error; the remaining cells or observations will be unaffected, unless the \u201cl\u201d option is specified. If, however, you list more values than the object can hold, EViews will not modify any observations and will return an error message."}, "hilo": {"uri": "graphmaster-hilo", "anchor": "", "usage": "hilo (options) o1 o2 [o3 ...]\nobject_name. hilo (options)", "description": "Display a high-low[-open-close] graph view (if possible).", "long_description": "where o1 , o2 , ..., are series or group objects. For a high-low[-open-close] graph, EViews uses the first series or column as the high series, the second series or column as the low series, and an optional third series or column as the close series. If four series or columns are provided, EViews will use them in the following order: high-low-open-close.\nNote that if you wish to display a high-low-open graph, you should use an \u201cNA\u201d-series for the close values."}, "import": {"uri": "symcmd-import", "anchor": "", "usage": "sym_name. import ([type=]) source_description import_specification\nsym_name. import(type=excel [xml] ) source_description [table_description] [variables_description]\nsym_name. import(type=html) source_description [table_description] [variables_description]\nsym_name .import(type =arg ) source_description [table_description] [variables_description]", "description": "Imports data from a foreign file into the sym object.", "long_description": "\u2022 source_description should contain a description of the file from which the data is to be imported. The specification of the description is usually just the path and file name of the file, however you can also specify more precise information. See wfopen for more details on the specification of source_description .\n\u2022 The optional \u201ctype=\u201d option may be used to specify a source type. For the most part, you should not need to specify a \u201ctype=\u201d option as EViews will automatically determine the type from the filename. The following table summaries the various source formats and along with the corresponding \u201ctype=\u201d keywords:\n\nOption Keywords Excel (through 2003) \u201cexcel\u201d Excel 2007 (xml) \u201cexcelxml\u201d HTML \u201chtml\u201d Text / ASCII \u201ctext\u201d\n\n\u2022 import_specification can be used to provide additional information about the file to be read. The details of import_specification will depend upon the type of file being imported.\nExcel Files\nThe syntax for reading Excel files is:\nThe following table_description elements may be used when reading Excel data:\n\u2022 \u201crange = arg \u201d, where arg is a range of cells to read from the Excel workbook, following the standard Excel format [worksheet ! ][topleft_cell[:bottomright_cell]] .\nIf the worksheet name contains spaces, it should be placed in single quotes. If the worksheet name is omitted, the cell range is assumed to refer to the currently active sheet. If only a top left cell is provided, a bottom right cell will be chosen automatically to cover the range of non-empty cells adjacent to the specified top left cell. If only a sheet name is provided, the first set of non-empty cells in the top left corner of the chosen worksheet will be selected automatically. As an alternative to specifying an explicit range, a name which has been defined inside the excel workbook to refer to a range or cell may be used to specify the cells to read.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to read files where the series are contained in rows (one row per series) rather than columns.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file). Note: If a \"range=\" argument is not specified, then EViews will only scan the first five rows of data to try and determine the data format for each column. Likewise, if the \"na=\" argument is not specified, EViews will also try to determine possible NA values by looking for repeated values in the same rows. If the first five rows are not enough to correctly determine the data format, use the \"scan=\" argument to instruct EViews to look at more rows. In addition, you may want to specify a the \"na=\" value to override any dynamic NA value that EViews may determine on its own.\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nExcel Examples\nsym_obj.import \"c:\\data files\\data.xls\"\nloads the active sheet of DATA.XLSX into the SYM_NAME sym object.\nsym_obj.import \"c:\\data files\\data.xls\" range=\"GDP data\"\nreads the data contained in the \u201cGDP data\u201d sheet of \u201cData.XLS\u201d into the SYM_OBJ object.\n\nHTML Files\nThe syntax for reading HTML pages is:\nThe following table_description elements may be used when reading an HTML file or page:\n\u2022 \u201ctable = arg \u201d, where arg specifies which HTML table to read in an HTML file/page containing multiple tables.\nWhen specifying arg, you should remember that tables are named automatically following the pattern \u201cTable01\u201d, \u201cTable02\u201d, \u201cTable03\u201d, etc . If no table name is specified, the largest table found in the file will be chosen by default. Note that the table numbering may include trivial tables that are part of the HTML content of the file, but would not normally be considered as data tables by a person viewing the page.\n\u2022 \u201cskip = int \u201d, where int is the number of rows to discard from the top of the HTML table.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to import files where the series are contained in rows (one row per series) rather than columns.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file). Note: If a \"range=\" argument is not specified, then EViews will only scan the first five rows of data to try and determine the data format for each column. Likewise, if the \"na=\" argument is not specified, EViews will also try to determine possible NA values by looking for repeated values in the same rows. If the first five rows are not enough to correctly determine the data format, use the \"scan=\" argument to instruct EViews to look at more rows. In addition, you may want to specify a the \"na=\" value to override any dynamic NA value that EViews may determine on its own.\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the table of data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the table of data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nHTML Examples\nsym01.import 01\"c:\\data.html\"\nloads into the SYM01 matrix object the data located in the HTML file \u201cData.HTML\u201d located on the C:\\ drive\nText and Binary Files\nThe syntax for reading text or binary files is:\nIf a table_description is not provided, EViews will attempt to read the file as a free-format text file. The following table_description elements may be used when reading a text or binary file:\n\u2022 \u201cftype = [ascii|binary]\u201d specifies whether numbers and dates in the file are stored in a human readable text (ASCII), or machine readable (Binary) form.\n\u2022 \u201crectype = [crlf|fixed|streamed]\u201d describes the record structure of the file:\n\u201ccrlf\u201d, each row in the output table is formed using a fixed number of lines from the file (where lines are separated by carriage return/line feed sequences). This is the default setting.\n\u201cfixed\u201d, each row in the output table is formed using a fixed number of characters from the file (specified in \u201creclen= arg \u201d). This setting is typically used for files that contain no line breaks.\n\u201cstreamed\u201d, each row in the output table is formed by reading a fixed number of fields, skipping across lines if necessary. This option is typically used for files that contain line breaks, but where the line breaks are not relevant to how rows from the data should be formed.\n\u2022 \u201creclines = int \u201d, number of lines to use in forming each row when \u201crectype=crlf\u201d (default is 1).\n\u2022 \u201creclen= int \u201d, number of bytes to use in forming each row when \u201crectype=fixed\u201d.\n\u2022 \u201crecfields= int \u201d, number of fields to use in forming each row when \u201crectype=streamed\u201d.\n\u2022 \u201cskip= int \u201d, number of lines (if rectype is \u201ccrlf\u201d) or bytes (if rectype is not \u201ccrlf\u201d) to discard from the top of the file.\n\u2022 \u201ccomment= string \u201c, where string is a double-quoted string, specifies one or more characters to treat as a comment indicator. When a comment indicator is found, everything on the line to the right of where the comment indicator starts is ignored.\n\u2022 \u201cemptylines=[keep|drop]\u201d, specifies whether empty lines should be ignored (\u201cdrop\u201d), or treated as valid lines (\u201ckeep\u201d) containing missing values. The default is to ignore empty lines.\n\u2022 \u201ctabwidth= int \u201d, specifies the number of characters between tab stops when tabs are being replaced by spaces (default=8). Note that tabs are automatically replaced by spaces whenever they are not being treated as a field delimiter.\n\u2022 \u201cfieldtype=[delim|fixed|streamed|undivided]\u201d, specifies the structure of fields within a record:\n\u201cDelim\u201d, fields are separated by one or more delimiter characters\n\u201cFixed\u201d, each field is a fixed number of characters\n\u201cStreamed\u201d, fields are read from left to right, with each field starting immediately after the previous field ends.\n\u201cUndivided\u201d, read entire record as a single series.\n\u2022 \u201cquotes=[single|double|both|none]\u201d, specifies the character used for quoting fields, where \u201csingle\u201d is the apostrophe, \u201cdouble\u201d is the double quote character, and \u201cboth\u201d means that either single or double quotes are allowed (default is \u201cboth\u201d). Characters contained within quotes are never treated as delimiters.\n\u2022 \u201csinglequote\u201c, same as \u201cquotes = single\u201d.\n\u2022 \u201cdelim=[comma|tab|space|dblspace|white|dblwhite]\u201d, specifies the character(s) to treat as a delimiter. \u201cWhite\u201d means that either a tab or a space is a valid delimiter. You may also use the abbreviation \u201cd=\u201d in place of \u201cdelim=\u201d.\n\u2022 \u201ccustom=\" arg1 \"\u201d, specifies custom delimiter characters in the double quoted string. Use the character \u201ct\u201d for tab, \u201cs\u201d for space and \u201ca\u201d for any character.\n\u2022 \u201cmult=[on|off]\u201d, to treat multiple delimiters as one. Default value is \u201con\u201d if \u201cdelim\u201d is \u201cspace\u201d, \u201cdblspace\u201d, \u201cwhite\u201d, or \u201cdblwhite\u201d, and \u201coff\u201d otherwise.\n\u2022 \u201cendian = [big|little]\u201d, selects the endianness of numeric fields contained in binary files.\n\u2022 \u201cstring = [nullterm|nullpad|spacepad]\u201d, specifies how strings are stored in binary files. If \u201cnullterm\u201d, strings shorter than the field width are terminated with a single zero character. If \u201cnullpad\u201d, strings shorter than the field width are followed by extra zero characters up to the field width. If \u201cspacepad\u201d, strings shorter than the field width are followed by extra space characters up to the field width.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to import files where the series are contained in rows (one row per series) rather than columns.\n\u2022 \u201clastcol\u201d, include implied last column. For lines that end with a delimiter, this option adds an additional column.\nWhen importing a CSV file, lines which have the delimiter as the last character (for example: \u2018name,description,date,\u2019), EViews normally determines the line to have 3 columns. With the above option, EViews will determine the line to have 4 columns. Note this is not the same as a line containing \u2018name,description,date\u2019. In this case, EViews will always determine the line to have 3 columns regardless if the option is set.\nA central component of the table_description element is the format statement. You may specify the data format using the following table descriptors:\n\u2022 Fortran Format:\nfformat=( [n1]Type[Width][.Precision] , [n2]Type[Width][.Precision] , ...)\nwhere Type specifies the underlying data type, and may be one of the following,\nI - integer\nF - fixed precision\nE - scientific\nA - alphanumeric\nX - skip\nand n1 , n2 , ... are the number of times to read using the descriptor ( default =1). More complicated Fortran compatible variations on this format are possible.\n\u2022 Column Range Format:\nrformat=\" [n1]Type[Width][.Precision] , [n2]Type[Width][.Precision] , ...)\"\nwhere optional type is \u201c$\u201d for string or \u201c#\u201d for number, and n1 , n2 , n3 , n4 , etc . are the range of columns containing the data.\n\u2022 C printf/scanf Format:\ncformat=\" fmt \"\nwhere fmt follows standard C language (printf/scanf) format rules.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201ctypes=(\" arg1 \",\" arg2 \",\u2026)\u201d, user specified data types of the series. If types are provided they will override the types automatically detected by EViews. You may use any of the following format keywords: \u201ca\u201d (character data), \u201cf\u201d (numeric data), \u201cd\u201d (dates), or \u201cw\u201d (EViews automatic detection). This option is rarely used.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file). Note: If a \"range=\" argument is not specified, then EViews will only scan the first five rows of data to try and determine the data format for each column. Likewise, if the \"na=\" argument is not specified, EViews will also try to determine possible NA values by looking for repeated values in the same rows. If the first five rows are not enough to correctly determine the data format, use the \"scan=\" argument to instruct EViews to look at more rows. In addition, you may want to specify a the \"na=\" value to override any dynamic NA value that EViews may determine on its own.\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the table of data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the table of data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nText and Binary File Examples (.txt, .csv, etc.)\nsym2.import c:\\data.csv skip=5\nreads \u201cData.CSV\u201d into SYM2, skipping the first 5 rows.\nsym01.import(type=text) c:\\date.txt delim=comma\nloads the comma delimited data \u201cDate.TXT\u201d into the SYM01 matrix object."}, "label": {"uri": "symcmd-label", "anchor": "", "usage": "sym_name. label\nsym_name. label (options) [text]", "description": "Display or change the label view of the symmetric matrix object, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the symmetric matrix object label."}, "line": {"uri": "graphmaster-line", "anchor": "", "usage": "line (options) o1 [o2 o3 ... ]\nobject_name. line (options) [categorical_spec(arg)]", "description": "Display a line graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the line keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "mixed": {"uri": "graphmaster-mixed", "anchor": "", "usage": "group_name. mixed (options) type_list", "description": "Plots a graph with various graph types.", "long_description": "The type_list argument controls the types of graphs included. Include a space delimited list of graph type keywords along with the series attached to that type. Available graph types are \u201cline\u201d, \u201cbar\u201d, \u201carea\u201d, \u201cspike\u201d, \u201cband\u201d, \u201cstackedline\u201d, \u201cstackedbar\u201d, \u201cstackedarea\u201d, and \u201cstackedspike\u201d.\nEach keyword should be followed by parenthesis containing a comma separated list of series which will be graphed with that type. Series can be specified by name or by a number corresponding to their position in the group."}, "olepush": {"uri": "symcmd-olepush", "anchor": "", "usage": "sym_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "pie": {"uri": "graphmaster-pie", "anchor": "", "usage": "pie (options) o1 o2 [o3 ... ]\nobject_name. pie (options) [categorical_spec(arg)]", "description": "Display a pie chart view.", "long_description": "In the default setting, there will be one pie for each date or observation number. Each series or column of data is shown as a wedge in a different color/pattern, where the width of the wedge equals the percentage contribution of the series or column to the total of all listed series or columns. Negative and missing values are treated as zeros.\nwhere o1 , o2 , ..., are series or group objects. You may specify general graph characteristics by including options following the pie keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "qqplot": {"uri": "graphmaster-qqplot", "anchor": "", "usage": "qqplot (options) o1 [o2 o3 ... ]\nobject_name. qqplot (options) analytical_spec(arg) [categorical_spec(arg)]", "description": "Display a quantile-quantile graph.", "long_description": "Plots the (empirical) quantiles of a series or matrix column against either the quantiles of a theoretical distribution or the empirical quantiles of other series or columns in the group or matrix. You may specify the theoretical distribution and/or the method used to compute the empirical quantiles as options.\nwhere o1 , o2 , ..., are series or group objects.\nWhen used as a command, qqplot displays the theoretical qq-plot against a fitted normal distribution.\nWhen used to display the view of an object, you must specify a theoretical or empirical quantile graph in the analytical_spec (see \u201cAnalytical Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "read": {"uri": "symcmd-read", "anchor": "", "usage": "matrix_name. read (options) [path \\] file_name", "description": "Import data from a foreign disk file into a symmetric matrix.", "long_description": "(This is a deprecated method of importing into a sym. See Sym::import for the currently supported method.)\nMay be used to import data into an existing workfile from a text, Excel, or Lotus file on disk.\nYou must supply the name of the source file. If you do not include the optional path specification, EViews will look for the file in the default directory. Path specifications may point to local or network drives. If the path specification contains a space, you may enclose the entire expression in double quotation marks."}, "resize": {"uri": "symcmd-resize", "anchor": "", "usage": "sym_name. resize rows/cols", "description": "Resize the sym object."}, "scat": {"uri": "graphmaster-scat", "anchor": "", "usage": "scat (options) o1 o2 [o3 ... ]\nobject_name. scat (options) [auxiliary_spec(arg)] [categorical_spec(arg)]", "description": "Display a scatterplot (if possible).", "long_description": "A scatterplot graph plots the values of one series or column against another using symbols.\nThere must be at least two series or columns to create a scatterplot. By default, the first series or column will be located along the horizontal axis, and the remaining data on the vertical axis. You may optionally choose to plot the data in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth, or to construct graphs using all possible pairs (or the lower triangular set of pairs).\nScatterplots are simply XY-line plots with symbols turned on and lines turned off (see Graph::setelem ).\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the scat keyword, you may specify general graph characteristics using options . Available options include plotting the data in pairs or in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "scatmat": {"uri": "graphmaster-scatmat", "anchor": "", "usage": "scatmat (options) o1 o2 [o3 ... ]\nobject_name. scatmat (options) [auxiliary_spec(arg)]", "description": "Display a matrix of scatterplots.", "long_description": "The scatmat view forms pairs using all possible pairwise combinations for the series or columns and constructs a plot for each pair, using specialized positioning and axis labeling.\nScatterplots are simply XY-line plots with symbols turned on and lines turned off (see Graph::setelem ). The scatmat graph type is equivalent to using scat with the \u201cmult=mat\u201d or \u201cmult=lower\u201d option indicating that the data should be graphed using the full or lower-triangular matrix of pairs.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the scatmat keyword, you may specify general graph characteristics using options . Available options include template application and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d )."}, "scatpair": {"uri": "graphmaster-scatpair", "anchor": "", "usage": "scatpair (options) o1 o2 [o3 ... ]\nobject_name. scatpair (options) [auxiliary_spec(arg)]", "description": "Display a scatterplot pairs graph (if possible).", "long_description": "The data will be plotted in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth. If the number of series or columns is odd, the last one will be ignored.\nScatterplots are simply XY plots with symbols turned on and lines turned off (see Graph::setelem ). The scatpair graph type is equivalent to using scat with the \u201cmult=pairs\u201d option indicating that the data should be graphed in pairs.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the scatpair keyword, you may specify general graph characteristics using options . Available options include plotting the data in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d )."}, "setattr": {"uri": "symcmd-setattr", "anchor": "", "usage": "sym_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}, "setcollabels": {"uri": "symcmd-setcollabels", "anchor": "", "usage": "sym_name. setcollabels label1 label2 label3....", "description": "Set the column labels in a sym object.", "long_description": "Follow the setcollabels command with a space delimited list of column labels. Note that each column label should not contain spaces unless it is enclosed in quotes. If you provide fewer labels than there are columns, EViews will keep the corresponding default column names (\u201cC11\u201d, \u201cC12\u201d, etc...)."}, "setformat": {"uri": "symcmd-setformat", "anchor": "", "usage": "matrix_name. setformat format_arg", "description": "Set the display format for cells in a symmetric matrix object spreadsheet view.", "long_description": "where format_arg is a set of arguments used to specify format settings. If necessary, you should enclose the format_arg in double quotes.\nFor symmetric matrices, setformat operates on all of the cells in the matrix.\nTo format numeric values, you should use one of the following format specifications:\n\ng [.precision] significant digits f [.precision] fixed decimal places c [.precision] fixed characters e [.precision] scientific/float p [.precision] percentage r [.precision] fraction\nTo specify a format that groups digits into thousands using a comma separator, place a \u201ct\u201d after the format character. For example, to obtain a fixed number of decimal places with commas used to separate thousands, use \u201cft [.precision] \u201d.\nTo use the period character to separate thousands and commas to denote decimal places, use \u201c..\u201d (two periods) when specifying the precision. For example, to obtain a fixed number of characters with a period used to separate thousands, use \u201cct [..precision] \u201d.\nIf you wish to display negative numbers surrounded by parentheses ( i.e. , display the number -37.2 as \u201c(37.2)\u201d), you should enclose the format string in \u201c()\u201d ( e.g. , \u201cf(.8)\u201d)."}, "setindent": {"uri": "symcmd-setindent", "anchor": "", "usage": "matrix_name. setindent indent_arg", "description": "Set the display indentation for cells in a symmetric matrix object spreadsheet view.", "long_description": "where indent_arg is an indent value specified in 1/5 of a width unit. The width unit is computed from representative characters in the default font for the current spreadsheet (the EViews spreadsheet default font at the time the spreadsheet was created), and corresponds roughly to a single character. Indentation is only relevant for non-center justified cells.\nThe default indentation setttings are taken from the Global Defaults for spreadsheet views ( \u201cSpreadsheet Data Display\u201d ) at the time the spreadsheet was created.\nFor symmetric matrices, setindent operates on all of the cells in the matrix."}, "setjust": {"uri": "symcmd-setjust", "anchor": "", "usage": "sym_name. setjust format_arg", "description": "Set the horizontal justification for all cells in the spreadsheet view of the sym object.", "long_description": "where format_arg may be set to left, center, right, or auto (strings are left-justified and numbers are right-justified). Default display settings can be set in General Options; see \u201cSpreadsheet Data Display\u201d ."}, "setrowlabels": {"uri": "symcmd-setrowlabels", "anchor": "", "usage": "sym_name. setrowlabels label1 label2 label3....", "description": "Set the row labels in a sym object.", "long_description": "Follow the setrowlabels command with a space delimited list of row labels. Note that each row label should not contain spaces unless it is enclosed in quotes. If you provide fewer labels than there are rows, EViews will use the corresponding default row names (\u201cR11\u201d, \u201cR12\u201d, etc...)."}, "setwidth": {"uri": "symcmd-setwidth", "anchor": "", "usage": "matrix_name. setwidth width_arg", "description": "Set the column width for all columns in a symmetric matrix object spreadsheet.", "long_description": "where width_arg specifies the width unit value. The width unit is computed from representative characters in the default font for the current spreadsheet (the EViews spreadsheet default font at the time the spreadsheet was created), and corresponds roughly to a single character. width_arg values may be non-integer values with resolution up to 1/10 of a width unit."}, "sheet": {"uri": "symcmd-sheet", "anchor": "", "usage": "matrix_name. sheet (options)", "description": "Spreadsheet view of a symmetric matrix object."}, "showlabels": {"uri": "symcmd-showlabels", "anchor": "", "usage": "sym_name. showlabels mode", "description": "Displays the custom row and column labels of a sym spreadsheet.", "long_description": "where mode is either 0 or 1 where 0 displays the default row and column labels and 1 displays the custom row and column labels (if present)."}, "spike": {"uri": "graphmaster-spike", "anchor": "", "usage": "spike (options) o1 [o2 o3 ... ]\nobject_name. spike (options) [categorical_spec(arg)]", "description": "Display a spike graph view.", "long_description": "where o1 , o2 , ..., are series or group objects.\nFollowing the spike keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "stats": {"uri": "symcmd-stats", "anchor": "", "usage": "matrix_name. stats (options)", "description": "Descriptive statistics.", "long_description": "Computes and displays a table of means, medians, maximum and minimum values, standard deviations, and other descriptive statistics of each column in the symmetric matrix."}, "write": {"uri": "symcmd-write", "anchor": "", "usage": "matrix_name. write (options) [path\\filename]", "description": "Write EViews data to a text (ASCII), Excel, or Lotus file on disk.", "long_description": "Creates a foreign format disk file containing EViews data. May be used to export EViews data to another program.\nThis routine should realistically only be used in the oft-hand chance that you wish to write into a Lotus file. Improved Excel, text, and other format writing is available in Sym::export .\nFollow the name of the matrix object by a period, the keyword, and the name for the output file. The optional path name may be on the local machine, or may point to a network drive. If the path name contains spaces, enclose the entire expression in double quotation marks. The entire matrix will be exported.\nNote that EViews cannot, at present, write into an existing file. The file that you select will, if it exists, be replaced."}, "xyarea": {"uri": "graphmaster-xyarea", "anchor": "", "usage": "xyarea (options) o1 o2 [o3 ... ]\nobject_name. xyarea (options)", "description": "Display an XY area graph view (if possible).", "long_description": "An XY area graph plots the values of one series or column against another. It is similar to a XY line, but with the region between the line and the zero horizontal axis filled.\n(Note that XY area graphs are typically employed only when data along the horizontal axis are ordered.)\nThere must be at least two series or columns to create an XY area graph. By default, the first series or column will be located along the horizontal axis, with the remaining data on the vertical axis. You may optionally choose to plot the data in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth, or to construct graphs using all possible pairs (or the lower triangular set of pairs).\nwhere o1 , o2 , ..., are series or group objects."}, "xybar": {"uri": "graphmaster-xybar", "anchor": "", "usage": "xybar (options) o1 o2 [o3 ... ]\nobject_name. xybar (options)", "description": "Display an XY bar graph view (if possible).", "long_description": "An XY bar graph displays the data in sets of three series or columns as a vertical bar. For a given observation, the values in the first two series or columns define a region along the horizontal axis, while the value in the third series or column defines the vertical height of the bar.\nXY bar graphs may, for example, be used to construct variable width histograms.\nwhere o1 , o2 , ..., are series or group objects."}, "xyerrbar": {"uri": "graphmaster-xyerrbar", "anchor": "", "usage": "xyerrbar (options) o1 o2 o3 o4 [o5 ... ]\nobject_name. xyerrbar (options)", "description": "Display an XY error bar graph view (if possible).", "long_description": "The data must be in the form of a multiple of four series or columns. The first series is the x-axis points. The second series is the high error bar and the third series is the low error bar. The fourth series or column is the data of interest plotted as a symbol.\nwhere o1, o2, o3, o4,... are series or group objects."}, "xyline": {"uri": "graphmaster-xyline", "anchor": "", "usage": "xyline (options) o1 o2 [o3 ... ]\nobject_name. xyline (options) [auxiliary_spec(arg)] [categorical_spec(arg)]", "description": "Display an XY line graph view (if possible).", "long_description": "There must be at least two series or columns to create an XY line graph. By default, the first series or column will be located along the horizontal axis, with the remaining data on the vertical axis. You may optionally choose to plot the data in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth, or to construct graphs using all possible pairs (or the lower triangular set of pairs).\nXY line graphs are simply XY plots with lines turned on and symbols turned off (see Graph::setelem ).\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the xyline keyword, you may specify general graph characteristics using options . Available options include plotting the data in pairs or in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "xypair": {"uri": "graphmaster-xypair", "anchor": "", "usage": "xypair (options) o1 o2 [o3 ... ]\nobject_name. xypair (options) [auxiliary_spec(arg)]", "description": "Display an XY pairs graph (if possible).", "long_description": "The data will be plotted in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth. If the number of series or columns is odd, the last one will be ignored.\nXY line graphs are simply XY plots with lines turned on and symbols turned off (see Graph::setelem ). The xypair graph type is equivalent to using xyline with the \u201cmult=pairs\u201d option indicating that the data should be graphed in pairs.\nFollowing the xypair keyword, you may specify general graph characteristics using options . Available options include plotting the data in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d )."}}, "UserObj": {"[UserObj]": {"uri": "userobjcmd-Userobj", "anchor": "", "description": "Userobj (user-defined object)."}, "@attr": {"uri": "userobjcmd-Userobj", "anchor": "ww116922", "usage": "@attr(\" arg \")", "description": "string containing the value of the arg attribute, where the argument is specified as a quoted string ."}, "@description": {"uri": "userobjcmd-Userobj", "anchor": "ww111212", "usage": "@description", "description": "string containing the user object\u2019s description (if available)."}, "@detailedtype": {"uri": "userobjcmd-Userobj", "anchor": "ww111133", "usage": "@detailedtype", "description": "string with the object type: \u201cUSEROBJ\u201d."}, "@displayname": {"uri": "userobjcmd-Userobj", "anchor": "ww111134", "usage": "@displayname", "description": "string containing the user object\u2019s display name. If the user object has no display name set, the name is returned."}, "@hasmember": {"uri": "userobjcmd-Userobj", "anchor": "ww111540", "usage": "@hasmember(\u201c name\u201d )", "description": "returns a 1 or a 0 depending on whether the user object has a data member called name ."}, "@members": {"uri": "userobjcmd-Userobj", "anchor": "ww111553", "usage": "@members", "description": "space delimited list of all the user-defined members currently stored inside the user object."}, "@name": {"uri": "userobjcmd-Userobj", "anchor": "ww111135", "usage": "@name", "description": "string containing the user object\u2019s name."}, "@remarks": {"uri": "userobjcmd-Userobj", "anchor": "ww111136", "usage": "@remarks", "description": "string containing the user object\u2019s remarks (if available)."}, "@type": {"uri": "userobjcmd-Userobj", "anchor": "ww111138", "usage": "@type", "description": "string with the object type: \u201cUSEROBJ\u201d."}, "@updatetime": {"uri": "userobjcmd-Userobj", "anchor": "ww111547", "usage": "@updatetime", "description": "string representation of the time and date at which the user object was last updated."}, "add": {"uri": "userobjcmd-add", "anchor": "", "usage": "userobject_name. add( options ) member arg\nuserobject_name. add( options ) [member] objname", "description": "Add a data or object member to the user object.", "long_description": "Adds a new data or object member to the user object. You may either create a new string or scalar member directly, or copy an existing object from the current workfile page. Note that only view objects (tables, graphs, text objects or spools) or matrix objects can be copied to a user object as members.\nIf creating a new member inside the user object, you should specify the name of the member with member, and then specify its value with arg. If arg is a number, the new member will be created as a scalar, if arg is a string, the new member will be a string.\nIf copying the member from the current workfile page, you should use objname to specify the name of the object in the workfile you wish to copy. If you would like to give the member a different name inside the user object, you can specify that name with member ."}, "clear": {"uri": "userobjcmd-clear", "anchor": "", "usage": "userobject_name. clear", "description": "Removes all members from the user object."}, "clearhist": {"uri": "userobjcmd-clearhist", "anchor": "", "usage": "userobj_name. clearhist", "description": "Clear the contents of the history attribute.", "long_description": "Removes the user object\u2019s history attribute, as shown in the label view of the user object."}, "clearremarks": {"uri": "userobjcmd-clearremarks", "anchor": "", "usage": "userobj_name. clearremarks", "description": "Clear the contents of the remarks attribute.", "long_description": "Removes the user object\u2019s remarks attribute, as shown in the label view of the user object."}, "copy": {"uri": "userobjcmd-copy", "anchor": "", "usage": "userobj_name. copy\nuserobj_name. copy dest_name", "description": "Creates a copy of the userobj.", "long_description": "Creates either a named or unnamed copy of the user object."}, "display": {"uri": "userobjcmd-display", "anchor": "", "usage": "userobject_name. display object_name", "description": "Display table, graph, or spool output in the user object window.", "long_description": "Display the contents of a table, graph, or spool in the window of the user object."}, "displayname": {"uri": "userobjcmd-displayname", "anchor": "", "usage": "userobject_name. displayname display_name", "description": "Display name for user objects.", "long_description": "Attaches a display name to a user object.\nDisplay names are case-sensitive, and may contain a variety of characters, such as spaces, that are not allowed in user object object names."}, "drop": {"uri": "userobjcmd-drop", "anchor": "", "usage": "userobject_name. drop member", "description": "Removes a member from the user object.", "long_description": "Removes the member member from the user object."}, "extract": {"uri": "userobjcmd-extract", "anchor": "", "usage": "userobject_name. extract member [ wfname ]", "description": "Displays or copies a member from the user object.", "long_description": "Copies the data member specified by member into the current workfile page. If wfname is not specified, a new untitled object will be created, allowing you to quickly inspect the contents of the data member. If wfname is given, a new object in the workfile will be created with a name equal to wfname .."}, "label": {"uri": "userobjcmd-label", "anchor": "", "usage": "userobject_name. label\nuserobject_name. label (options) [text]", "description": "Display or change the label view of a user object, including the last modified date and display name (if any).", "long_description": "As a procedure, label changes the fields in the user object label."}, "members": {"uri": "userobjcmd-members", "anchor": "", "usage": "userobject_name. members (options)", "description": "Displays a list of all members currently stored inside the user object."}, "olepush": {"uri": "userobjcmd-olepush", "anchor": "", "usage": "userobj_name. olepush", "description": "Push updates to OLE linked objects in open applications."}, "setattr": {"uri": "userobjcmd-setattr", "anchor": "", "usage": "userobject_name. setattr (attr) attr_value", "description": "Set the object attribute.", "long_description": "Sets the attribute attr to attr_value . Note that quoting the arguments may be required. Once added to an object, the attribute may be extracted using the @attr data member."}}, "Commands": {"[Commands]": {"uri": "commandcmd-Command_Reference", "anchor": "", "description": "Command Actions"}, "addin": {"uri": "commandcmd-addin", "anchor": "", "usage": "addin (options) [path\\]prog_name", "description": "Register a program file as an EViews Add-in.", "long_description": "registers the specified program file as an EViews Add-in. Note that the program file should have a \u201c.PRG\u201d extension, which you need not specify in the prog_name .\nIf you do not provide the optional path specification, EViews looks for the program file in the default EViews Add-ins directory.\nExplicit path specifications containing \u201c.\\\u201d and \u201c..\\\u201d (to indicate the current level and one directory level up) are evaluated relative the directory of the installer program in which the addin command is specified, or the EViews default directory if addin is run from the command line.\nYou may use the special \u201c<addins>\u201ddirectory keyword in your path specification."}, "adduo": {"uri": "commandcmd-adduo", "anchor": "", "usage": "adduo (options) [path\\]definition_name", "description": "Register an EViews user object class.", "long_description": "registers the specified definition file as an EViews user object. Note that the definition file should have a \u201c.INI\u201d extension.\nIf you do not provide the optional path specification, EViews looks for the program file in the default EViews user objects directory.\nExplicit path specifications containing \u201c.\\\u201d and \u201c..\\\u201d (to indicate the current level and one directory level up) are evaluated relative the directory of the installer program in which the adduo command is specified, or the EViews default directory if adduo is run from the command line."}, "alpha": {"uri": "alphacmd-alpha_2", "anchor": "", "usage": "alpha ser_name\nalpha ser_name=formula", "description": "Declare an alpha series object.", "long_description": "The alpha command creates and optionally initializes an alpha series, or modifies an existing series.\nThe alpha command should be followed by either the name of a new alpha series, or an explicit or implicit expression for generating the series. If you create a series and do not initialize it, the series will be filled with the blank string \u201c\u201d."}, "arch": {"uri": "commandcmd-arch", "anchor": "", "usage": "arch (p,q,options) y [x1 x2 x3] [ @ p1 p2 [ @ t1 t2]]\narch (p,q,options) y = expression [ @ p1 p2 [ @ t1 t2]]", "description": "Estimate generalized autoregressive conditional heteroskedasticity (GARCH) models.", "long_description": "The first two options specify the order of the GARCH model:\n\u2022 The arch estimation method specifies a GARCH( p , q ) model with p ARCH terms and q GARCH terms. Note the order of the arguments in which the ARCH and GARCH terms are entered.\nThe maximum value for [img:../content/images/commandcmd.092.004.1.jpg] or [img:../content/images/commandcmd.092.004.2.jpg] is 9; values above will be set to 9. The minimum value for [img:../content/images/commandcmd.092.004.3.jpg] is 1. The minimum value for [img:../content/images/commandcmd.092.004.4.jpg] is 0. If either [img:../content/images/commandcmd.092.004.5.jpg] or [img:../content/images/commandcmd.092.004.6.jpg] is not specified, EViews will assume a corresponding order of 1. Thus, a GARCH(1, 1) is assumed by default.\n\u2022 For Fractional Exponential GARCH models (FIEGARCH), EViews only estimates FIEGARCH(1,1) models. For these specifications, [img:../content/images/commandcmd.092.004.7.jpg] and [img:../content/images/commandcmd.092.004.8.jpg] options should not be specified, and if provided, will be ignored.\nAfter the \u201cARCH\u201d keyword and options, specify the dependent variable followed by a list of regressors in the mean equation.\n\u2022 By default, only the intercept is included in the conditional variance equation. If you wish to specify variance regressors, list them after the mean equation using an \u201c@\u201d-sign to separate the mean from the variance equation.\n\u2022 When estimating component ARCH models, you may specify exogenous variance regressors for both the permanent and transitory components. After the mean equation regressors, first list the regressors for the permanent component, followed by an \u201c@\u201d-sign, then the regressors for the transitory component. A constant term is always included as a permanent component regressor."}, "archtest": {"uri": "commandcmd-archtest", "anchor": "", "usage": "archtest ( options )", "description": "Test for autoregressive conditional heteroskedasticity (ARCH).", "long_description": "Carries out Lagrange Multiplier (LM) tests for ARCH in the residuals.\nNote that a more general version of the ARCH test is available using Equation::archtest ."}, "ardl": {"uri": "commandcmd-ardl", "anchor": "", "usage": "ardl ( options ) linear_regs [@ static_regs] [@ asy dual_asymmetric_regs] [@ asylr long_run_asymmetric_regs] [@ asysr short_run_asymmetric_regs]", "description": "Estimate an equation with autoregressive distributed lags using least squares.", "long_description": "The linear_regs specification is required:\n\u2022 The linear_regs list should be the dependent variable followed by a list of linear distributed-lag regressors.\nThe remaining specifications are optional\n\u2022 static_regs should be a list of static regressors, not including a constant or trend term.\n\u2022 dual_asymmetric_regs are distributed-lag regressors which are asymmetric both in the short-run and long-run.\n\u2022 long_run_asymmetric_regs regressors are distributed lag-regressors which are asymmetric in the long-run but symmetric in the short-run.\n\u2022 short_run_asymmetric_regs are asymmetric regressors which are distributed lag-regressors which are asymmetric in the short-run but symmetric in the long-run.\nYou may specify the lag for an individual distributed-lag variable using the \u201c @fl(variable, lag) \u201d syntax. For instance, if the variable X should use 3 lags, irrespective of the fixed or automatic lag settings, you may specify this by entering \u201c@fl(x, 3)\u201d in the regressor list."}, "area": {"uri": "graphmaster-area", "anchor": "", "usage": "area (options) o1 [o2 o3 ... ]\nobject_name. area (options) [categorical_spec(arg)]", "description": "Display an area graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the area keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "auto": {"uri": "commandcmd-auto", "anchor": "", "usage": "auto ( order , options )", "description": "Compute serial correlation LM (Lagrange multiplier) test.", "long_description": "Carries out Breusch-Godfrey Lagrange Multiplier (LM) tests for serial correlation in the estimation residuals from the default equation.\nYou must specify the order of serial correlation for which you wish to test. You should specify the number of lags in parentheses after the auto keyword, followed by any additional options."}, "band": {"uri": "graphmaster-band", "anchor": "", "usage": "band (options) o1 [o2 o3 ... ]\nobject_name. band (options)", "description": "Display an area band graph view (if possible).", "long_description": "An area band graph fills the area between pairs of series or columns of a matrix.\nwhere o1 , o2 , ..., are series or group objects. Following the band keyword, you may specify general graph characteristics using options . Available options include axis settings and template application."}, "bar": {"uri": "graphmaster-bar", "anchor": "", "usage": "bar (options) o1 [o2 o3 ... ]\nobject_name. bar (options) [categorical_spec(arg)]", "description": "Display a bar graph.", "long_description": "(Note: when the individual bars in a bar graph become too thin to be distinguished, the graph will automatically be converted into an area graph; see area .)\nwhere o1 , o2 , ..., are series or group objects. Following the bar keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "binary": {"uri": "commandcmd-binary", "anchor": "", "usage": "binary (options) y x1 [x2 x3 ... ]\nbinary (options) specification", "description": "Estimate binary dependent variable models.", "long_description": "Estimates models where the binary dependent variable Y is either zero or one (probit, logit, gompit)."}, "boxplot": {"uri": "graphmaster-boxplot", "anchor": "", "usage": "boxplot (options) o1 [o2 o3 ... ]\nobject_name. boxplot (options) [categorical_spec(arg)]", "description": "Display boxplots for each series or column.", "long_description": "where o1 , o2 , ..., are series or group objects. You may specify general options after the boxplot keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "breakls": {"uri": "commandcmd-breakls", "anchor": "", "usage": "breakls (options) y z1 [z2 z3 ...] [ @nv x1 x2 x3 ...]", "description": "Estimation by linear least squares regression with breakpoints.", "long_description": "List the dependent variable first, followed by a list of the independent variables that have coefficients which are allowed to vary across breaks, followed optionally by the keyword @nv and a list of non-varying coefficient variables."}, "cause": {"uri": "commandcmd-cause", "anchor": "", "usage": "cause (n, options) ser1 ser2 ser3", "description": "Granger causality test.", "long_description": "Performs pairwise Granger causality tests between (all possible) pairs of the listed series or group of series.\nFollowing the keyword, list the series or group of series for which you wish to test for Granger causality."}, "ccopy": {"uri": "commandcmd-ccopy", "anchor": "", "usage": "ccopy series_name", "description": "Copy one or more series from the DRI Basic Economics database to EViews data bank (.DB) files.", "long_description": "You must have the DRI database installed on your computer to use this feature.\nType the name of the series or wildcard expression for series you want to copy after the ccopy keyword. The data bank files will be stored in the default directory with the same name as the series names in the DRI database. You can supply path information to indicate the directory for the data bank files."}, "cd": {"uri": "commandcmd-cd", "anchor": "", "usage": "cd path_name", "description": "Change default directory.", "long_description": "The cd command changes the current default working directory. The current working directory is displayed in the \u201cPath=...\u201d message in the bottom right of the EViews window.\nNote that the default directory is not used for processing of include files (see include )."}, "censored": {"uri": "commandcmd-censored", "anchor": "", "usage": "censored (options) y x1 [x2 x3]\ncensored (options) specification", "description": "Estimation of censored and truncated models.", "long_description": "Estimates models where the dependent variable is either censored or truncated. The allowable specifications include the standard Tobit model."}, "cfetch": {"uri": "commandcmd-cfetch", "anchor": "", "usage": "cfetch series_name", "description": "Fetch a series from the DRI Basic Economics database into a workfile.", "long_description": "cfetch reads one or more series from the DRI Basic Economics Database into the active workfile. You must have the DRI database installed on your computer to use this feature."}, "chdir": {"uri": "commandcmd-chdir", "anchor": "", "description": "Change default directory.", "long_description": "See cd ."}, "chow": {"uri": "commandcmd-chow", "anchor": "", "usage": "chow (options) obs1 [obs2 obs3 ...] @ x1 x2 x3", "description": "Chow test for stability.", "long_description": "Carries out Chow breakpoint or Chow forecast tests for parameter constancy.\nYou must provide the breakpoint observations (using dates or observation numbers) to be tested. To specify more than one breakpoint, separate the breakpoints by a space. For the Chow breakpoint test, if the equation is specified by list and contains no linear terms, you may specify a subset of the regressors to be tested for a breakpoint after an \u201c@\u201d sign."}, "clabel": {"uri": "commandcmd-clabel", "anchor": "", "usage": "clabel series_name", "description": "Display a DRI Basic Economics database series description.", "long_description": "clabel reads the description of a series from the DRI Basic Economics Database and displays it in the status line at the bottom of the EViews window.\nUse this command to verify the contents of a given DRI database series name. You must have the DRI database installed on your computer to use this feature."}, "close": {"uri": "commandcmd-close", "anchor": "", "usage": "close option_or_name", "description": "Close object, program, or workfile.", "long_description": "Closing an object eliminates its window. If the object is named, it is still displayed in the workfile as an icon, otherwise it is deleted. Closing a program or workfile eliminates its window and removes it from memory. If a workfile has changed since you activated it, you will see a dialog box asking if you want to save it to disk."}, "coef": {"uri": "coefcmd-coef_2", "anchor": "", "usage": "coef (n) coef_name", "description": "Declare a coefficient (column) vector.", "long_description": "Follow the coef keyword with the number of coefficients in parentheses, and a name for the object. If you omit the number of coefficients, EViews will create a vector of length 1."}, "coint": {"uri": "commandcmd-coint", "anchor": "", "description": "Perform either (1) Johansen\u2019s system cointegration test, (2) Engle-Granger or Phillips-Ouliaris single equation cointegration testing, or (3) Pedroni, Kao, or Fisher panel cointegration testing for the specified series.", "long_description": "There are three forms for the coint command which depend on the form of the test you wish to perform:"}, "cointreg": {"uri": "commandcmd-cointreg", "anchor": "", "usage": "cointreg (options) y x1 [x2 x3 ...] [ @determ determ_spec] [ @regdeterm regdeterm_spec]", "description": "Estimate a cointegrating equation using Fully Modified OLS (FMOLS), Canonical Cointegrating Regression (CCR), or Dynamic OLS (DOLS) in single time series settings, and Panel FMOLS and DOLS in panel workfiles.", "long_description": "List the coint keyword, followed by the dependent variable and a list of the cointegrating variables.\nCointegrating equation specifications that include a constant, linear, or quadratic trends, should use the \u201ctrend=\u201d option to specify those terms. If any of those terms are in the stochastic regressors equations but not in the cointegrating equation, they should be specified using the \u201cregtrend=\u201d option.\nDeterministic trend regressors that are not covered by the list above may be specified using the keywords @determ and @regdeterm . To specify deterministic trend regressors that enter into the regressor and cointegrating equations, you should add the keyword @determ followed by the list of trend regressors. To specify deterministic trends that enter in the regressor equations but not the cointegrating equation, you should include the keyword @regdeterm followed by the list of trend regressors."}, "commandcap": {"uri": "commandcmd-commandcap", "anchor": "", "usage": "commandcap arg", "description": "Add comment to command capture window.", "long_description": "sends arg to the command capture window. Of particular use to add-in writers for sending notifications to users."}, "copy": {"uri": "commandcmd-copy", "anchor": "", "usage": "copy (options) src_spec dest_spec [src_id dest_id]\ncopy (options) src_spec dest_spec [ @src src_ids @dest dest_id]\n[ctype][container::][page\\] object_name", "description": "Copy an object, or a set of objects matching a name pattern, within and between workfiles, workfile pages, and databases. Data in series objects may be frequency converted or match merged.", "long_description": "where src_spec and dest_spec are of the form:\nThere are three parts to the copy command: (1) a specification of the location and names of the source objects; (2) a specification of the location and names of the destination objects; (3) optional source and destination IDs if the copy operation involves match merging.\nThe source and destination objects are specified in multiple (optional) parts: (1) the container specification is the name of a workfile or database; (2) the page specification is the name of a page within a workfile or a subdirectory within a database; and (3) the object_name specification is the name of an object or a wildcard pattern corresponding to multiple objects.\nThe ctype specification is rarely required, but permits you to specify precisely your source or destination in cases where a database and workfile share the same name. In this case, ctype may be used to indicate the container to which you are referring by prefixing the container name with \u201c:\u201d to indicate the workfile, or \u201c::\u201d to indicate the database with the common name.\nWhen parts of the source or destination specification are not provided, EViews will fill in default values where possible. The default container is the active workfile, unless the \u201c::\u201d prefix is used in which case the default container is the default database. The default page within a workfile is always the active page. The default name for the destination object is the name of the object within the source container.\nIf ID series are not provided in the command, then EViews will perform frequency conversion when copying data whenever the source and destination containers have different frequencies. If ID series are provided, then EViews will perform a general match merge between the source and destination using the specified ID series. In the case where you wish to copy your data using match merging with special treatment for date matching, you must use the special keyword \u201c@DATE\u201d as an ID series for the source or destination. If \u201c@DATE\u201d is not specified as an identifier in either the source or destination IDs, EViews will perform an exact match merge using the given identifiers.\nIf ID series are not specified, but a conversion option requiring a general match merge is used ( e.g. , \u201cc=med\u201d), \u201c@DATE @DATE\u201d will be appended to the list of IDs and a general date match merge will be employed.\nSee Link::linkto for additional discussion of the differences embodied in these choices.\nThe general syntax described above covers all possible uses of the copy command. The following paragraphs provide examples of the specific syntax used for some common cases of the command."}, "cor": {"uri": "commandcmd-cor", "anchor": "", "usage": "cor (options) arg1 [arg2 arg3...]", "description": "Compute Pearson product-moment (ordinary) correlations for the specified series or groups.", "long_description": "where arg1 , arg2 , etc. are the names of series or groups.\nNote that this command is a limited feature version of the group view Group::cor ."}, "count": {"uri": "commandcmd-count", "anchor": "", "usage": "count (options) y x1 [x2 x3...]\ncount (options) specification", "description": "Estimates models where the dependent variable is a nonnegative integer count.", "long_description": "Follow the count keyword by the name of the dependent variable and a list of regressors."}, "cov": {"uri": "commandcmd-cov", "anchor": "", "usage": "cor arg1 [arg2 arg3...]", "description": "Compute Pearson product-moment (ordinary) covariances for the specified series or groups.", "long_description": "where arg1 , arg2 , etc. are the names of series or groups.\nNote that this command is a limited feature version of the group view Group::cov ."}, "create": {"uri": "commandcmd-create", "anchor": "", "description": "Create workfile.", "long_description": "This command has been replaced by wfcreate and pagecreate ."}, "cross": {"uri": "commandcmd-cross", "anchor": "", "usage": "cross (n,options) ser1 ser2 [ser3 ...]", "description": "Displays cross correlations (correlograms) for a pair of series.", "long_description": "You must specify the number of lags n to use in computing the cross correlations as the first option. EViews will create an untitled group from the specified series and groups, and will display the cross correlation view for the group."}, "data": {"uri": "commandcmd-data", "anchor": "", "usage": "data arg1 [arg2 arg3 ...]", "description": "Enter data from keyboard.", "long_description": "Opens an unnamed group window to edit one or more series.\nFollow the data keyword by a list of series and group names. You can list existing names or new names. Unrecognized names will cause new series to be added to the workfile. These series will be initialized with the value \u201cNA\u201d."}, "db": {"uri": "commandcmd-db", "anchor": "", "usage": "db ( options ) [path\\]db_name [ as shorthand_name]", "description": "Open or create a database.", "long_description": "If the specified database does not exist, a new (empty) database will be created and opened. The opened database will become the default database.\nFollow the db command by the name of the database to be opened or to be created (if it does not already exist). You may include a path name to work with a database not in the default path.\nYou may use the \u201cas\u201d keyword to provide an optional shorthand_name or short text label which may be used to refer to the database in commands and programs. If you leave this field blank, a default shorthand_name will be assigned automatically.\nSee \u201cDatabase Shorthands\u201d for additional discussion."}, "dbcopy": {"uri": "commandcmd-dbcopy", "anchor": "", "usage": "dbcopy [path\\]source_name [path\\]copy_name", "description": "Make a copy of an existing database.", "long_description": "Follow the dbcopy command by the name of the existing database and a name for the copy. You should include a path name to copy from or to a database that is not in the default directory. All files associated with the database will be copied."}, "dbcreate": {"uri": "commandcmd-dbcreate", "anchor": "", "usage": "dbcreate (options) [path\\]db_name [ as shorthand_name]", "description": "Create a new database.", "long_description": "Follow the dbcreate keyword by a name for the new database. You may include a path name to create a database not in the default directory. The new database will become the default database.\nYou may use the \u201cas\u201d keyword to provide an optional shorthand_name or a short text label which may be used to refer to the open database in commands and programs. If you leave this field blank, a default shorthand_name will be assigned automatically. See \u201cDatabase Shorthands\u201d for additional discussion."}, "dbdelete": {"uri": "commandcmd-dbdelete", "anchor": "", "usage": "dbdelete [path\\]db_name", "description": "Delete an existing database (all files associated with the specified database).", "long_description": "Follow the dbdelete keyword by the name of the database to be deleted. You may include a path name to delete a database not in the default path."}, "dbopen": {"uri": "commandcmd-dbopen", "anchor": "", "usage": "dbopen (options) [path\\]db_name [ as shorthand_name]", "description": "Open an existing database.", "long_description": "Follow the dbopen keyword with the name of a database. You should include a path name to open a database not in the default path. The opened database will become the default database.\nYou do not need to specify a database name when opening a Datastream or FRED connection (\u201ctype=datastream\u201d or \u201ctype=fred\u201d) as EViews will automatically connect to the proper location.\nYou may use the \u201cas\u201d keyword to provide an optional shorthand_name or a short text label which is used to refer to the open database in commands and programs. If you leave this field blank, a default shorthand_name will be assigned automatically.\nSee \u201cDatabase Shorthands\u201d for additional discussion.\nBy default, EViews will use the extension of the database file to determine type. For example, files with the extension \u201c.EDB\u201d will be opened as an EViews database. You may use the \u201ctype=\u201d option to specify an explicit type."}, "dbpack": {"uri": "commandcmd-dbpack", "anchor": "", "usage": "dbpack [path\\]db_name", "description": "Pack an existing database.", "long_description": "Follow the dbpack keyword by a database name. You may include a path name to pack a database not in the default path."}, "dbrebuild": {"uri": "commandcmd-dbrebuild", "anchor": "", "usage": "dbrebuild [path\\]source_name [path\\]dest_name", "description": "Rebuild an existing database.", "long_description": "Rebuild a seriously damaged database into a new database file.\nFollow the dbrebuild keyword by the name of the database to be rebuilt, and then a new database name."}, "dbrename": {"uri": "commandcmd-dbrename", "anchor": "", "usage": "dbrename [path\\]old_name [path\\]new_name", "description": "Rename an existing database.", "long_description": "dbrename renames all files associated with the specified database.\nFollow the dbrename keyword with the current name of an existing database and the new name for the database."}, "delete": {"uri": "commandcmd-delete", "anchor": "", "usage": "delete (options) arg1 [arg2 arg3 ...]", "description": "Deletes objects from a workfile or a database.", "long_description": "Follow the keyword by a list of the names of any objects you wish to remove from the current workfile. Deleting does not remove objects that have been stored on disk in EViews database files."}, "deleteaddin": {"uri": "commandcmd-deleteaddin", "anchor": "", "usage": "deleteaddin (options) [path\\]prog_name", "description": "Unregister a program file as an EViews Add-in.", "long_description": "unregisters the specified program file as an EViews Add-in.\nIf you do not provide the optional path specification, EViews looks for the program file in the default EViews Add-ins directory.\nExplicit path specifications containing \u201c.\\\u201d and \u201c..\\\u201d (to indicate the current level and one directory level up) are evaluated relative EViews default directory.\nYou may use the special \u201c<addins>\u201d directory keyword in your path specification."}, "did": {"uri": "commandcmd-did", "anchor": "", "usage": "did (options) y [x1] [ @ treatment]", "description": "Estimate a equation in a panel structured workfile using the difference-in-difference estimator.", "long_description": "List the dependent variable, followed by an optional list of exogenous regressors, followed by an \u201c@\u201d and then the binary treatment variable. You should not include a constant in the specification."}, "distplot": {"uri": "graphmaster-distplot", "anchor": "", "usage": "distplot (options) o1 [o2 o3 ... ]\nobject_name. distplot (options) analytical_spec ( arg ) [categorical_spec(arg)]", "description": "Display a distribution graph.", "long_description": "where o1 , o2 , ..., are series or group objects.\nWhen used as a command, distplot only allows you to display the default histogram view.\nWhen used as an object view, you must specify the type of distribution graph you wish to create in the analytical_spec . You may select from: histogram, histogram polygon, histogram edge polygon, average shifted histogram, kernel density, theoretical distribution, empirical CDF, empirical survivor, empirical log survivor, or empirical quantile (see \u201cAnalytical Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )"}, "do": {"uri": "commandcmd-do", "anchor": "", "usage": "do procedure", "description": "Execute without opening window.", "long_description": "Syntax\ndo is most useful in EViews programs where you wish to run a series of commands without opening windows in the workfile area."}, "dot": {"uri": "graphmaster-dot", "anchor": "", "usage": "dot (options) o1 [o2 o3 ... ]\nobject_name. dot (options) [categorical_spec(arg)]", "description": "Display a dot plot graph view.", "long_description": "A dot plot is a symbol only version of the line and symbol graph that uses circles to represent the value of each observation.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the dot keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "driconvert": {"uri": "commandcmd-driconvert", "anchor": "", "usage": "driconvert db_name", "description": "Convert the entire DRI Basic Economics database into an EViews database.", "long_description": "You must create an EViews database to store the converted DRI data before you use this command. This command may be very time-consuming.\nFollow the command by listing the name of an existing EViews database into which you would like to copy the DRI data. You may include a path name to specify a database not in the default path."}, "enet": {"uri": "commandcmd-enet", "anchor": "", "usage": "equation_name .enet (options) y x1 [x2 x3 ...] [@vw(...)]", "description": "Estimation of an elastic net model, including options for Lasso and ridge regression.", "long_description": "List the dependent variable first, followed by a list of the independent variables. Use a \u201c C\u201d if you wish to include a constant or intercept term. Variable weights should be incorporated with the \u201c@vw\u201d tag, e.g. , \u201c@vw(x1, 0.5)\u201d."}, "equation": {"uri": "equationcmd-equation_2", "anchor": "", "usage": "equation eq_name\nequation eq_name. method(options) specification", "description": "Declare an equation object.", "long_description": "Follow the equation keyword with a name and an optional specification. If you wish to enter the specification, you should follow the new equation name with a period, an estimation method, and the equation specification. Valid estimation methods are given in \u201cEquation Methods\u201d . Refer to each method for a description of the available options."}, "errbar": {"uri": "graphmaster-errbar", "anchor": "", "usage": "errbar (options) o1 o2 [o3 ...]\nobject_name. errbar (options)", "description": "Display an error bar graph view (if possible).", "long_description": "If there are two series or columns, the error bar will show the high and low values in the bar. The optional third series or column will be plotted as a symbol.\nwhere o1 , o2 , ..., are series or group objects."}, "exec": {"uri": "commandcmd-exec", "anchor": "", "usage": "exec (options) [path \\] prog_name(prog_options) [%0 %1 \u2026]", "description": "Execute a program.", "long_description": "The exec command executes a program. The program may be located in memory or stored in a program file on disk.\nIf you wish to pass one or more options to the program, you should enclose them in parentheses immediately after the filename. If the program has arguments, you should list them after the filename.\nEViews first checks to see if the specified program is in memory. If the program is not located, EViews then looks for the program on disk in the EViews Add-ins directory , or in the specified path. The program file should have a \u201c.PRG\u201d extension, which you need not specify in the prog_name ."}, "exit": {"uri": "commandcmd-exit", "anchor": "", "usage": "exit", "description": "Exit from EViews (close the EViews application).", "long_description": "You will be prompted to save objects and workfiles which have changed since the last time they were saved to disk. Be sure to save your workfiles, if desired, since all changes that you do not save to a disk file will be lost."}, "expand": {"uri": "commandcmd-expand", "anchor": "", "description": "Expand a workfile.", "long_description": "No longer supported. See the replacement command pagestruct ."}, "facbreak": {"uri": "commandcmd-facbreak", "anchor": "", "usage": "facbreak (options) ser1 [ser2 ser3 ...] @ x1 x2 x3", "description": "Factor breakpoint test for stability.", "long_description": "Carries out a factor breakpoint test for parameter constancy.\nYou must provide one or more series to be used as the factors with which to split the sample into categories. To specify more than one factor, separate the factors by a space. If the equation is specified by list and contains no linear terms, you may specify a subset of the regressors to be tested for a breakpoint after an \u201c@\u201d sign."}, "factest": {"uri": "commandcmd-factest", "anchor": "", "usage": "factest (method=arg, options) x1 [x2 x3...] [ @partial z1 z2 z3...]\nfactest (method=arg, options) matrix_name [[obs] [conditioning]] [ @ name1 name2 name3...]", "description": "Specify and estimate a factor analysis model.", "long_description": "where:\n\nmethod= arg (default= \u201cml\u201d ) Factor estimation method: \u201cml\u201d (maximum likelihood), \u201cgls\u201d (generalized least squares), \u201cipf\u201d (iterated principal factors), \u201cpace\u201d (non-iterative partitioned covariance matrix estimation), \u201cpf\u201d (principal factors), \u201culs\u201d (unweighted least squares)\nand the available options are specific to the factor estimation method (see \u201cFactor Methods\u201d ).\nThe factest command allows you to estimated a factor analysis model without first declaring a factor object and then applying an estimation method. It provides a convenient method of interactively estimating transitory specifications that are not to be named and saved with the workfile.\nEstimation of a factor analysis specification using factest only differs from estimation using a named factor and a factor estimation procedure (e.g., Factor::ipf ) in the use of the \u201cmethod=\u201d option and in the fact that the command results in an unnamed factor object."}, "factor": {"uri": "factorcmd-factor_2", "anchor": "", "usage": "factor factor_name\nfactor factor_name. method(options) specification", "description": "Declare a factor object.", "long_description": "Follow the factor keyword with a name and an optional specification. If you wish to enter the specification, you should follow the new factor name with a period, an estimation method, and the factor analysis specification. Valid estimation methods are gls , ipf , ml , pace , pf , and uls . Refer to each method for a description of the available options."}, "fetch": {"uri": "commandcmd-fetch", "anchor": "", "usage": "fetch (options) object_list", "description": "Fetch objects from databases or databank files into the workfile.", "long_description": "fetch reads one or more objects from EViews databases or databank files into the active workfile. The objects are loaded into the workfile using the object in the database or using the databank file name.\nIf you fetch a series into a workfile with a different frequency, EViews will automatically apply the frequency conversion method attached to the series by setconvert . If the series does not have an attached conversion method, EViews will use the method set by Options/Date-Frequency in the main menu. You can override the conversion method by specifying an explicit conversion method option.\nThe fetch command keyword is followed by a list of object names separated by spaces. The default behavior is to fetch the objects from the default database ( this is a change from versions of EViews prior to EViews 3.x where the default was to fetch from individual databank files).\nYou can precede the object name with a database name and the double colon \u201c::\u201d to indicate a specific database source. If you specify the database name as an option in parentheses (see below), all objects without an explicit database prefix will be fetched from the specified database. You may optionally fetch from individual databank files or search among registered databases.\nYou may use wild card characters, \u201c?\u201d (to match a single character) or \u201c*\u201d (to match zero or more characters), in the object name list. All objects with names matching the pattern will be fetched.\nTo fetch from individual databank files that are not in the default path, you should include an explicit path. If you have more than one object with the same file name (for example, an equation and a series named CONS ), then you should supply the full object file name including identifying extensions."}, "fit": {"uri": "commandcmd-fit", "anchor": "", "usage": "fit (options) yhat [y_se]", "description": "Computes static forecasts or fitted values from an estimated equation.", "long_description": "When the regressor contains lagged dependent values or ARMA terms, fit uses the actual values of the dependent variable instead of the lagged fitted values. You may instruct fit to compare the forecasted data to actual data, and to compute forecast summary statistics.\n(Note that we recommend that you instead use the equation proc Equation::fit since it explicitly specifies the equation of interest.)\nNot available for equations estimated using ordered methods; use Equation::makemodel to create a model using the ordered equation results.\nFollowing the fit keyword, you should type a name for the forecast series and, optionally, a name for the series containing the standard errors and, for ARCH specifications, a name for the conditional variance series.\nForecast standard errors are currently not available for binary, censored, and count models.\nBasic Options\n\nd In models with implicit dependent variables, forecast the entire expression rather than the normalized variable. u Substitute expressions for all auto-updating series in the equation. g Graph the fitted values together with the \u00b12 standard error bands. ga Graph the forecasts along with the actuals (if available). e Produce the forecast evaluation table. i Compute the fitted values of the index. Only for binary, censored and count models. s Ignore ARMA terms and use only the structural part of the equation to compute the fitted values. n Ignore coef uncertainty in standard error calculations that use them. forcsmpl = smpl Fit sample (optional). If forecast sample is not provided, the workfile sample will be employed. f = arg ( default= \u201cactual\u201d) Out-of-fit-sample fill behavior: \u201cactual\u201d (fill observations outside the fit sample with actual values for the fitted variable), \u201cna\u201d (fill observations outside the fit sample with missing values). prompt Force the dialog to appear from within a program. p Print view.\nStochastic Options\nOptions for forecasting from a functional coefficients estimated equation.\n\nstochastic = arg (default = \u201cnone\u201d) Stochastic method: \u201cnone\u201d (none), \u201cmca\u201d (Monte Carlo \u2013asymptotic), \u201cmcbs\u201d (Monte Carlo \u2013 bootstrap), \u201cbs\u201d (bootstrap). reps = integer (default = 999) Number of stochastic replications lhr = arg (default = 0.1) Lower historical range (number between 0 and upper historical range). uhr = arg (default = 0.9) Upper historical range (number between lower historical range and 1). bsdep Bootstrap only the dependent variable (not the functional coefficient variable)."}, "forecast": {"uri": "commandcmd-forecast", "anchor": "", "usage": "forecast (options) yhat [y_se]", "description": "Computes dynamic forecasts of the default equation.", "long_description": "forecast computes the forecast using the default equation for all observations in a specified sample. In some settings, you may instruct forecast to compare the forecasted data to actual data, and to compute summary statistics.\n(Note that we recommend that you instead use the equation proc Equation::forecast since it explicitly specifies the equation of interest.)\nYou should enter a name for the forecast series and, optionally, a name for the series containing the standard errors. Forecast standard errors are currently not available for binary or censored models. forecast is not available for models estimated using ordered methods."}, "freeze": {"uri": "commandcmd-freeze", "anchor": "", "usage": "freeze (options, name) object_name. view_command", "description": "Creates graph, table, or text objects from a view.", "long_description": "If you follow the keyword freeze with an object name but no view of the object, freeze will use the default view for the object. You may provide a destination name for the object containing the frozen view in parentheses."}, "frml": {"uri": "commandcmd-frml", "anchor": "", "usage": "frml series_name = series_expression\nfrml series_name = @clear", "description": "Declare a series object with a formula for auto-updating, or specify a formula for an existing series.", "long_description": "Follow the frml keyword with a name for the object, and an assignment statement. The special keyword \u201c@CLEAR\u201d is used to return the auto-updating series to an ordinary numeric or alpha series."}, "funcoef": {"uri": "commandcmd-funcoef", "anchor": "", "usage": "funcoef ( options ) y x1 [x2 x3 ...] @ funcoef_series", "description": "Estimate a functional coefficient regression equation.", "long_description": "List the funcoef keyword, the dependent variable and a list of the regressor variables, followed by the \u201c@\u201d symbol and the name of the functional coefficient series."}, "genr": {"uri": "commandcmd-genr", "anchor": "", "usage": "genr ser_name = expression", "description": "Generate series.", "long_description": "Generate series or alphas."}, "geomap": {"uri": "geomapcmd-geomap_2", "anchor": "", "usage": "geomap geomap_name", "description": "Declare a geomap object.", "long_description": "Declare a geomap object that is capable of reading Esri ( www.esri.com ) shapefiles. Geomaps are useful for visualizing data that are tied to specific geographic regions."}, "glm": {"uri": "commandcmd-glm", "anchor": "", "usage": "glm (options) spec", "description": "Estimate a Generalized Linear Model (GLM).", "long_description": "List the glm keyword, followed by the dependent variable and a list of the explanatory variables, or an explicit linear expression.\nIf you enter an explicit linear specification such as \u201cY=C(1)+C(2)*X\u201d, the response variable will be taken to be the variable on the left-hand side of the equality (\u201cY\u201d) and the linear predictor will be taken from the right-hand side of the expression (\u201cC(1)+C(2)*X\u201d).\nOffsets may be entered directly in an explicit linear expression or they may be entered as using the \u201coffset=\u201d option."}, "gmm": {"uri": "commandcmd-gmm", "anchor": "", "usage": "gmm (options) y x1 [x2 x3...] @ z1 [z2 z3...]\ngmm (options) specification @ z1 [z2 z3...]", "description": "Estimation by generalized method of moments (GMM).", "long_description": "Follow the name of the dependent variable by a list of regressors, followed by the \u201c@\u201d symbol, and a list of instrumental variables which are orthogonal to the residuals. Alternatively, you can specify an expression using coefficients, an \u201c@\u201d symbol, and a list of instrumental variables. There must be at least as many instrumental variables as there are coefficients to be estimated.\nIn panel settings, you may specify dynamic instruments corresponding to predetermined variables. To specify a dynamic instrument, you should tag the instrument using \u201c@DYN\u201d, as in \u201c@DYN(X)\u201d. By default, EViews will use a set of period-specific instruments corresponding to lags from -2 to \u201c-infinity\u201d. You may also specify a restricted lag range using arguments in the \u201c@DYN\u201d tag. For example, to use lags from-5 to \u201c-infinity\u201d you may enter \u201c@DYN(X, -5)\u201d; to specify lags from -2 to -6, use \u201c@DYN(X, -2, -6)\u201d or \u201c@DYN(X, -6, -2)\u201d.\nNote that dynamic instrument specifications may easily generate excessively large numbers of instruments."}, "graph": {"uri": "graphcmd-graph_2", "anchor": "", "usage": "graph graph_name .graph_command(options) arg1 [arg2 arg3 ...]\ngraph graph_name. merge graph1 graph2 [graph3 ...]", "description": "Create named graph object containing the results of a graph command, or created when merging multiple graphs into a single graph.", "long_description": "Follow the keyword with a name for the graph, a period, and then a statement used to create a graph. There are two distinct forms of the command.\nIn the first form of the command, you create a graph using one of the graph commands, and then name the object using the specified name. The portion of the command given by,\ngraph_command(options) arg1 [arg2 arg3 ...]\nshould follow the form of one of the standard EViews graph commands:\n\narea Area graph ( area ). band Area band graph ( band ). bar Bar graph ( bar ). boxplot Boxplot graph ( boxplot ). distplot Distribution graph ( distplot ). dot Dot plot graph ( dot ). errbar Error bar graph ( errbar ). hilo High-low(-open-close) graph ( hilo ). line Line graph ( line ). pie Pie graph ( pie ). qqplot Quantile-Quantile graph ( qqplot ). scat Scatterplot\u2014same as XY, but lines are initially turned off, symbols turned on, and a [img:../content/images/graphcmd.108.20.1.jpg] frame is used ( scat ). scatmat Matrix of scatterplots ( scatmat ). scatpair Scatterplot pairs graph ( scatpair ). seasplot Seasonal line graph ( seasplot ). spike Spike graph ( spike ). xyarea XY line-symbol graph with one X plotted against one or more Y\u2019s using existing line-symbol settings ( xyarea ). xybar XY line-symbol graph with one X plotted against one or more Y\u2019s using existing line-symbol settings ( xybar ). xyline Same as XY, but symbols are initially turned off, lines turned on, and a [img:../content/images/graphcmd.108.20.2.jpg] frame is used ( xyline ). xypair Same as XY but sets XY settings to display pairs of X and Y plotted against each other ( xypair ).\nIn the second form of the command, you instruct EViews to merge the listed graphs into a single graph, and then name the graph object using the specified name."}, "group": {"uri": "groupcmd-group_2", "anchor": "", "usage": "group group_name ser1 ser2 [ser3 ...]", "description": "Declare a group object containing a group of series.", "long_description": "Follow the group name with a list of series to be included in the group.\nThe wildcard operator, *, may be used as part of the series list to include many series at once. The keywords AND or NOT can be used to specify certain series should not be included in the group."}, "hconvert": {"uri": "commandcmd-hconvert", "anchor": "", "usage": "hconvert haver_path db_name", "description": "Convert an entire Haver Analytics Database into an EViews database.", "long_description": "You must have a Haver Analytics database installed on your computer to use this feature. You must also create an EViews database to store the converted Haver data before you use this command.\nBe aware that this command may be very time-consuming.\nFollow the command by a full path name to the Haver database and the name of an existing EViews database to store the Haver database. You can include a path name to the EViews database not in the default path."}, "heckit": {"uri": "commandcmd-heckit", "anchor": "", "usage": "heckit ( options ) response_eqn @ selection_eqn", "description": "Estimate a selection equation using the Heckman ML or 2-step method.", "long_description": "The response equation should be the dependent variable followed by a list of regressors. The selection equation should be a binary dependent variable followed by a list of regressors."}, "hfetch": {"uri": "commandcmd-hfetch", "anchor": "", "usage": "hfetch (database_name) series_name", "description": "Fetch a series from a Haver Analytics database into a workfile.", "long_description": "hfetch reads one or more series from a Haver Analytics Database into the active workfile. You must have a Haver Analytics database installed on your computer to use this feature.\nhfetch , if issued alone on a command line, will bring up a Haver dialog box which has fields for entering both the database name and the series names to be fetched. If you provide the database name (including the full path) in parentheses after the hfetch command, EViews will read the database and copy the series requested into the current workfile. It will also display information about the series on the status line. The database name is optional if a default database has been specified.\nhfetch can read multiple series with a single command. List the series names, each separated by a space."}, "hilo": {"uri": "graphmaster-hilo", "anchor": "", "usage": "hilo (options) o1 o2 [o3 ...]\nobject_name. hilo (options)", "description": "Display a high-low[-open-close] graph view (if possible).", "long_description": "where o1 , o2 , ..., are series or group objects. For a high-low[-open-close] graph, EViews uses the first series or column as the high series, the second series or column as the low series, and an optional third series or column as the close series. If four series or columns are provided, EViews will use them in the following order: high-low-open-close.\nNote that if you wish to display a high-low-open graph, you should use an \u201cNA\u201d-series for the close values."}, "hist": {"uri": "commandcmd-hist", "anchor": "", "usage": "hist (options) series_name", "description": "Histogram and descriptive statistics of a series.", "long_description": "The hist command computes descriptive statistics and displays a histogram for the series."}, "hlabel": {"uri": "commandcmd-hlabel", "anchor": "", "usage": "hlabel (database_name) series_name", "description": "Display a Haver Analytics database series description.", "long_description": "hlabel reads the description of a series from a Haver Analytics Database and displays it on the status line at the bottom of the EViews window. Use this command to verify the contents of a Haver database series name.\nYou must have a Haver Analytics database installed on your computer to use this feature.\nhlabel , if issued alone on a command line, will bring up a Haver dialog box which has fields for entering both the database name and the series names to be examined. If you provide the database name in parentheses after the hlabel command, EViews will read the database and find the key information about the series in question, such as the start date, end date, frequency, and description. This information is displayed in the status line at the bottom of the EViews window. Note that the database_name should refer to the full path to the Haver database but need not be specified if a default database has been specified in HAVERDIR.INI .\nIf several series names are placed on the line, hlabel will gather the information about each of them, but the information display may scroll by so fast that only the last will be visible."}, "hpf": {"uri": "commandcmd-hpf", "anchor": "", "usage": "hpf (options) series_name filtered_name [@ cycle_name]", "description": "Smooth a series using the Hodrick-Prescott filter."}, "import": {"uri": "commandcmd-import", "anchor": "", "usage": "import ([type=], options) source_description import_specification [ @smpl smpl_string] [ @genr genr_string] [ @rename rename_string]", "description": "Imports data from a foreign file or a previously saved workfile into the current default workfile. The import command lets you perform four different types of data importing: dated reads, match-merge reads, sequential reads, and appends.", "long_description": "Dated imports can only be performed if the destination workfile is a dated workfile. You must specify the date structure of the source data as part of the import command. EViews will then match the date structure of the source with that of the destination, and perform frequency conversion if necessary.\nMatch-merge imports require both a source ID series and a destination ID series. EViews will read the source data into the destination workfile based upon matched values of the two ID series.\nSequential imports will read the source data into the destination workfile by matching the first observation of the source file to the first observation in the destination workfile's current sample, then the second observation of the source with the second observation in the destination's current sample, and so on.\nAppended imports simply append the source data to the end of the destination workfile.\nThe general form of the import command is:\nwhere the syntax for import_specification depends on whether the read is a dated ( \u201cDated Imports\u201d ), match-merge ( \u201cMatch-Merge Import\u201d ), sequential ( \u201cSequential Read\u201d ), or appended import ( \u201cAppended Read\u201d ).\n\u2022 Source_description should contain a description of the file from which the data is to be imported. The specification of the description is usually just the path and file name of the file, however you can also specify more precise information. See wfopen for more details on the specification of source_description .\n\u2022 The optional \u201ctype=\u201d option may be used to specify a source type. For the most part, you should not need to specify a \u201ctype=\u201d option as EViews will automatically determine the type from the filename. The following table summaries the various source formats and along with the corresponding \u201ctype=\u201d keywords:\n\nOption Keywords Access \u201caccess\u201d Aremos-TSD \u201ca\u201d, \u201caremos\u201d, \u201ctsd\u201d Binary \u201cbinary\u201d dBASE \u201cdbase\u201d Excel (through 2003) \u201cexcel\u201d Excel 2007 (xml) \u201cexcelxml\u201d EViews Workfile --- Gauss Dataset \u201cgauss\u201d GiveWin/PcGive \u201cg\u201d, \u201cgive\u201d HTML \u201chtml\u201d Lotus 1-2-3 \u201clotus\u201d ODBC Dsn File \u201cdsn\u201d ODBC Query File \u201cmsquery\u201d ODBC Data Source \u201codbc\u201d MicroTSP Workfile \u201cdos\u201d, \u201cmicrotsp\u201d MicroTSP Mac Workfile \u201cmac\u201d RATS 4.x \u201cr\u201d, \u201crats\u201d RATS Portable / TROLL \u201cl\u201d, \u201ctrl\u201d SAS Program \u201csasprog\u201d SAS Transport \u201csasxport\u201d SPSS \u201cspss\u201d SPSS Portable \u201cspssport\u201d Stata \u201cstata\u201d Text / ASCII \u201ctext\u201d TSP Portable \u201ct\u201d, \u201ctsp\u201d\n\u2022 The optional @smpl keyword may be used to specify that data is only imported for the observations specified by smpl_string . By default, the import will use all of the observations in the workfile. If @smpl is included, but no smpl_string is included, then the current default workfile sample is used.\n\u2022 The optional @genr keyword may be used to generate a new series in the workfile as part of the import procedure. genr_string may be any valid series creation expression, and can be an expression based upon one of the imported series. See genr for information on valid expressions.\n\u2022 The optional @rename keyword may be used to rename some of the imported series where rename_string contains pairs of old object names followed by the new names. See rename for additional discussion.\nIn the remainder of this discussion, we examine each of the different import types in greater depth."}, "importattr": {"uri": "commandcmd-importattr", "anchor": "", "usage": "importattr (options) source_page [ @keep keeplist @drop droplist]", "description": "Imports observation values stored inside one or more series in a second workfile page into the attribute fields of objects within the current workfile page.", "long_description": "The source page should contain one series whose values are the names of the objects into which the attributes should be imported, and one or more additional series containing the values of each attribute to be imported. By default, the procedure will assume there is an alpha series called NAME in the source page that contains the object names. The \u201cname=\u201d option can be used to specify that a different series in the source page contains the object names.\nValues in the name column will always be converted into legal EViews names before matching to object names in the current workfile. (For example, any spaces will be replaced by underscores.)\nTypically, the name of the series in the source workfile will be used as the attribute name inside the current workfile. However, if an object in the source workfile has a display name set, this value will be used for the attribute name instead. Display names must be used to specify attribute names if your attribute names contain spaces since spaces are not allowed within EViews object names.\nFor numeric series, attribute values will be imported using the formatting currently set for the series spreadsheet view of the source series.\nBy default, all series in the source page will be used as attribute values (except the series containing object names). To import only a subset of series as attributes, name patterns can be provided in the @keep and @drop arguments to restrict which series will be used.\nimportattr is most often useful when importing custom attributes from an external file. It is common for foreign data files, such as Excel files, to have one file (or sheet in Excel) containing the data, and a separate file (or sheet) containing the attributes, or meta-data, of each series. In such cases the pageload command can be used to read in the attribute file as a separate page in your workfile, and then importattr can be used to assign them to the data page."}, "importmat": {"uri": "commandcmd-importmat", "anchor": "", "usage": "importmat ([type=], options) source_description import_specification\nimportmat (options) source_description [table_description] [variables_description]\nimportmat (options) source_description [table_description] [variables_description]\nimportmat (options) source_description [table_description] [variables_description]", "description": "Imports data from a foreign file into a matrix object in the current workfile.", "long_description": "The general form of the importmat command is:\n\u2022 Source_description should contain a description of the file from which the data is to be imported. The specification of the description is usually just the path and file name of the file, however you can also specify more precise information. See wfopen for more details on the specification of source_description .\n\u2022 The optional \u201ctype=\u201d option may be used to specify a source type. For the most part, you should not need to specify a \u201ctype=\u201d option as EViews will automatically determine the type from the filename. The following table summaries the various source formats and along with the corresponding \u201ctype=\u201d keywords:\n\nOption Keywords Excel (through 2003) \u201cexcel\u201d Excel 2007 (xml) \u201cexcelxml\u201d HTML \u201chtml\u201d Text / ASCII \u201ctext\u201d\nOptions\n\nname= arg Specify a name for the created matrix object. display= arg Specify a display name for the created matrix object. page= page_name Optional name for the page into which the matrix should be created. mode=o Overwrite an existing object with the same name (only applicable if the name option is used).\n\u2022 import_specification can be used to provide additional information about the file to be read. The details of import_specification will depend upon the type of file being imported.\nExcel Files\nThe syntax for reading Excel files is:\nThe following table_description elements may be used when reading Excel data:\n\u2022 \u201crange = arg \u201d, where arg is a range of cells to read from the Excel workbook, following the standard Excel format [worksheet ! ][topleft_cell[:bottomright_cell]] .\nIf the worksheet name contains spaces, it should be placed in single quotes. If the worksheet name is omitted, the cell range is assumed to refer to the currently active sheet. If only a top left cell is provided, a bottom right cell will be chosen automatically to cover the range of non-empty cells adjacent to the specified top left cell. If only a sheet name is provided, the first set of non-empty cells in the top left corner of the chosen worksheet will be selected automatically. As an alternative to specifying an explicit range, a name which has been defined inside the excel workbook to refer to a range or cell may be used to specify the cells to read.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to read files where the series are contained in rows (one row per series) rather than columns.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201ctypes=(\" arg1 \",\" arg2 \",\u2026)\u201d, user specified data types of the series. If types are provided they will override the types automatically detected by EViews. You may use any of the following format keywords: \u201ca\u201d (character data), \u201cf\u201d (numeric data), \u201cd\u201d (dates), or \u201cw\u201d(EViews automatic detection). Note that the types appear without quotes: e.g., \u201ctypes=(a,a,a)\u201d. This option is rarely required.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file). Note: If a \"range=\" argument is not specified, then EViews will only scan the first five rows of data to try and determine the data format for each column. Likewise, if the \"na=\" argument is not specified, EViews will also try to determine possible NA values by looking for repeated values in the same rows. If the first five rows are not enough to correctly determine the data format, use the \"scan=\" argument to instruct EViews to look at more rows. In addition, you may want to specify a the \"na=\" value to override any dynamic NA value that EViews may determine on its own.\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nExcel Examples\nimportmat \"c:\\data files\\data.xls\"\nloads the active sheet of DATA.XLSX into a new untitled matrix object.\nimportmat(name=mymat) \"c:\\data files\\data.xls\" range=\"GDP data\"\nreads the data contained in the \u201cGDP data\u201d sheet of \u201cData.XLS\u201d into the MYMAT object.\n\nHTML Files\nThe syntax for reading HTML pages is:\nThe following table_description elements may be used when reading an HTML file or page:\n\u2022 \u201ctable = arg \u201d, where arg specifies which HTML table to read in an HTML file/page containing multiple tables.\nWhen specifying arg, you should remember that tables are named automatically following the pattern \u201cTable01\u201d, \u201cTable02\u201d, \u201cTable03\u201d, etc . If no table name is specified, the largest table found in the file will be chosen by default. Note that the table numbering may include trivial tables that are part of the HTML content of the file, but would not normally be considered as data tables by a person viewing the page.\n\u2022 \u201cskip = int \u201d, where int is the number of rows to discard from the top of the HTML table.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to import files where the series are contained in rows (one row per series) rather than columns.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201ctypes=(\" arg1 \",\" arg2 \",\u2026)\u201d, user specified data types of the series. If types are provided they will override the types automatically detected by EViews. You may use any of the following format keywords: \u201ca\u201d (character data), \u201cf\u201d (numeric data), \u201cd\u201d (dates), or \u201cw\u201d(EViews automatic detection). Note that the types appear without quotes: e.g., \u201ctypes=(a,a,a)\u201d. This option is rarely used.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file). Note: If a \"range=\" argument is not specified, then EViews will only scan the first five rows of data to try and determine the data format for each column. Likewise, if the \"na=\" argument is not specified, EViews will also try to determine possible NA values by looking for repeated values in the same rows. If the first five rows are not enough to correctly determine the data format, use the \"scan=\" argument to instruct EViews to look at more rows. In addition, you may want to specify a the \"na=\" value to override any dynamic NA value that EViews may determine on its own.\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the table of data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the table of data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nHTML Examples\nimportmat \"c:\\data.html\"\nloads into a new untitled matrix object the data located in the HTML file \u201cData.HTML\u201d located on the C:\\ drive\nimportmat(type=html, name=forexmat) \"http://www.tradingroom.com.au/apps/mkt/forex.ac\" colhead=3\nloads into a matrix object called FOREXMAT the data with the given URL located on the website site \u201chttp://www.tradingroom.com.au\u201d. The column header is set to three rows.\nText and Binary Files\nThe syntax for reading text or binary files is:\nIf a table_description is not provided, EViews will attempt to read the file as a free-format text file. The following table_description elements may be used when reading a text or binary file:\n\u2022 \u201cftype = [ascii|binary]\u201d specifies whether numbers and dates in the file are stored in a human readable text (ASCII), or machine readable (Binary) form.\n\u2022 \u201crectype = [crlf|fixed|streamed]\u201d describes the record structure of the file:\n\u201ccrlf\u201d, each row in the output table is formed using a fixed number of lines from the file (where lines are separated by carriage return/line feed sequences). This is the default setting.\n\u201cfixed\u201d, each row in the output table is formed using a fixed number of characters from the file (specified in \u201creclen= arg \u201d). This setting is typically used for files that contain no line breaks.\n\u201cstreamed\u201d, each row in the output table is formed by reading a fixed number of fields, skipping across lines if necessary. This option is typically used for files that contain line breaks, but where the line breaks are not relevant to how rows from the data should be formed.\n\u2022 \u201creclines = int \u201d, number of lines to use in forming each row when \u201crectype=crlf\u201d (default is 1).\n\u2022 \u201creclen= int \u201d, number of bytes to use in forming each row when \u201crectype=fixed\u201d.\n\u2022 \u201crecfields= int \u201d, number of fields to use in forming each row when \u201crectype=streamed\u201d.\n\u2022 \u201cskip= int \u201d, number of lines (if rectype is \u201ccrlf\u201d) or bytes (if rectype is not \u201ccrlf\u201d) to discard from the top of the file.\n\u2022 \u201ccomment= string \u201c, where string is a double-quoted string, specifies one or more characters to treat as a comment indicator. When a comment indicator is found, everything on the line to the right of where the comment indicator starts is ignored.\n\u2022 \u201cemptylines=[keep|drop]\u201d, specifies whether empty lines should be ignored (\u201cdrop\u201d), or treated as valid lines (\u201ckeep\u201d) containing missing values. The default is to ignore empty lines.\n\u2022 \u201ctabwidth= int \u201d, specifies the number of characters between tab stops when tabs are being replaced by spaces (default=8). Note that tabs are automatically replaced by spaces whenever they are not being treated as a field delimiter.\n\u2022 \u201cfieldtype=[delim|fixed|streamed|undivided]\u201d, specifies the structure of fields within a record:\n\u201cDelim\u201d, fields are separated by one or more delimiter characters\n\u201cFixed\u201d, each field is a fixed number of characters\n\u201cStreamed\u201d, fields are read from left to right, with each field starting immediately after the previous field ends.\n\u201cUndivided\u201d, read entire record as a single series.\n\u2022 \u201cquotes=[single|double|both|none]\u201d, specifies the character used for quoting fields, where \u201csingle\u201d is the apostrophe, \u201cdouble\u201d is the double quote character, and \u201cboth\u201d means that either single or double quotes are allowed (default is \u201cboth\u201d). Characters contained within quotes are never treated as delimiters.\n\u2022 \u201csinglequote\u201c, same as \u201cquotes = single\u201d.\n\u2022 \u201cdelim=[comma|tab|space|dblspace|white|dblwhite]\u201d, specifies the character(s) to treat as a delimiter. \u201cWhite\u201d means that either a tab or a space is a valid delimiter. You may also use the abbreviation \u201cd=\u201d in place of \u201cdelim=\u201d.\n\u2022 \u201ccustom=\" arg1 \"\u201d, specifies custom delimiter characters in the double quoted string. Use the character \u201ct\u201d for tab, \u201cs\u201d for space and \u201ca\u201d for any character.\n\u2022 \u201cmult=[on|off]\u201d, to treat multiple delimiters as one. Default value is \u201con\u201d if \u201cdelim\u201d is \u201cspace\u201d, \u201cdblspace\u201d, \u201cwhite\u201d, or \u201cdblwhite\u201d, and \u201coff\u201d otherwise.\n\u2022 \u201cendian = [big|little]\u201d, selects the endianness of numeric fields contained in binary files.\n\u2022 \u201cstring = [nullterm|nullpad|spacepad]\u201d, specifies how strings are stored in binary files. If \u201cnullterm\u201d, strings shorter than the field width are terminated with a single zero character. If \u201cnullpad\u201d, strings shorter than the field width are followed by extra zero characters up to the field width. If \u201cspacepad\u201d, strings shorter than the field width are followed by extra space characters up to the field width.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to import files where the series are contained in rows (one row per series) rather than columns.\n\u2022 \u201clastcol\u201d, include implied last column. For lines that end with a delimiter, this option adds an additional column. When importing a csv file, lines which have the delimiter as the last character (for example: \u201cname, description, date\u201d), EViews normally determines the line to have 3 columns. With the above option, EViews will determine the line to have 4 columns. Note this is not the same as a line containing \u201cname, description, date\u201d. In this case, EViews will always determine the line to have 3 columns regardless if the option is set.\nA central component of the table_description element is the format statement. You may specify the data format using the following table descriptors:\n\u2022 Fortran Format:\nfformat=( [n1]Type[Width][.Precision] , [n2]Type[Width][.Precision] , ...)\nwhere Type specifies the underlying data type, and may be one of the following,\nI - integer\nF - fixed precision\nE - scientific\nA - alphanumeric\nX - skip\nand n1 , n2 , ... are the number of times to read using the descriptor ( default =1). More complicated Fortran compatible variations on this format are possible.\n\u2022 Column Range Format:\nrformat=\" [n1]Type[Width][.Precision] , [n2]Type[Width][.Precision] , ...)\"\nwhere optional type is \u201c$\u201d for string or \u201c#\u201d for number, and n1 , n2 , n3 , n4 , etc . are the range of columns containing the data.\n\u2022 C printf/scanf Format:\ncformat=\" fmt \"\nwhere fmt follows standard C language (printf/scanf) format rules.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201ctypes=(\" arg1 \",\" arg2 \",\u2026)\u201d, user specified data types of the series. If types are provided they will override the types automatically detected by EViews. You may use any of the following format keywords: \u201ca\u201d (character data), \u201cf\u201d (numeric data), \u201cd\u201d (dates), or \u201cw\u201d(EViews automatic detection). Note that the types appear without quotes: e.g., \u201ctypes=(a,a,a)\u201d. This option is rarely used.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file). Note: If a \"range=\" argument is not specified, then EViews will only scan the first five rows of data to try and determine the data format for each column. Likewise, if the \"na=\" argument is not specified, EViews will also try to determine possible NA values by looking for repeated values in the same rows. If the first five rows are not enough to correctly determine the data format, use the \"scan=\" argument to instruct EViews to look at more rows. In addition, you may want to specify a the \"na=\" value to override any dynamic NA value that EViews may determine on its own.\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the table of data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the table of data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nText and Binary File Examples (.txt, .csv, etc.)\nimportmat c:\\data.csv skip=5\nreads \u201cData.CSV\u201d into a new unnamed matrix object, skipping the first 5 rows.\nimporttbl(type=text, name=matrix01) c:\\date.txt delim=comma\nloads the comma delimited data DATE.TXT into the MATRIX01 matrix object."}, "importtbl": {"uri": "commandcmd-importtbl", "anchor": "", "usage": "importtbl ([type=], options) source_description import_specification\nimporttbl (options) source_description [table_description] [variables_description]\nimporttbl (options) source_description [table_description] [variables_description]\nimporttbl (options) source_description [table_description] [variables_description]", "description": "Imports data from a foreign file into a table object in the current workfile.", "long_description": "The general form of the importtbl command is:\n\u2022 Source_description should contain a description of the file from which the data is to be imported. The specification of the description is usually just the path and file name of the file, however you can also specify more precise information. See wfopen for more details on the specification of source_description .\n\u2022 The optional \u201ctype=\u201d option may be used to specify a source type. For the most part, you should not need to specify a \u201ctype=\u201d option as EViews will automatically determine the type from the filename. The following table summaries the various source formats and along with the corresponding \u201ctype=\u201d keywords:\n\nOption Keywords Excel (through 2003) \u201cexcel\u201d Excel 2007 (xml) \u201cexcelxml\u201d HTML \u201chtml\u201d Text / ASCII \u201ctext\u201d\nOptions\n\nname= arg Specify a name for the created table object. display= arg Specify a display name for the created table object. page= page_name Optional name for the page into which the table should be created. mode=o Overwrite an existing object with the same name (only applicable if the name option is used).\n\u2022 import_specification can be used to provide additional information about the file to be read. The details of import_specification will depend upon the type of file being imported.\nExcel Files\nThe syntax for reading Excel files is:\nThe following table_description elements may be used when reading Excel data:\n\u2022 \u201crange = arg \u201d, where arg is a range of cells to read from the Excel workbook, following the standard Excel format [worksheet ! ][topleft_cell[:bottomright_cell]] .\nIf the worksheet name contains spaces, it should be placed in single quotes. If the worksheet name is omitted, the cell range is assumed to refer to the currently active sheet. If only a top left cell is provided, a bottom right cell will be chosen automatically to cover the range of non-empty cells adjacent to the specified top left cell. If only a sheet name is provided, the first set of non-empty cells in the top left corner of the chosen worksheet will be selected automatically. As an alternative to specifying an explicit range, a name which has been defined inside the excel workbook to refer to a range or cell may be used to specify the cells to read.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to read files where the series are contained in rows (one row per series) rather than columns.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201ctypes=(\" arg1 \",\" arg2 \",\u2026)\u201d, user specified data types of the series. If types are provided they will override the types automatically detected by EViews. You may use any of the following format keywords: \u201ca\u201d (character data), \u201cf\u201d (numeric data), \u201cd\u201d (dates), or \u201cw\u201d(EViews automatic detection). Note that the types appear without quotes: e.g., \u201ctypes=(a,a,a)\u201d. This option is rarely required.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file). Note: If a \"range=\" argument is not specified, then EViews will only scan the first five rows of data to try and determine the data format for each column. Likewise, if the \"na=\" argument is not specified, EViews will also try to determine possible NA values by looking for repeated values in the same rows. If the first five rows are not enough to correctly determine the data format, use the \"scan=\" argument to instruct EViews to look at more rows. In addition, you may want to specify a the \"na=\" value to override any dynamic NA value that EViews may determine on its own.\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nExcel Examples\nimporttbl \"c:\\data files\\data.xls\"\nloads the active sheet of DATA.XLSX into a new untitled table object.\nimporttbl(name=mytbl) \"c:\\data files\\data.xls\" range=\"GDP data\"\nreads the data contained in the \u201cGDP data\u201d sheet of \u201cData.XLS\u201d into the MYTBL object.\n\nHTML Files\nThe syntax for reading HTML pages is:\nThe following table_description elements may be used when reading an HTML file or page:\n\u2022 \u201ctable = arg \u201d, where arg specifies which HTML table to read in an HTML file/page containing multiple tables.\nWhen specifying arg, you should remember that tables are named automatically following the pattern \u201cTable01\u201d, \u201cTable02\u201d, \u201cTable03\u201d, etc . If no table name is specified, the largest table found in the file will be chosen by default. Note that the table numbering may include trivial tables that are part of the HTML content of the file, but would not normally be considered as data tables by a person viewing the page.\n\u2022 \u201cskip = int \u201d, where int is the number of rows to discard from the top of the HTML table.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to import files where the series are contained in rows (one row per series) rather than columns.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201ctypes=(\" arg1 \",\" arg2 \",\u2026)\u201d, user specified data types of the series. If types are provided they will override the types automatically detected by EViews. You may use any of the following format keywords: \u201ca\u201d (character data), \u201cf\u201d (numeric data), \u201cd\u201d (dates), or \u201cw\u201d(EViews automatic detection). Note that the types appear without quotes: e.g., \u201ctypes=(a,a,a)\u201d. This option is rarely used.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file). Note: If a \"range=\" argument is not specified, then EViews will only scan the first five rows of data to try and determine the data format for each column. Likewise, if the \"na=\" argument is not specified, EViews will also try to determine possible NA values by looking for repeated values in the same rows. If the first five rows are not enough to correctly determine the data format, use the \"scan=\" argument to instruct EViews to look at more rows. In addition, you may want to specify a the \"na=\" value to override any dynamic NA value that EViews may determine on its own.\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the table of data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the table of data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nHTML Examples\nimporttbl \"c:\\data.html\"\nloads into a new untitled table object the data located in the HTML file \u201cData.HTML\u201d located on the C:\\ drive\nimporttbl(type=html, name=forextbl) \"http://www.tradingroom.com.au/apps/mkt/forex.ac\" colhead=3\nloads into a table object called FOREXTBL the data with the given URL located on the website site \u201chttp://www.tradingroom.com.au\u201d. The column header is set to three rows.\nText and Binary Files\nThe syntax for reading text or binary files is:\nIf a table_description is not provided, EViews will attempt to read the file as a free-format text file. The following table_description elements may be used when reading a text or binary file:\n\u2022 \u201cftype = [ascii|binary]\u201d specifies whether numbers and dates in the file are stored in a human readable text (ASCII), or machine readable (Binary) form.\n\u2022 \u201crectype = [crlf|fixed|streamed]\u201d describes the record structure of the file:\n\u201ccrlf\u201d, each row in the output table is formed using a fixed number of lines from the file (where lines are separated by carriage return/line feed sequences). This is the default setting.\n\u201cfixed\u201d, each row in the output table is formed using a fixed number of characters from the file (specified in \u201creclen= arg \u201d). This setting is typically used for files that contain no line breaks.\n\u201cstreamed\u201d, each row in the output table is formed by reading a fixed number of fields, skipping across lines if necessary. This option is typically used for files that contain line breaks, but where the line breaks are not relevant to how rows from the data should be formed.\n\u2022 \u201creclines = int \u201d, number of lines to use in forming each row when \u201crectype=crlf\u201d (default is 1).\n\u2022 \u201creclen= int \u201d, number of bytes to use in forming each row when \u201crectype=fixed\u201d.\n\u2022 \u201crecfields= int \u201d, number of fields to use in forming each row when \u201crectype=streamed\u201d.\n\u2022 \u201cskip= int \u201d, number of lines (if rectype is \u201ccrlf\u201d) or bytes (if rectype is not \u201ccrlf\u201d) to discard from the top of the file.\n\u2022 \u201ccomment= string \u201c, where string is a double-quoted string, specifies one or more characters to treat as a comment indicator. When a comment indicator is found, everything on the line to the right of where the comment indicator starts is ignored.\n\u2022 \u201cemptylines=[keep|drop]\u201d, specifies whether empty lines should be ignored (\u201cdrop\u201d), or treated as valid lines (\u201ckeep\u201d) containing missing values. The default is to ignore empty lines.\n\u2022 \u201ctabwidth= int \u201d, specifies the number of characters between tab stops when tabs are being replaced by spaces (default=8). Note that tabs are automatically replaced by spaces whenever they are not being treated as a field delimiter.\n\u2022 \u201cfieldtype=[delim|fixed|streamed|undivided]\u201d, specifies the structure of fields within a record:\n\u201cDelim\u201d, fields are separated by one or more delimiter characters\n\u201cFixed\u201d, each field is a fixed number of characters\n\u201cStreamed\u201d, fields are read from left to right, with each field starting immediately after the previous field ends.\n\u201cUndivided\u201d, read entire record as a single series.\n\u2022 \u201cquotes=[single|double|both|none]\u201d, specifies the character used for quoting fields, where \u201csingle\u201d is the apostrophe, \u201cdouble\u201d is the double quote character, and \u201cboth\u201d means that either single or double quotes are allowed (default is \u201cboth\u201d). Characters contained within quotes are never treated as delimiters.\n\u2022 \u201csinglequote\u201c, same as \u201cquotes = single\u201d.\n\u2022 \u201cdelim=[comma|tab|space|dblspace|white|dblwhite]\u201d, specifies the character(s) to treat as a delimiter. \u201cWhite\u201d means that either a tab or a space is a valid delimiter. You may also use the abbreviation \u201cd=\u201d in place of \u201cdelim=\u201d.\n\u2022 \u201ccustom=\" arg1 \"\u201d, specifies custom delimiter characters in the double quoted string. Use the character \u201ct\u201d for tab, \u201cs\u201d for space and \u201ca\u201d for any character.\n\u2022 \u201cmult=[on|off]\u201d, to treat multiple delimiters as one. Default value is \u201con\u201d if \u201cdelim\u201d is \u201cspace\u201d, \u201cdblspace\u201d, \u201cwhite\u201d, or \u201cdblwhite\u201d, and \u201coff\u201d otherwise.\n\u2022 \u201cendian = [big|little]\u201d, selects the endianness of numeric fields contained in binary files.\n\u2022 \u201cstring = [nullterm|nullpad|spacepad]\u201d, specifies how strings are stored in binary files. If \u201cnullterm\u201d, strings shorter than the field width are terminated with a single zero character. If \u201cnullpad\u201d, strings shorter than the field width are followed by extra zero characters up to the field width. If \u201cspacepad\u201d, strings shorter than the field width are followed by extra space characters up to the field width.\n\u2022 \u201cbyrow\u201d, transpose the incoming data. This option allows you to import files where the series are contained in rows (one row per series) rather than columns.\nA central component of the table_description element is the format statement. You may specify the data format using the following table descriptors:\n\u2022 Fortran Format:\nfformat=( [n1]Type[Width][.Precision] , [n2]Type[Width][.Precision] , ...)\nwhere Type specifies the underlying data type, and may be one of the following,\nI - integer\nF - fixed precision\nE - scientific\nA - alphanumeric\nX - skip\nand n1 , n2 , ... are the number of times to read using the descriptor ( default =1). More complicated Fortran compatible variations on this format are possible.\n\u2022 Column Range Format:\nrformat=\" [n1]Type[Width][.Precision] , [n2]Type[Width][.Precision] , ...)\"\nwhere optional type is \u201c$\u201d for string or \u201c#\u201d for number, and n1 , n2 , n3 , n4 , etc . are the range of columns containing the data.\n\u2022 C printf/scanf Format:\ncformat=\" fmt \"\nwhere fmt follows standard C language (printf/scanf) format rules.\nThe optional variables_description may be formed using the elements:\n\u2022 \u201ccolhead= int \u201d, number of table rows to be treated as column headers.\n\u2022 \u201ctypes=(\" arg1 \",\" arg2 \",\u2026)\u201d, user specified data types of the series. If types are provided they will override the types automatically detected by EViews. You may use any of the following format keywords: \u201ca\u201d (character data), \u201cf\u201d (numeric data), \u201cd\u201d (dates), or \u201cw\u201d(EViews automatic detection). Note that the types appear without quotes: e.g., \u201ctypes=(a,a,a)\u201d. This option is rarely used.\n\u2022 \u201cna=\" arg1 \"\u201d, text used to represent observations that are missing from the file. The text should be enclosed on double quotes.\n\u2022 \u201cscan=[ int | all ]\u201d, number of rows of the table to scan during automatic format detection (\u201cscan=all\u201d scans the entire file). Note: If a \"range=\" argument is not specified, then EViews will only scan the first five rows of data to try and determine the data format for each column. Likewise, if the \"na=\" argument is not specified, EViews will also try to determine possible NA values by looking for repeated values in the same rows. If the first five rows are not enough to correctly determine the data format, use the \"scan=\" argument to instruct EViews to look at more rows. In addition, you may want to specify a the \"na=\" value to override any dynamic NA value that EViews may determine on its own.\n\u2022 \u201cfirstobs= int \u201d, first observation to be imported from the table of data (default is 1). This option may be used to start reading rows from partway through the table.\n\u2022 \u201clastobs = int \u201d, last observation to be read from the table of data (default is last observation of the file). This option may be used to read only part of the file, which may be useful for testing.\nText and Binary File Examples (.txt, .csv, etc.)\nimporttbl c:\\data.csv skip=5\nreads \u201cData.CSV\u201d into a new unnamed table object, skipping the first 5 rows.\nimporttbl(type=text, name=table01) c:\\date.txt delim=comma\nloads the comma delimited data DATE.TXT into the TABLE01 table object."}, "liml": {"uri": "commandcmd-liml", "anchor": "", "usage": "liml (options) y c x1 [x2 x3 ...] @ z1 [z2 z3 ...]\nliml (options) specification @ z1 [z2 z3 ...]", "description": "Limited Information Maximum Likelihood and K-class Estimation.", "long_description": "To use the liml command, list the dependent variable first, followed by the regressors, then any AR or MA error specifications, then an \u201c@\u201d-sign, and finally, a list of exogenous instruments.\nYou may estimate nonlinear equations or equations specified with formulas by first providing a specification, then listing the instrumental variables after an \u201c@\u201d-sign. There must be at least as many instrumental variables as there are independent variables. All exogenous variables included in the regressor list should also be included in the instrument list. A constant is included in the list of instrumental variables, unless the noconst option is specified."}, "line": {"uri": "graphmaster-line", "anchor": "", "usage": "line (options) o1 [o2 o3 ... ]\nobject_name. line (options) [categorical_spec(arg)]", "description": "Display a line graph view.", "long_description": "where o1 , o2 , ..., are series or group objects. Following the line keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "load": {"uri": "commandcmd-load", "anchor": "", "description": "Load a workfile.", "long_description": "Provided for backward compatibility. Same as wfopen ."}, "logclear": {"uri": "commandcmd-logclear", "anchor": "", "usage": "logclear (options)", "description": "Clears the log window corresponding to the program.", "long_description": "Use this command any time from within a program to clear the program log."}, "logclose": {"uri": "commandcmd-logclose", "anchor": "", "usage": "logclose logwindow_list", "description": "Closes one or more or all message log windows.", "long_description": "Use this command any time from the command line or from within a program to close the log windows.\nwhere logwindow_list is a list of log windows to close: \u201c@all\u201d will close all log windows, while \u201carg1 arg2 arg3\u201d will close the log windows ARG1, ARG2, and ARG3."}, "logeval": {"uri": "commandcmd-logeval", "anchor": "", "usage": "logeval command", "description": "Sends result of the command to a log window."}, "logit": {"uri": "commandcmd-logit", "anchor": "", "description": "Estimate binary models with logistic errors.", "long_description": "Provide for backward compatibility. Equivalent to issuing the command, binary with the option \u201c (d=l) \u201d.\nSee binary ."}, "logmode": {"uri": "commandcmd-logmode", "anchor": "", "usage": "logmode (options) msgtype_list", "description": "Set the log settings of specified message types.", "long_description": "Activates or deactivates the logging of specified message types if message types are set to be program controlled .\nControls the output of the messages to a log window with a specified name and/or to a file on disk.\nwhere msgtype_list is a list of the message types to update."}, "logmsg": {"uri": "commandcmd-logmsg", "anchor": "", "usage": "logmsg (options) text", "description": "Adds a line of text to the program log."}, "logsave": {"uri": "commandcmd-logsave", "anchor": "", "usage": "logsave (options) destination", "description": "Saves the program log to a text file.", "long_description": "where destination is the location and filename for saving the log file (for types text and rtf) or the text object name (for type textobj)"}, "ls": {"uri": "commandcmd-ls", "anchor": "", "usage": "ls (options) y x1 [x2 x3 ...]\nls (options) specification", "description": "When the current workfile has a panel structure, ls also estimates cross-section weighed least squares, feasible GLS, and fixed and random effects models.", "long_description": "For linear specifications, list the dependent variable first, followed by a list of the independent variables. Use a \u201c C\u201d if you wish to include a constant or intercept term; unlike some programs, EViews does not automatically include a constant in the regression. You may add AR, MA, SAR, and SMA error specifications, a D fractional differencing term, and PDL specifications for polynomial distributed lags. If you include lagged variables, EViews will adjust the sample automatically, if necessary.\nBoth dependent and independent variables may be created from existing series using standard EViews functions and transformations. EViews treats the equation as linear in each of the variables and assigns coefficients C(1), C(2), and so forth to each variable in the list.\nLinear or nonlinear single equations may also be specified by explicit equation. You should specify the equation as a formula. The parameters to be estimated should be included explicitly: \u201cC(1)\u201d, \u201cC(2)\u201d, and so forth (assuming that you wish to use the default coefficient vector \u201cC\u201d). You may also declare an alternative coefficient vector using coef and use these coefficients in your expressions."}, "matrix": {"uri": "matrixcmd-matrix_2", "anchor": "", "usage": "matrix (r, c) matrix_name[=assignment]", "description": "Declare and optionally initializes a matrix object.", "long_description": "The matrix keyword is followed by the name you wish to give the matrix. matrix also takes an optional argument specifying the row r and column c dimension of the matrix. Once declared, matrices may be resized by repeating the matrix command using the original name.\nYou may combine matrix declaration and assignment. If there is no assignment statement, the matrix will initially be filled with zeros.\nYou should use sym for symmetric matrices."}, "midas": {"uri": "commandcmd-midas", "anchor": "", "usage": "midas (options) y x1 [x2 x3 ...] @ z1page\\z1 [z2page\\z2 ...]", "description": "Estimates an equation using Mixed Data Sampling (MIDAS) regression.", "long_description": "MIDAS regression is an estimation technique which allows for data sampled at different frequencies to be used in the same regression.\nwhere y , x1 , etc., are the dependent and explanatory variables in the current page frequency, and z1page\\z1 and z2page\\z2 are the high frequency variable page\\series specification.\nYou may not include ARMA terms in a MIDAS regression."}, "model": {"uri": "modelcmd-model_2", "anchor": "", "usage": "model model_name", "description": "Declare a model object.", "long_description": "The keyword model should be followed by a name for the model. To fill the model, you may use Model::append or Model::merge ."}, "open": {"uri": "commandcmd-open", "anchor": "", "usage": "open (options) [path\\]file_name", "description": "Opens a program file, or text (ASCII) file.", "long_description": "This command should be used to open program files or text (ASCII) files for editing.\nYou may also use the command to open workfiles or databases. This use of the open command for this purposes is provided for backward compatibility. We recommend instead that you use the new commands wfopen and pageload to open a workfile, and dbopen to open databases.\nYou should provide the name of the file to be opened including the extension (and optionally a path), or the file name without an extension but with an option identifying its type. Specified types always take precedence over automatic type identification. If a path is not provided, EViews will look for the file in the default directory.\nFiles with the \u201c.PRG\u201d extension will be opened as program files, unless otherwise specified. Files with the \u201c.TXT\u201d extension will be opened as text files, unless otherwise specified.\nFor backward compatibility, files with extensions that are recognized as database files are opened as EViews databases, unless an explicit type is specified. Similarly, files with the extensions \u201c.WF\u201d and \u201c.WF1\u201d, and foreign files with recognized extensions will be opened as workfiles, unless otherwise specified.\nAll other files will be read as text files."}, "optsave": {"uri": "commandcmd-optsave", "anchor": "", "usage": "optsave directory", "description": "Save the current EViews global options settings \u201c.INI\u201d files into a directory.", "long_description": "Save a copy of the current global options settings into the specified directory. Usually this command will be used in conjuncture with a later use of the optset command. Any existing option settings in the directory will be overwritten.\n\u201cGeneral Options\u201d and \u201cGraphics Defaults\u201d will always be saved. \u201cDatabase registry settings\u201d and \u201cDatabase object aliases\u201d will only be saved if the file location setting for the \u201cDatabase Registry\u201d and \u201cAlias Map Path\u201d is the same as the file location of the INI File Path.\nIf the directory name is omitted, the option settings currently in effect will be used to replace the default global options. (This can be used to copy option settings back into your default settings after the optset command has switched to using options in a different directory).\nNote that this command does not change which set of options are active. You must follow this command with the optset command if you would like to switch to using the saved copy as your active set of options."}, "optset": {"uri": "commandcmd-optset", "anchor": "", "usage": "optset directory", "description": "Replace the current EViews global options settings \u201c.INI\u201d files with ones based in a different directory.", "long_description": "Temporarily switch to using the global options settings stored within \u201c.INI\u201d files in the specified directory. These will typically have been previously saved by using the optsave command.\n\u201cGeneral Options\u201d and \u201cGraphics Defaults\u201d will always be switched. \u201cDatabase registry settings\u201d and Database object aliases\u201d will only be switched if the file location setting for the \u201cDatabase Registry\u201d and \u201cAlias Map Path\u201d is the same as the file location of the INI File Path.\nThe new options will stay in effect until EViews is restarted or until the optset command is executed again with a different directory. After the optset command has been issued, changing settings using the Options menu will modify settings in the new directory.\nIf the directory name is omitted, the global options settings will be reset to use the settings from the default location (the same as restarting EViews).\nNote that you can use the command \u201c optset .\\ \u201d in a program to switch to using the global options saved in the same directory as the program file. This can be used to ensure that multiple users always use the same global options settings when running a shared program."}, "ordered": {"uri": "commandcmd-ordered", "anchor": "", "usage": "equation name. ordered (options) y x1 [x2 x3 ...]\nequation name. ordered (options) specification", "description": "Estimation of ordered dependent variable models."}, "output": {"uri": "commandcmd-output", "anchor": "", "usage": "output base_name\noutput (f) base_name\noutput (options) [path\\]file_name\noutput (s) spool_name\noutput off", "description": "Redirect printer output.", "long_description": "You may specify that any procedure that would normally send output to the printer puts output in a text, Rich Text Format (RTF), or comma-separated value (CSV) file, in a spool object, or into frozen table or graph objects in the current workfile.\nBy default, the output command redirects the output into frozen objects. You should supply a base name after the output keyword. Each subsequent print command will create a new table or graph object in the current workfile, using the base name and an identifying number. For example, if you supply the base name of \u201c OUT \u201d, the first print command will generate a table or graph named OUT01 , the second print command will generate OUT02 , and so on.\nYou can also use the optional settings, described below, to redirect table and text output to a text, RTF, or CSV file, or all output (including graphs) to an RTF file. If you elect to redirect output to a file, you must specify a filename.\nYou can use the \u201cs\u201d option, described below, to redirect all output to a spool object.\nWhen followed by the optional keyword off , the output command turns off output redirection. Subsequent print commands will be directed to the printer."}, "pageappend": {"uri": "commandcmd-pageappend", "anchor": "", "usage": "pageappend (options) wfname[ \\ pgname] [object_list]", "description": "Append contents of the specified workfile page to the active workfile page.", "long_description": "where wfname is the name of a workfile that is currently in memory. You may optionally provide the name of a page in wfname that you wish to used as a source, and the list of objects to be read from the source workfile page. If no wfname is provided, EViews will use the default page in the source workfile.\nThe command appends the contents of the source page to the active page in the default workfile. The target page is first unstructured (if necessary) and its range is expanded to encompass the combined range of the sample from the source workfile page, and the destination page.\nThe default behavior is to append all series and alpha objects (but not other types) from the source page, but the optional object_list may be provided to specify specific series, or to specify objects other than series or alpha objects to be included. Command options may also be used to modify the list of objects to be included.\nNote that since this operation is performed in place, the original workfile page cannot be recovered. We recommend that you consider backing up your original page using pagecopy ."}, "pagecontract": {"uri": "commandcmd-pagecontract", "anchor": "", "usage": "pagecontract smpl_spec", "description": "Contract the active workfile page according to the specified sample.", "long_description": "where smpl_spec is a sample specification. Contraction removes observations not in specified sample from the active workfile page. Note that since this operation is performed in place, you may wish to backup your original page (see pagecopy ) prior to contracting."}, "pagecopy": {"uri": "commandcmd-pagecopy", "anchor": "", "usage": "pagecopy (options) [object_list]", "description": "Copies all or part of the active workfile page to a new workfile, or to a new page within the default workfile.", "long_description": "where the optional object_list specifies the workfile objects to be copied. If object_list is not provided, all objects will be copied subject to the option restrictions discussed below.\nIf copying objects to a new page within the default workfile, you may choose to copy series objects (series, alphas, and links) by value or by link (by employing the \u201cbylink\u201d option). If you elect to copy by value, links in the source page will converted to ordinary series and alpha objects when they are copied. If you copy by link, series and alpha objects in the source page are converted to links when copied. The default is to copy by value.\nIf you copy objects to a new workfile, data objects must be copied by value."}, "pagecreate": {"uri": "commandcmd-pagecreate", "anchor": "", "usage": "pagecreate (options) freq[(subperiod_opts)] start_date end_date [num_cross_sections]\npagecreate (options) u num_observations\npagecreate ( id_method[,options] ) id_list [ @srcpage page_list]\npagecreate ( idcross [,options] ) id1 id2 [ @srcpage page1 page2]\npagecreate ( idcross [,options] ) id1 @range( freq, start_date, end_date ) [ @srcpage page1]", "description": "Create a new page in the default workfile. The new page becomes the active page.", "long_description": "These different forms of the pagecreate command encompass three distinct approaches to creating a new workfile page: (1) regular frequency description or unstructured data description; (2) using the union or intersection of unique values from one or more ID series in existing workfile pages; (3) using the cross of unique values from two identifier series or from an identifier series and a date range. Each of these approaches is described in greater detail below.\nRegular Frequency or Unstructured Description\nThe first two forms of the command permit you to create a new workfile page using a regular frequency or unstructured description:\n\u2022 pagecreate (options) freq[(subperiod_opts)] start_date end_date [num_cross_sections]\n\u2022 pagecreate (options) u num_observations\nThe first form of the command should be employed to create a regular frequency page with the specified frequency, start, and end date. If you include the optional argument num_cross_sections, EViews will create a balanced panel page using integer identifiers for each of the cross-sections. Note that more complex panel structures may be defined using pagestruct .\nThe second form of the command creates an unstructured workfile with the specified number of observations.\nNote that these forms of the command are analogous to wfcreate except that instead of creating a new workfile, we create a new page in the default workfile.\nThe freq argument should be specified using one of the following forms:\n\nSec [opt] , 5Sec [opt] , 15Sec [opt] , 30Sec [opt] Seconds in intervals of: 1, 5, 15, or 30 seconds, respectively. You may optionally specify days of the week and start and end times during the day using the opt parameter. See explanation of subperiod options below. Min [opt] , 2Min [opt] , 5Min [opt] , 10Min [opt] , 15Min [opt] , 20Min [opt] , 30Min[ [opt] Minutes in intervals of: 1, 2, 5, 10, 15, 20, or 30 minutes, respectively. You may optionally specify days of the week and start and end times during the day using the opt parameter. See explanation of subperiod options below. H [opt] , 2H [opt] , 4H [opt] , 6H [opt] , 8H [opt] , 12H[ [opt] Hours in intervals of: 1, 2, 4, 6, 8, or 12 hours, respectively. You may optionally specify days of the week and start and end times during the day using the opt parameter. See explanation of subperiod options below. D( s , e ) Daily with arbitrary days of the week. Specify the first and last days of the week with integers s and e , where Monday is given the number 1 and Sunday is given the number 7. (Note that the \u201cD\u201d option used to specify a 5-day frequency in versions prior to EViews 7). D5 or 5 Daily with five days per week, Monday through Friday. D7 or 7 Daily with seven days per week. W Weekly T Ten-day (daily in intervals of ten). F Fortnight BM Bimonthly M Monthly Q Quarterly S Semi-annual A or Y Annual 2Y, 3Y, 4Y, 5Y, 6Y, 7Y, 8Y, 9Y, 10Y, 20Y Multi-year in intervals of: 2, 3, 4, 5, 6, 7, 8, 9, 10, or 20 years, respectively.\nSubperiod options\nEViews allows for setting the days of the week and the time of day within intraday frequencies, which include second s, minutes , and hours . For instance, you may specify hourly data between 8AM and 5PM on Monday through Wednesday. These subperiod options should follow the frequency keyword and be enclosed in parentheses.\nTo specify days of the week, use integers to indicate the days, where Monday is given the number 1 and Sunday is given the number 7. For example,\npagecreate(wf=strhours) 30MIN(1-6, 8:00-17:00) 1/3/2000 12/30/2000\nindicates a half-hour frequency that includes Monday through Saturday from 8AM to 5PM.\nTo specify the start and end times, you may use either a 24 hour clock, including minutes and optionally seconds, or a 12 hour clock using AM and PM. For example, each of the following represents 8PM: 8PM, 8:00PM, 8:00:00PM, 20:00, and 20:00:00. Thus, our previous example could have been written:\npagecreate(wf=strhours) 30MIN(1-6, 8AM-5PM) 1/3/2000 12/30/2000\nNote that day and time ranges may be delimited by either commas or dashes. So this command is also equivalent to:\npagecreate(wf=strhours) 30MIN(1,6, 8AM,5PM) 1/3/2000 12/30/2000\nthough you will likely find the dashes easier to read.\nIf you wish to include all days of the week but would like to specify a start and end time, set the date range to include all days and then specify the times. The day of the week parameter appears first and is required if you wish to supply the time of day parameters. For instance,\npagecreate(wf=storehours) 30MIN(1-7, 10AM-3PM) 1/3/2000 12/30/2000\nindicates a half-hour frequency from 10AM to 3PM on all days of the week.\nYou may also include a time with the start and end date parameters to specify partial days at the beginning or end of the workfile. For example,\npagecreate(wf=strhours) 30MIN(1-6, 8AM-5PM) 1/3/2000 10AM 12/30/2000 2PM\ncreates the same workfile page as above, but limits the first day, 1/3/2000, to 10AM - 5PM and the last day, 12/30/2000, to 8AM - 2PM.\nUnique Values from a Set of Identifier Series\nThe next form of the command allows for creating pages from the unique values of one or more identifier series found in one or more workfile pages:\n\u2022 pagecreate ( id_method[,options] ) identifier_list [ @srcpage page_list]\nThe identifier_list should include one or more ID series. If more than one ID series is provided, EViews will use the values that are unique across all of the series. If you wish to create a page with a date structure, you should specify one of your identifiers using the special \u201c@DATE\u201d keyword identifier, enclosing the series (or the date ID component series) inside parentheses. If you wish to use the date ID values from the source workfile page, you may use the \u201c@DATE\u201d keyword without arguments.\nThe id_method describes how to handle unique ID values that differ across multiple pages:\n\nid Use the observed values of the series in the identifier_list in specified page. idunion Use the union of the observed values of the series in the identifier_list in the specified pages. idintersect Use the intersection of the observed values of the series in the identifier_list in the specified pages.\nIf the optional source page or list of source pages is not provided, EViews will use the default workfile page. Note that if a single workfile page is used, the two ID methods yield identical results.\nCross of Unique Values from Two Identifier Series or from an Identifier Series and a Date Range\nThe last two forms of the command create a new page by crossing the unique values in two ID series located in one or more pages, or by crossing an ID series from one page with a date range. First, you may specify a pair of identifiers, and optionally source pages where they are located,\n\u2022 pagecreate ( idcross [ , options] ) id1 id2 [ @srcpage page1 page2]\nYou may instruct EViews to create a date structured page by specifying one of your two identifiers using a \u201c@DATE\u201d specification as described above.\nAlternately, you may provide a single identifier and a range specification using the \u201c@RANGE\u201d keyword with a freq , start_date , and end_date , and optionally, the location of the identifier series.\n\u2022 pagecreate ( idcross [,options] ) id1 @range( freq, start_date, end_date ) [ @srcpage page1]"}, "pagedelete": {"uri": "commandcmd-pagedelete", "anchor": "", "usage": "pagedelete [pgname1 pgname2 pgname3...]", "description": "Delete the named pages from the default workfile.", "long_description": "By default pagedelete will delete the currently active page in the default workfile. You may specify other pages to delete by listing them, in a space delimited list, after the pagedelete command."}, "pageload": {"uri": "commandcmd-pageload", "anchor": "", "usage": "pageload [path\\]workfile_name [page1] [page2] [...]\npageload (options) source_description [ @keep keep_list] [ @drop drop_list] [ @keepmap keepmap_list] [ @dropmap dropmap_list] [ @selectif condition]\npageload (options)source_description table_description [ @keep keep_list] [ @drop drop_list] [ @keepmap keepmap_list] [ @dropmap dropmap_list] [ @selectif condition]", "description": "Load one or more new pages in the default workfile.", "long_description": "The basic syntax for pageload follows that of wfopen . The difference between the two commands is that pageload creates a new page in the default workfile, rather than opening or creating a new workfile. If a page is loaded with a name that matches an existing page, EViews will rename the new page to the next available name ( e.g. , \u201cINDIVID\u201d will be renamed \u201cINDIVID1\u201d.\nIf a workfile is provided as the source file, EViews will, by default, open all pages in the source workfile. Specific pages may be loaded by providing their names."}, "pagerefresh": {"uri": "commandcmd-pagerefresh", "anchor": "", "usage": "pagerefresh", "description": "Refresh all links and auto-series in the active workfile page. Primarily used to refresh links that use external database data."}, "pagerename": {"uri": "commandcmd-pagerename", "anchor": "", "usage": "pagerename old_name new_name", "description": "Rename the specified workfile page.", "long_description": "renames the old_name page in the default workfile to new_name . Page names are case-insensitive for purposes of comparison, even though they are displayed using the input case."}, "pagesave": {"uri": "commandcmd-pagesave", "anchor": "", "usage": "pagesave (options) [path\\]filename\npagesave (options) source_description [ nonames ] [ @keep keep_list] [ @drop drop_list] [ @keepmap keepmap_list] [ @dropmap dropmap_list] [ @smpl smpl_spec]\npagesave (options) source_description table_description [ nonames ] [ @keep keep_list] [ @drop drop_list] [ @keepmap keepmap_list] [ @dropmap dropmap_list] [ @smpl smpl_spec]", "description": "Save the active page in the default workfile as an EViews workfile (.WF1 file) or as a foreign data source.", "long_description": "The command saves the active page in the specified directory using filename . By default, the page is saved as an EViews workfile, but options may be used to save all or part of the page in a foreign file or data source.\nWhen saving to a foreign data file, the basic specification consists of a \u201ctype=\u201d option and source_description and table_description arguments which specify the format of the foreign data file. See below for details on source_description and table_description .\nThe remaining optional elements specify the actual elements to be saved."}, "pageselect": {"uri": "commandcmd-pageselect", "anchor": "", "usage": "pageselect pgname", "description": "Make the specified page in the default workfile the active page.", "long_description": "where pgname is the name of a page in the default workfile."}, "pagesort": {"uri": "commandcmd-pagesort", "anchor": "", "usage": "pagesort (options) arg1 [arg2 arg3\u2026]", "description": "Sort the current workfile page.", "long_description": "The pagesort command sorts all series in the workfile page on the basis of the values of one or more of the series. For purposes of sorting, NAs are considered to be smaller than any other value. By default, EViews will sort the series in ascending order. You may use options to override the sort order.\nEViews will first remove any workfile structures and then will sort the workfile using the specified settings.\nList the name of the series or groups by which you wish to sort the workfile. If you list two or more series, pagesort uses the values of the second series to resolve ties from the first series, and values of the third series to resolve ties from the second, and so on."}, "pagestack": {"uri": "commandcmd-pagestack", "anchor": "", "usage": "pagestack (options) stack_id_list [ @ series_to_stack]\npagestack (options) pool_name [ @ series_to_stack]\npagestack (options) series_name_pattern [ @ series_to_stack]", "description": "Create a panel structured workfile page using series, alphas, or links from the default workfile page (convert repeated series to repeated observations).", "long_description": "Series in the new panel workfile may be created by stacking series, alphas, and links whose names contain a pattern (series with names that differ only by a \u201cstack identifier\u201d), or by repeating a single series, alpha, or link, for each value in a set of stack identifiers.\nThe resulting panel workfile will use the identifiers specified in one of the three forms of the command:\n\u2022 stack_id_list includes a list of the ID values ( e.g. , \u201cUS UK JPN\u201d).\n\u2022 pool_name is the name of a pool object that contains the ID values.\n\u2022 series_name_pattern contains an expression from which the ID values may be determined. The pattern should include the \u201c?\u201d character as a stand in for the parts of the series names containing the stack identifiers. For example, if \u201cCONS?\u201d is the series_name_pattern , EViews will find all series with names beginning with \u201cCONS\u201d and will extract the IDs from the trailing parts of the observed names.\nThe series_to_stack list may contain two types of entries: stacked series (corresponding to sets of series, alphas, and links whose names contain the stack IDs) and simple series (other series, alphas, and links).\nTo stack a set of series whose names differ only by the stack IDs, you should enter an expression that includes the \u201c?\u201d character in place of the IDs. You may list the names of a single stacked series ( e.g. , \u201cGDP?\u201d or \u201c?CONS\u201d), or you may use expressions containing the wildcard character \u201c*\u201d ( e.g. , \u201c*?\u201d and \u201c?C*\u201d) to specify multiple series.\nBy default, the stacked series will be named in the new workfile using the base portion of the series name (if you specify \u201c?CONS\u201d the stacked series will be named \u201cCONS\u201d), and will contain the values of the individual series stacked one on top of another. If one of the individual series associated with a particular stack ID does not exist, the corresponding stacked values will be assigned the value NA.\nIndividual (simple) series may also be stacked. You may list the names of individual simple series ( e.g. , \u201cPOP INC\u201d), or you can specify your series using expressions containing the wildcard character \u201c*\u201d ( e.g. , \u201c*\u201d, \u201c*C\u201d, and \u201cF*\u201d). A simple series will be stacked on top of itself, once for each ID value. If the target workfile page is in the same workfile, EViews will create a link in the new page; otherwise, the stacked series will contain (repeated) copies of the original values.\nWhen evaluating wildcard expressions, stacked series take precedence over simple series. This means that simple series wildcards will be processed using the list of series not already included as a stacked series.\nIf the series_to_stack list is not specified, the expression \u201c*?  *\u201d, is assumed."}, "pagestruct": {"uri": "commandcmd-pagestruct", "anchor": "", "usage": "pagestruct (options) [id_list]\npagestruct (options) *", "description": "Assign a structure to the active workfile page.", "long_description": "where id_list is an (optional) list of ID series. The \u201c*\u201d may be used as shorthand for the indices currently in place.\nIf an id_list is provided, EViews will attempt to auto determine the workfile structure. Auto-determination may be overridden through the use of options.\nIf you do not provide an id_list , the workfile will be restructured as a regular frequency workfile. In this case, either the \u201cnone\u201d or the \u201cfreq=\u201d and \u201cstart=\u201d options described below must be provided."}, "pageunlink": {"uri": "commandcmd-pageunlink", "anchor": "", "usage": "pageunlink", "description": "Break links in all link objects and auto-updating series (formulae) in the active workfile page.", "long_description": "You should use some caution with this command as you will not be prompted before the links and auto-updating series are converted."}, "pageunstack": {"uri": "commandcmd-pageunstack", "anchor": "", "usage": "pageunstack (options) stack_id obs_id [ @ series_to_unstack]", "description": "Unstack workfile page (convert repeated observations to repeated series).", "long_description": "Create a new workfile page by taking series objects (series, alphas, or links) in the default workfile page and breaking them into multiple series (or alphas), one for each distinct value found in a user supplied list of series objects. Typically used on a page with a panel structure.\nwhere stack_id is a single series containing the unstacking ID values used to identify the individual unstacked series, obs_id is a series containing the observation IDs, and series_to_unstack is an optional list of series objects to be copied to the new workfile."}, "param": {"uri": "commandcmd-param", "anchor": "", "usage": "param coef_name1 number1 [coef_name2 number2 coef_name3 number3\u2026]", "description": "Set parameter values.", "long_description": "Allows you to set the current values of coefficient vectors. The command may be used to provide starting values for the parameters in nonlinear least squares, nonlinear system estimation, and (optionally) ARMA estimation.\nList, in pairs, the names of the coefficient vector and its element number followed by the corresponding starting values for any of the parameters in your equation."}, "pie": {"uri": "graphmaster-pie", "anchor": "", "usage": "pie (options) o1 o2 [o3 ... ]\nobject_name. pie (options) [categorical_spec(arg)]", "description": "Display a pie chart view.", "long_description": "In the default setting, there will be one pie for each date or observation number. Each series or column of data is shown as a wedge in a different color/pattern, where the width of the wedge equals the percentage contribution of the series or column to the total of all listed series or columns. Negative and missing values are treated as zeros.\nwhere o1 , o2 , ..., are series or group objects. You may specify general graph characteristics by including options following the pie keyword.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "plot": {"uri": "commandcmd-plot", "anchor": "", "description": "Line graph.", "long_description": "Provided for backward compatibility. See line ."}, "pool": {"uri": "poolcmd-pool_2", "anchor": "", "usage": "pool name [id1 id2 id3 \u2026]", "description": "Declare pool object.", "long_description": "Follow the pool keyword with a name for the pool object. You may optionally provide the identifiers for the cross-section members of the pool object. Pool identifiers may be added or removed at any time using Pool::add and Pool::drop ."}, "preview": {"uri": "commandcmd-preview", "anchor": "", "usage": "preview (options) [path\\]db_name [as shorthand_name]::object_name\npreview (options) [path\\]workfile name::object_name\npreview (options) [path\\]workfile name::pagename\\object_name", "description": "Preview objects contained in a database or workfile.", "long_description": "Database object preview:\nWorkfile object preview:"}, "print": {"uri": "commandcmd-print", "anchor": "", "usage": "print (options) object1 [object2 object3 \u2026]\nprint (options) object_name . view_command", "description": "Sends views of objects to the default printer.", "long_description": "print should be followed by a list of object names or a view of an object to be printed. The list of names must be of the same object type. If you do not specify the view of an object, print will print the default view for the object."}, "probit": {"uri": "commandcmd-probit", "anchor": "", "description": "Estimation of binary dependent variable models with normal errors.", "long_description": "Equivalent to \u201c binary(d=n) \u201d.\nSee binary ."}, "program": {"uri": "commandcmd-program", "anchor": "", "usage": "program [path\\]prog_name", "description": "Declare a program.", "long_description": "Enter a name for the program after the program keyword. If you do not provide a name, EViews will open an untitled program window. Programs are text files, not objects."}, "qqplot": {"uri": "graphmaster-qqplot", "anchor": "", "usage": "qqplot (options) o1 [o2 o3 ... ]\nobject_name. qqplot (options) analytical_spec(arg) [categorical_spec(arg)]", "description": "Display a quantile-quantile graph.", "long_description": "Plots the (empirical) quantiles of a series or matrix column against either the quantiles of a theoretical distribution or the empirical quantiles of other series or columns in the group or matrix. You may specify the theoretical distribution and/or the method used to compute the empirical quantiles as options.\nwhere o1 , o2 , ..., are series or group objects.\nWhen used as a command, qqplot displays the theoretical qq-plot against a fitted normal distribution.\nWhen used to display the view of an object, you must specify a theoretical or empirical quantile graph in the analytical_spec (see \u201cAnalytical Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "qreg": {"uri": "commandcmd-qreg", "anchor": "", "usage": "qreg (options) y x1 [x2 x3 ...]\nqreg (options) linear_specification", "description": "Estimate a quantile regression specification."}, "range": {"uri": "commandcmd-range", "anchor": "", "description": "Reset the workfile range for a regular frequency workfile.", "long_description": "No longer supported. See the replacement command pagestruct ."}, "read": {"uri": "commandcmd-read", "anchor": "", "usage": "read (options) [path\\]file_name name1 [name2 name3 ...]\nread (options) [path \\] file_name n", "description": "Import data from a foreign disk file into series.", "long_description": "May be used to import data into an existing workfile from a text, Excel, or Lotus file on disk.\nUnless you need to merge data into an existing workfile page, we recommend that you use the more powerful, easy-to-use tools for reading data (see \u201cCreating a Workfile by Reading from a Foreign Data Source\u201d ).\nSee pageload , and wfopen for command details.\nYou must supply the name of the source file. If you do not include the optional path specification, EViews will look for the file in the default directory. Path specifications may point to local or network drives. If the path specification contains a space, you may enclose the entire expression in double quotation marks.\nThe input specification follows the source file name. There are two ways to specify the input series. First, you may list the names of the series in the order they appear in the file. Second, if the data file contains a header line for the series names, you may specify the number, n, of series in the file instead of a list of names. EViews will name the n series using the names given in the header line. If you specify a number and the data file does not contain a header line, EViews will name the series as SER01 , SER02 , SER03 , and so on.\nTo import data into alpha series, you must specify the names of your series, and should enter the tag \u201c$\u201d following the series name ( e.g. , \u201cNAME $ INCOME CONSUMP\u201d)."}, "rename": {"uri": "commandcmd-rename", "anchor": "", "usage": "rename old_name new_name [old_name1 new_name1 [old_name2 new_name2 [...]]]", "description": "Rename an object in the active workfile or database.", "long_description": "After the rename keyword, list the pairs of old object names followed by the new names. Note that the name specifications may include matching wildcard patterns."}, "reset": {"uri": "commandcmd-reset", "anchor": "", "usage": "reset (n, options)", "description": "Compute Ramsey\u2019s regression specification error test.", "long_description": "You must provide the number of powers of fitted terms n to include in the test regression."}, "rndseed": {"uri": "commandcmd-rndseed", "anchor": "", "usage": "rndseed (options) integer", "description": "Seed the random number generator.", "long_description": "Use rndseed when you wish to generate a repeatable sequence of random numbers, or to select the generator to be used.\nNote that EViews 5 has updated the seeding routines of two of our pseudo-random number generators (backward compatible options are provided). It is strongly recommended that you use new generators.\nFollow the rndseed keyword with the optional generator type and an integer for the seed."}, "robustls": {"uri": "commandcmd-robustls", "anchor": "", "description": "Estimates an equation using robust least squares.", "long_description": "You may perform three different types of robust estimation: M-estimation, S-estimation and MM-estimation."}, "rowvector": {"uri": "rowvectorcmd-rowvector_2", "anchor": "", "usage": "rowvector (n1) rowvector_name\nrowvector rowvector_name=assignment", "description": "Declare a rowvector object.", "long_description": "The rowvector command declares and optionally initializes a rowvector object.\nYou may optionally specify the size (number of columns) of the rowvector in parentheses after the rowvector keyword. If you do not specify the size, EViews creates a rowvector of size 1, unless the declaration is combined with an assignment.\nBy default, all elements of the rowvector are set to 0, unless an assignment statement is provided. EViews will automatically resize new rowvectors, if appropriate."}, "run": {"uri": "commandcmd-run", "anchor": "", "usage": "run (options) [path \\] prog_name(prog_options) [%0 %1 \u2026]", "description": "Run a program.", "long_description": "The run command executes a program. The program may be located in memory or stored in a program file on disk.\nIf you wish to pass one or more options to the program, you should enclose them in parentheses immediately after the filename. If the program has arguments, you should list them after the filename.\nEViews first checks to see if the specified program is in memory. If the program is not located, EViews then looks for the program on disk in the current working directory , or in the specified path. The program file should have a \u201c.PRG\u201d extension, which you need not specify in the prog_name ."}, "sample": {"uri": "samplecmd-sample_2", "anchor": "", "usage": "sample smpl_name [smpl_statement]", "description": "Declare a sample object.", "long_description": "The sample statement declares, and optionally defines, a sample object.\nFollow the sample keyword with a name for the sample object and a sample statement. If no sample statement is provided, the sample object will be set to the current workfile sample.\nTo reset the sample dates in a sample object, you must use the Sample::set procedure."}, "save": {"uri": "commandcmd-save", "anchor": "", "usage": "save [path\\]file_name", "description": "Save current workfile to disk.", "long_description": "This usage is provided only for backward compatibility, as it has been replaced with the equivalent wfsave command.\nFollow the keyword with a name for the file. If an explicit path is not specified, the file will be stored in the default directory, as set in the File Locations global options."}, "scalar": {"uri": "scalarcmd-scalar_2", "anchor": "", "usage": "scalar scalar_name[=assignment]", "description": "Declare a scalar object.", "long_description": "The scalar command declares a scalar object and optionally assigns a value.\nThe scalar keyword should be followed by a valid name, and optionally, by an assignment. If there is no explicit assignment, the scalar will be initialized with a value of zero."}, "scat": {"uri": "graphmaster-scat", "anchor": "", "usage": "scat (options) o1 o2 [o3 ... ]\nobject_name. scat (options) [auxiliary_spec(arg)] [categorical_spec(arg)]", "description": "Display a scatterplot (if possible).", "long_description": "A scatterplot graph plots the values of one series or column against another using symbols.\nThere must be at least two series or columns to create a scatterplot. By default, the first series or column will be located along the horizontal axis, and the remaining data on the vertical axis. You may optionally choose to plot the data in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth, or to construct graphs using all possible pairs (or the lower triangular set of pairs).\nScatterplots are simply XY-line plots with symbols turned on and lines turned off (see Graph::setelem ).\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the scat keyword, you may specify general graph characteristics using options . Available options include plotting the data in pairs or in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "scatmat": {"uri": "graphmaster-scatmat", "anchor": "", "usage": "scatmat (options) o1 o2 [o3 ... ]\nobject_name. scatmat (options) [auxiliary_spec(arg)]", "description": "Display a matrix of scatterplots.", "long_description": "The scatmat view forms pairs using all possible pairwise combinations for the series or columns and constructs a plot for each pair, using specialized positioning and axis labeling.\nScatterplots are simply XY-line plots with symbols turned on and lines turned off (see Graph::setelem ). The scatmat graph type is equivalent to using scat with the \u201cmult=mat\u201d or \u201cmult=lower\u201d option indicating that the data should be graphed using the full or lower-triangular matrix of pairs.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the scatmat keyword, you may specify general graph characteristics using options . Available options include template application and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d )."}, "scatpair": {"uri": "graphmaster-scatpair", "anchor": "", "usage": "scatpair (options) o1 o2 [o3 ... ]\nobject_name. scatpair (options) [auxiliary_spec(arg)]", "description": "Display a scatterplot pairs graph (if possible).", "long_description": "The data will be plotted in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth. If the number of series or columns is odd, the last one will be ignored.\nScatterplots are simply XY plots with symbols turned on and lines turned off (see Graph::setelem ). The scatpair graph type is equivalent to using scat with the \u201cmult=pairs\u201d option indicating that the data should be graphed in pairs.\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the scatpair keyword, you may specify general graph characteristics using options . Available options include plotting the data in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d )."}, "seas": {"uri": "commandcmd-seas", "anchor": "", "usage": "seas (options) series_name name_adjust [name_fac]", "description": "Seasonal adjustment.", "long_description": "The seas command carries out seasonal adjustment using either the ratio to moving average, or the difference from moving average technique.\nEViews also performs Census X11 and X12 seasonal adjustment. For details, see Series::x11 and Series::x12 .\nList the name of the original series and the name to be given to the seasonally adjusted series. You may optionally include an additional name for the seasonal factors. seas will display the seasonal factors using the convention of the Census X11 program."}, "seasplot": {"uri": "graphmaster-seasplot", "anchor": "", "usage": "seasplot (options) o1 [o2 o3 ... ]\nobject_name. seasplot (options)", "description": "Display a seasonal line graph view.", "long_description": "seasplot displays a paneled line graph view of a series or column ordered by season. This view is only available for workfiles with quarterly, monthly, or semi-annual frequencies.\nwhere o1 , o2 , ..., are series or group objects."}, "series": {"uri": "seriescmd-series_2", "anchor": "", "usage": "series ser_name[=formula]", "description": "Declare a series object.", "long_description": "The series command creates and optionally initializes a series, or modifies an existing series.\nThe series command should be followed by either the name of a new series, or an explicit or implicit expression for generating a series. If you create a series and do not initialize it, the series will be filled with NAs. Rules for composing a formula are given in \u201cNumeric Expressions\u201d ."}, "shell": {"uri": "commandcmd-shell", "anchor": "", "usage": "shell (options) [arg1 arg2 arg3\u2026]", "description": "Start the Windows command shell, optionally executing a command.", "long_description": "See spawn for available options. By default, the Windows command shell will be started in hidden mode with the exit code for success set to zero."}, "show": {"uri": "commandcmd-show", "anchor": "", "usage": "show object_name. view_command\nshow object1 [object2 object3 ...]", "description": "Display objects.", "long_description": "The show command displays series or other objects on your screen. A scalar object is displayed in the status line at the bottom of the EViews window.\nThe command show should be followed by the name of an object, or an object name with an attached view.\nFor series and graph objects, show can operate on a list of names. The list of names must be of the same type. show creates and displays an untitled group or multiple graph object."}, "smooth": {"uri": "commandcmd-smooth", "anchor": "", "usage": "smooth (method) series_name smooth_name [freq]", "description": "Forecasts a series using one of a number of exponential smoothing techniques. By default, smooth estimates the damping parameters of the smoothing model to minimize the sum of squared forecast errors, but you may specify your own values for the damping parameters.", "long_description": "smooth automatically calculates in-sample forecast errors and puts them into the series RESID .\nYou should follow the smooth keyword with the name of the series to smooth and a name for the smoothed series. You must also specify the smoothing method in parentheses. The optional freq may be used to override the default for the number of periods in the seasonal cycle. By default, this value is set to the workfile frequency ( e.g. \u2014 4 for quarterly data). For undated data, the default is 5."}, "smpl": {"uri": "commandcmd-smpl", "anchor": "", "usage": "smpl smpl_spec\nsmpl sample_name", "description": "Set sample range.", "long_description": "The smpl command sets the workfile sample to use for statistical operations and series assignment expressions.\nList the date or number of the first observation and the date or number of the last observation for the sample. Rules for specifying dates are given in \u201cDates\u201d . The sample spec may contain more than one pair of beginning and ending observations.\nThe smpl command also allows you to select observations on the basis of conditions specified in an if statement. This enables you to use logical operators to specify what observations to include in EViews\u2019 procedures. Put the if statement after the pairs of dates.\nYou can also use smpl to set the current observations to the contents of a named sample object; put the name of the sample object after the keyword."}, "solve": {"uri": "commandcmd-solve", "anchor": "", "usage": "solve (options) model_name", "description": "Solve the model.", "long_description": "solve finds the solution to a simultaneous equation model for the set of observations specified in the current workfile sample.\nNote: when solve is used in a program (batch mode) models are always solved over the workfile sample. If the model contains a solution sample, it will be ignored in favor of the workfile sample.\nYou should follow the name of the model after the solve command. The default solution method is dynamic simulation. You may modify the solution method as an option.\nsolve first looks for the specified model in the current workfile. If it is not present, solve attempts to fetch a model file (.DBL) from the default directory or, if provided, the path specified with the model name."}, "sort": {"uri": "commandcmd-sort", "anchor": "", "usage": "sort (options) arg1 [arg2 arg3\u2026]", "description": "Sort the current workfile page.", "long_description": "The sort command sorts all series in the workfile page on the basis of the values of one or more of the series. For purposes of sorting, NAs are considered to be smaller than any other value. By default, EViews will sort the series in ascending order. You may use options to override the sort order.\nEViews will first remove any workfile structures and then will sort the workfile using the specified settings.\nList the name of the series or groups by which you wish to sort the workfile. If you list two or more series, sort uses the values of the second series to resolve ties from the first series, and values of the third series to resolve ties from the second, and so on."}, "spawn": {"uri": "commandcmd-spawn", "anchor": "", "usage": "spawn (options) filename [arg1 arg2 arg3\u2026]", "description": "Spawn a new process.", "long_description": "Follow the keyword with a filename indicating the process to spawn, and optional arguments to be passed to the process."}, "spike": {"uri": "graphmaster-spike", "anchor": "", "usage": "spike (options) o1 [o2 o3 ... ]\nobject_name. spike (options) [categorical_spec(arg)]", "description": "Display a spike graph view.", "long_description": "where o1 , o2 , ..., are series or group objects.\nFollowing the spike keyword, you may specify general graph characteristics using options . Available options include multiple graph handling, dual scaling, template application, data contraction, adding axis extensions, and rotation.\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "spool": {"uri": "spoolcmd-spool_2", "anchor": "", "usage": "spool spool_name", "description": "Declare a spool object.", "long_description": "where spool_name is the name to be given the new object."}, "sspace": {"uri": "sspacecmd-sspace_2", "anchor": "", "usage": "sspace sspace_name", "description": "Declare state space object.", "long_description": "Follow the sspace keyword with a name to be given the sspace object."}, "stats": {"uri": "commandcmd-stats", "anchor": "", "usage": "stats (options) ser1 [ser2 ser3 \u2026]", "description": "Descriptive statistics.", "long_description": "Computes and displays a table of means, medians, maximum and minimum values, standard deviations, and other descriptive statistics of one or more series or a group of series.\nstats creates an untitled group containing all of the specified series, and opens a statistics view of the group. By default, if more than one series is given, the statistics are calculated for the common sample."}, "statusline": {"uri": "commandcmd-statusline", "anchor": "", "usage": "statusline message_string", "description": "Send text to the status line.", "long_description": "Displays a message in the status line at the bottom of the EViews main window. The message may include text, control variables, and string variables."}, "string": {"uri": "stringcmd-string_3", "anchor": "", "usage": "string string_name[=assignment]", "description": "Declare a string object.", "long_description": "The string command declares a string object and optionally assigns text.\nThe string keyword should be followed by a valid name, and optionally, by an assignment. If there is no explicit assignment, the scalar will be initialized with a value of null."}, "svector": {"uri": "svectorcmd-svector_2", "anchor": "", "usage": "svector (n) stringvector_name", "description": "Declare a string vector object.", "long_description": "The svector command declares a string vector object.\nThe svector keyword should be followed by a valid name. n is an optional length for the vector. If n is not provided, the resulting svector will be one element long."}, "sym": {"uri": "symcmd-sym_2", "anchor": "", "usage": "sym (n) sym_name[=assignment]", "description": "Declare a symmetric matrix object.", "long_description": "The sym command declares and optionally initializes a matrix object.\nsym takes an optional argument n specifying the row and column dimension of the matrix and is followed by the name you wish to give the matrix.\nYou may also include an assignment in the sym command. The sym will be resized, if necessary. Once declared, symmetric matrices may be resized by repeating the sym command for a given matrix name."}, "system": {"uri": "systemcmd-system_2", "anchor": "", "usage": "system system_name", "description": "Declare system of equations.", "long_description": "Follow the system keyword by a name for the system. If you do not provide a name, EViews will open an untitled system object (if in interactive mode)."}, "table": {"uri": "tablecmd-table_2", "anchor": "", "usage": "table (rows, cols) table_name\ntable_name. table (options)", "description": "Declare a table object.", "long_description": "The table command declares and optionally sizes a table object. When used as a table view, table displays the contents of the table.\nThe table command takes two optional arguments specifying the row and column dimension of the table, and is followed by the name you wish to give the matrix. If no sizing information is provided, the table will contain a single cell.\nYou may also include an assignment in the sym command. The symmetric matrix will be resized, if necessary. Once declared, symmetric matrices may be resized by repeating the sym command with new dimensions.\nThe table view displays the contents of the table. It is a synonym for sheet ."}, "testadd": {"uri": "commandcmd-testadd", "anchor": "", "usage": "testadd (options) arg1 [arg2 arg3 ...]", "description": "Test whether to add regressors to an estimated equation.", "long_description": "Tests the hypothesis that the listed variables were incorrectly omitted from an estimated equation (only available for equations estimated by list). The test displays some combination of Wald and LR test statistics, as well as the auxiliary regression.\nList the names of the series or groups of series to test for omission after the keyword. The test is applied to the default equation, if defined."}, "testdrop": {"uri": "commandcmd-testdrop", "anchor": "", "usage": "testdrop (options) arg1 [arg2 arg3 ...]", "description": "Test whether to drop regressors from a regression.", "long_description": "Tests the hypothesis that the listed variables were incorrectly included in the estimated equation (only available for equations estimated by list). The test displays some combination of [img:../content/images/commandcmd.092.132.1.jpg] and LR test statistics, as well as the test regression.\nList the names of the series or groups of series to test for omission after the keyword. The test is applied to the default equation, if defined."}, "text": {"uri": "textcmd-text_2", "anchor": "", "usage": "text object_name\ntext_name. text (options)", "description": "Declare a text object when used as a command, or display text representation of the text object.", "long_description": "When used as a command to declare a table object, follow the keyword with a name of the text object."}, "threshold": {"uri": "commandcmd-threshold", "anchor": "", "usage": "threshold (options) y z1 [z2 z3 ...] [ @nv x1 x2 x3 ...] @thresh t1 [t2 t3 ...]", "description": "Estimation by discrete or smooth threshold least squares, including threshold autoregression.", "long_description": "List the dependent variable first, followed by a list of the independent variables that have coefficients that are allowed to vary across thresholds, followed optionally by the keyword @nv and a list of non-varying coefficient variables.\nList a threshold variable or variables (for model selection) or a single integer or range pairs after the keyword @thresh . The integer or range pairs indicate a self-exciting model with the lagged dependent variable as the threshold variable.\nFor smooth threshold equations you may specify variables that are to be included only in the base specification or only in the alternative specification. Base-only variables should be specified in parentheses using the @base key, as in \u201c@base(x1) @base(x2) @base(x3 x4)\u201d. Alternative-only variables may be specified analogously using the @alt key."}, "tic": {"uri": "commandcmd-tic", "anchor": "", "usage": "Command: tic", "description": "Reset the timer."}, "toc": {"uri": "commandcmd-toc", "anchor": "", "usage": "Command: toc", "description": "Display elapsed time (since timer reset) in seconds."}, "tsls": {"uri": "commandcmd-tsls", "anchor": "", "usage": "tsls (options) y x1 [x2 x3 ...] @ z1 [z2 z3 ...]\ntsls (options) specification @ z1 [z2 z3 ...]", "description": "Two-stage least squares.", "long_description": "Carries out estimation using two-stage least squares.\nTo use the tsls command, list the dependent variable first, followed by the regressors, then any AR or MA error specifications, then an \u201c@\u201d-sign, and finally, a list of exogenous instruments. You may estimate nonlinear equations or equations specified with formulas by first providing a specification, then listing the instrumental variables after an \u201c@\u201d-sign.\nThere must be at least as many instrumental variables as there are independent variables. All exogenous variables included in the regressor list should also be included in the instrument list. A constant is included in the list of instrumental variables even if not explicitly specified."}, "unlink": {"uri": "commandcmd-unlink", "anchor": "", "usage": "unlink link_names", "description": "Break links and auto-updating series (formulae) in the specified series objects.", "long_description": "unlink converts link objects and auto-updating series to ordinary series or alphas. Follow the keyword with a list of names of links and auto-updating series to be converted to ordinary series (values). The list of links may include wildcard characters."}, "uroot": {"uri": "commandcmd-uroot", "anchor": "", "usage": "uroot (options) series_name", "description": "Carries out unit root tests on a series or panel structured series.", "long_description": "For ordinary series, computes conventional Augmented Dickey-Fuller (ADF), GLS detrended Dickey-Fuller (DFGLS), Phillips-Perron (PP), Kwiatkowski, et. al. (KPSS), Elliot, Rothenberg, and Stock (ERS) Point Optimal, or Ng and Perron (NP) tests for a unit root in the series or its first or second difference.\nFor series in a panel structured workfile, computes Levin, Lin and Chu (LLC), Breitung, Im, Pesaran, and Shin (IPS), Fisher - ADF, Fisher - PP, or Hadri panel unit root tests on levels, first, or second differences of the data.\nThere are different options for conventional tests on an ordinary series and panel tests for series in panel structured workfiles."}, "userobj": {"uri": "userobjcmd-userobj_2", "anchor": "", "usage": "userobj userobject_name", "description": "Declare an unregistered, empty user object.", "long_description": "The userobj command declares a new empty user object."}, "valmap": {"uri": "valmapcmd-valmap_2", "anchor": "", "usage": "valmap valmap_name", "description": "Declare a value map object.", "long_description": "Follow the valmap keyword with a name for the object."}, "var": {"uri": "varcmd-var_2", "anchor": "", "usage": "var var_name\nvar var_name. ls (options) lag_pairs endog_list [ @ exog_list]\nvar var_name. ec (trend, n) lag_pairs endog_list [ @ exog_list ]\nvar var_name. bvar (trend, n) lag_pairs endog_list [ @ exog_list ]\nvar var_name. btvcvar (options) lag_pairs endog_list [ @ exog_list]\nvar var_name. mfvar (options) var_lag endog_list [ @ exog_list] @hf high_freq_list\nvar var_name. switchreg (options) lag_pairs endog_list [ @ exog_list] [ @prv list_of_probability_regressors ]", "description": "Declare a var (Vector Autoregression) object.", "long_description": "Declare the var as a name, or a name followed by an estimation method and specification."}, "varest": {"uri": "commandcmd-varest", "anchor": "", "usage": "varest (options) lag_pairs endog_list [@ exog_list ]\nvarest ( method=ec , trend, n, options ) lag_pairs endog_list [@ exog_list ]", "description": "Specify and estimate a VAR or VEC.", "long_description": "The first form of the command estimates a VAR. It is the interactive command equivalent of using ls to estimate a named VAR object (see Var::ls for syntax and details).\nThe second form of the command estimates a VEC. It is the interactive command equivalent of using ec to estimate a named VAR object (see Var::ec for syntax and details)."}, "varsel": {"uri": "commandcmd-varsel", "anchor": "", "usage": "varsel (options) y x1 [x2 x3 ...] @ z1 z2 z3", "description": "Estimation by stepwise least squares.", "long_description": "Specify the dependent variable followed by a list of variables to be included in the regression, but not part of the search routine, followed by an \u201c@\u201d symbol and a list of variables to be part of the search routine. If no included variables are required, simply follow the dependent variable with an \u201c@\u201d symbol and the list of search variables."}, "vector": {"uri": "vectorcmd-vector_2", "anchor": "", "usage": "vector (size) vector_name [=assignment]", "description": "Declare a vector object.", "long_description": "The vector command declares and optionally initializes a (column) vector object.\nThe keyword vector should be followed by the name you wish to give the vector. You may also provide an optional argument specifying the size of the vector. If you do not provide a size, EViews will create a single element vector. Once declared, vectors may be resized by repeating the command with a new size.\nYou may combine vector declaration and assignment. If there is no assignment statement, the vector will initially be filled with zeros."}, "wfclose": {"uri": "commandcmd-wfclose", "anchor": "", "usage": "wfclose( options ) [name]", "description": "Close the active or specified workfile.", "long_description": "wfclose allows you to close the currently active workfile. You may optionally provide the name of a workfile if you do not wish to close the active workfile. If more than one workfile is found with the same name, the one most recently opened will be closed."}, "wfcompare": {"uri": "commandcmd-wfcompare", "anchor": "", "usage": "wfcompare (options) targetspec baselinespec [ @keep keeplist @drop droplist]", "description": "Compare the contents of the current workfile or page with the contents of a different workfile, page or database.", "long_description": "The command shows a list of any differences between the objects specified by targetspec and those specified by baselinespec .\ntargetspec should be a specification of objects in the current workfile. It should take the form of [page\\]name_pattern , where the optional page\\ may be used to specify a specific page of the current workfile. name_pattern is used to list the objects you wish to compare. The typical form of targetspec is simply \u201c*\u201d, meaning to compare all objects in the current workfile.\nbaselinespec should be a specification of the list of objects to compare against. It should take the form of [container::page\\]name_pattern , where the optional container::page\\ may be used to specify the name of the workfile or database or page containing the objects to compare against. name_pattern is used to list the objects you wish to compare against. If baselinespec is blank, the version of the current workfile stored on disk is used as the baseline.\nThe optional @keep and @drop lists allow you to narrow further the list of objects in targetspec by listing specific objects to compare (using @keep ), or drop from the targetspec (using @drop )."}, "wfcreate": {"uri": "commandcmd-wfcreate", "anchor": "", "usage": "wfcreate (options) frequency[(subperiod_opts)] start_date end_date [num_cross_sections]\nwfcreate (options) frequency[(subperiod_opts)] start_date +num_observations\nwfcreate (options) u num_observations", "description": "Create a new workfile. The workfile becomes the active workfile.", "long_description": "The first form of the command may be used to create a new regular frequency workfile with the specified frequency, start, and end date. Subperiod options may also be specified for intraweek or intraday data. See table below for a complete description for each frequency. If you include the optional num_cross_sections, EViews will create a balanced panel page using integer identifiers for each of the cross-sections. Note that more complex panel structures may be created using pagestruct . You may use the @now keyword to specify the current date/time as either the start_date or end_date .\nThe second form of the command may be used to create a new regular frequency workfile with a specified frequency, start date and number of observations. The end date is calculated as the start date plus the number of periods (determined by the frequency specification) given by num_observations .\nThe third form of the command is used to create an unstructured workfile with the specified number of observations."}, "wfdetails": {"uri": "commandcmd-wfdetails", "anchor": "", "usage": "wfdetails (options) col1[(width1)] [col2[(width2)].....] @sort sortcol", "description": "Change the details displayed in the current workfile window, optionally freezing the results into a table object in the current workfile.", "long_description": "Specify the names of the attribute columns you would like to display in the workfile details view, optionally including the width of the column in parenthesis. Widths can be specified with positive numbers, indicating a width in pixels, or negative numbers if you wish to specify the width in approximate characters.\nYou may use the @sort keyword at the end of the specification to indicate by which column to sort the details view."}, "wfdir": {"uri": "commandcmd-wfdir", "anchor": "", "usage": "wfdir", "description": "Change the workfile view to a simple object directory listing.", "long_description": "If the workfile is currently in details view, the wfdir command switches the view back to a simple directory listing."}, "wfopen": {"uri": "commandcmd-wfopen", "anchor": "", "usage": "wfopen [path\\]source_name\nwfopen (options) source_description [table_description] [variables_description]\nwfopen (options) source_description [table_description] [dataset_modifiers]\n[ @keep keep_list] [ @drop drop_list] [ @keepmap keepmap_list] [ @dropmap dropmap_list] [ @selectif condition]", "description": "Open a workfile. Reads in a previously saved workfile from disk, or reads the contents of a foreign data source into a new workfile.", "long_description": "The opened workfile becomes the default workfile; existing workfiles in memory remain on the desktop but become inactive.\nwhere path is an optional local path or URL.\nThere are three basic forms of the wfopen command:\n\u2022 the first form is used by EViews native ( \u201cEViews and MicroTSP\u201d ) and time series database formats ( \u201cTime Series Formats\u201d ).\n\u2022 the second form used for raw data files\u2014Excel, Lotus, ASCII text, and binary files ( \u201cRaw Data Formats\u201d ).\n\u2022 the third form is used with the remaining source formats, which we term dataset formats, since the data have already been arranged in named variables ( \u201cDatasets\u201d ).\n(See \u201cOptions\u201d for a description of the supported source formats and corresponding types.)\nIn all three cases, the workfile or external data source should be specified as the first argument following the command keyword and options.\n\u2022 In most cases, the external data source is a file, so the source_description will be the description of the file (including local path or URL information, if necessary). Alternatively, the external data source may be the output from a web server, in which case the URL should be provided. Similarly, when reading from an ODBC query, the ODBC DSN (data source name) should be used as the source_description .\nIf the source_description contains spaces, it must be enclosed in (double) quotes.\nFor raw and dataset formats, you may use table_description to provide additional information about the data to be read:\n\u2022 Where there is more than one table that could be formed from the specified external data source, a table_description may be provided to select the desired table. For example, when reading from an Excel file, an optional cell range may be provided to specify which data are to be read from the spreadsheet. When reading from an ODBC data source, a SQL query or table name must be used to specify the table of data to be read.\n\u2022 In raw data formats, the table_description allows you to provide additional information regarding names and descriptions for variables to be read, missing values codes, settings for automatic format, and data range subsetting.\n\u2022 When working with text or binary files, the table_description must be used to describe how to break up the file into columns and rows.\nFor raw and non-EViews dataset formats, you may use the dataset_modifiers specification to select the set of variables, maps (value labels), and observations to be read from the source data. The dataset_modifiers consists of the following keyword delimited lists:\n\u2022 The @keep and @drop keywords, followed by a list of names and patterns, are used to specify variables to be retain or dropped. Similarly, the @keepmap and @dropmap keywords followed by lists of name patterns controls the reading of value labels. The keyword @selectif , followed by an if condition (e.g., \u201cif age>30 and gender=1\u201d) may be used to select a subset of the observations in the original data. By default, all variables, value labels, and observations are read.\nBy default, all variables, maps and observations in the source file will be read."}, "wforder": {"uri": "commandcmd-wforder", "anchor": "", "usage": "wforder pagenames", "description": "Change the workfile page order.", "long_description": "where pagenames is a space delimited list of page names. If the workfile contains more pages not listed in pagenames , they will be placed at the end."}, "wfrefresh": {"uri": "commandcmd-wfrefresh", "anchor": "", "usage": "wfrefresh", "description": "Refresh all links and auto-series in the active workfile. Primarily used to refresh links that use external database data."}, "wfsave": {"uri": "commandcmd-wfsave", "anchor": "", "usage": "wfsave (options) [path\\]filename\nwfsave (options) source_description [ nonames ] [ @keep keep_list] [ @drop drop_list] [ @keepmap keepmap_list] [ @dropmap dropmap_list] [ @smpl smpl_spec]\nwfsave (options) source_description table_description [ nonames ] [ @keep keep_list] [ @drop drop_list] [ @keepmap keepmap_list] [ @dropmap dropmap_list] [ @smpl smpl_spec]", "description": "Save the default workfile as an EViews workfile (.wf1 file) or as a foreign file or data source.", "long_description": "saves the active workfile in the specified directory using filename . By default, the workfile is saved as an EViews workfile, but options may be used to save all or part of the active page in a foreign file or data source.\nWhen saving to a foreign data file, the basic specification consists of a \u201ctype=\u201d option and source_description and table_description arguments which specify the format of the foreign data file. See below for details on source_description and table_description .\nThe remaining optional elements specify the actual elements to be saved."}, "wfselect": {"uri": "commandcmd-wfselect", "anchor": "", "usage": "wfselect wfname[ \\ pgname]", "description": "Make the selected workfile page the active workfile page.", "long_description": "where wfname is the name of a workfile that has been loaded into memory. You may optionally provide the name of a page in the new default workfile that you wish to be made active."}, "wfsnapshot": {"uri": "commandcmd-wfsnapshot", "anchor": "", "usage": "wfsnapshot (options) [label] [description]", "description": "Takes a manual snapshot of the current workfile."}, "wfstats": {"uri": "commandcmd-wfstats", "anchor": "", "usage": "wfstats [wfname]", "description": "Display the workfile statistics and summary view.", "long_description": "displays the workfile statistics and summary view showing, for each page of the specified workfile, the structure of the page, and a summary of the objects contained in the page. The specified workfile must be open. If no workfile is specified, wfstats will display results for the active workfile."}, "wfunlink": {"uri": "commandcmd-wfunlink", "anchor": "", "usage": "wfunlink", "description": "Break links in all link objects and auto-updating series (formulae) in the active workfile.", "long_description": "You should use some caution with this command as you will not be prompted before the links and auto-updating series are converted."}, "wfuse": {"uri": "commandcmd-wfuse", "anchor": "", "usage": "wfuse [path\\]workfile_name[.wf1][\\page_name]", "description": "Activates a workfile. If the workfile is currently open in EViews, then it is selected to become the default workfile. If the workfile is not currently open, it is opened.", "long_description": "The name of the workfile is specified as the argument to wfopen and may be followed by an optional page name to specify a specific page in the workfile. If the workfile is not located in the current default directory, and is not currently open in EViews, you should specify the path of the workfile along with its name. If you do specify a path, you should also include the .WF1 extension."}, "workfile": {"uri": "commandcmd-workfile", "anchor": "", "description": "Create or change workfiles.", "long_description": "No longer supported; provided for backward compatibility. This command has been replaced by wfcreate and pageselect ."}, "write": {"uri": "commandcmd-write", "anchor": "", "usage": "write (options) [path\\]filename arg1 [arg2 arg3 \u2026]", "description": "Write EViews data to a text (ASCII), Excel, or Lotus file on disk.", "long_description": "Creates a foreign format disk file containing EViews data. May be used to export EViews data to another program.\nUnless you need to write your workfile data in transposed or in Lotus form, we recommend that you use the more powerful command for writing a workfile page documented in pagesave .\nFollow the keyword by a name for the output file and list the series to be written. The optional path name may be on the local machine, or may point to a network drive. If the path name contains spaces, enclose the entire expression in double quotation marks.\nNote that EViews cannot, at present, write into an existing file. The file that you select will, if it exists, be replaced."}, "xclose": {"uri": "commandcmd-xclose", "anchor": "", "usage": "xclose", "description": "Close an open connection to an external application.", "long_description": "xclose is used to close an open COM session with an external application."}, "xget": {"uri": "commandcmd-xget", "anchor": "", "usage": "xget (options) object @smpl sample", "description": "Retrieve data from an external application into an EViews object.", "long_description": "xget is used to retrieve data from an external COM application (support is currently provided for MATLAB and R). An existing connection to the external application must have already been opened using xopen . The xget command should be followed by the name of the object to retrieve, followed by an optional @smpl keyword and a sample specification, or the name of a sample object. Including @smpl lets you specify the observations into which the data will be retrieved."}, "xlog": {"uri": "commandcmd-xlog", "anchor": "", "usage": "xlog (arg)", "description": "Switch on or off the external application log inside EViews.", "long_description": "xlog is used to switch on or off the external COM application log window inside EViews. arg should be either \u201cshow\u201d (to switch the log on), or \u201chide\u201d (to switch it off)."}, "xoff": {"uri": "commandcmd-xoff", "anchor": "", "usage": "xoff", "description": "Turns off external command mode in an EViews program.", "long_description": "Every program line after XOFF will be treated as an EViews command."}, "xon": {"uri": "commandcmd-xon", "anchor": "", "usage": "xoff", "description": "Turns on external command mode in an EViews program.", "long_description": "Turns on external command mode in an EViews program. Every program line after XON will be sent directly to the external application (R or MATLAB) without the need to start the command with XRUN. Call XOFF to turn this mode off."}, "xopen": {"uri": "commandcmd-xopen", "anchor": "", "usage": "xopen (options)", "description": "Open a connection to an external application.", "long_description": "xopen is used to start a COM session with an external application, either R or MATLAB. EViews can only have a single session open at a time; a session must be closed (see xopen ) before a new session can be opened."}, "xpackage": {"uri": "commandcmd-xpackage", "anchor": "", "usage": "xpackage (options) package_name", "description": "Installs the specified R package in the current external R connection.", "long_description": "xpackage is only supported for external R connections (no MATLAB support) and is used to verify that a specific R package has been installed. If the package is not found, it is downloaded and installed automatically. package_name should be the name of the R package (case-sensitive)."}, "xput": {"uri": "commandcmd-xput", "anchor": "", "usage": "xput (options) ob_list @ drop ob1 @ smpl sample", "description": "Send an EViews object to an external application.", "long_description": "xput is used to push data from EViews to an COM external application (either R or MATLAB). An existing connection to the external application must have already been opened, using xopen .\nob_list should be a space delimited list of EViews objects to push into the application. An asterisk (*) can be used as a wildcard. Objects that can be pushed include series, alphas, matrices, syms, vectors, svectors, rowvectors, coefs, scalars and strings. if the object list contains an object you do not wish to be pushed to the external application, you can use @drop followed by the name of the object.\nFor series and alphas, you may enter a sample to specify which observations you wish to be pushed, using @smpl followed by the sample specification or the name of a sample object."}, "xrun": {"uri": "commandcmd-xrun", "anchor": "", "usage": "xrun command", "description": "Run a command in an external application.", "long_description": "xrun is used to run a command in an external COM application (either R or MATLAB). An existing connection to the external application must have already been opened using xopen . xrun should be followed by the command you wish to run."}, "xyarea": {"uri": "graphmaster-xyarea", "anchor": "", "usage": "xyarea (options) o1 o2 [o3 ... ]\nobject_name. xyarea (options)", "description": "Display an XY area graph view (if possible).", "long_description": "An XY area graph plots the values of one series or column against another. It is similar to a XY line, but with the region between the line and the zero horizontal axis filled.\n(Note that XY area graphs are typically employed only when data along the horizontal axis are ordered.)\nThere must be at least two series or columns to create an XY area graph. By default, the first series or column will be located along the horizontal axis, with the remaining data on the vertical axis. You may optionally choose to plot the data in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth, or to construct graphs using all possible pairs (or the lower triangular set of pairs).\nwhere o1 , o2 , ..., are series or group objects."}, "xybar": {"uri": "graphmaster-xybar", "anchor": "", "usage": "xybar (options) o1 o2 [o3 ... ]\nobject_name. xybar (options)", "description": "Display an XY bar graph view (if possible).", "long_description": "An XY bar graph displays the data in sets of three series or columns as a vertical bar. For a given observation, the values in the first two series or columns define a region along the horizontal axis, while the value in the third series or column defines the vertical height of the bar.\nXY bar graphs may, for example, be used to construct variable width histograms.\nwhere o1 , o2 , ..., are series or group objects."}, "xyerrbar": {"uri": "graphmaster-xyerrbar", "anchor": "", "usage": "xyerrbar (options) o1 o2 o3 o4 [o5 ... ]\nobject_name. xyerrbar (options)", "description": "Display an XY error bar graph view (if possible).", "long_description": "The data must be in the form of a multiple of four series or columns. The first series is the x-axis points. The second series is the high error bar and the third series is the low error bar. The fourth series or column is the data of interest plotted as a symbol.\nwhere o1, o2, o3, o4,... are series or group objects."}, "xyline": {"uri": "graphmaster-xyline", "anchor": "", "usage": "xyline (options) o1 o2 [o3 ... ]\nobject_name. xyline (options) [auxiliary_spec(arg)] [categorical_spec(arg)]", "description": "Display an XY line graph view (if possible).", "long_description": "There must be at least two series or columns to create an XY line graph. By default, the first series or column will be located along the horizontal axis, with the remaining data on the vertical axis. You may optionally choose to plot the data in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth, or to construct graphs using all possible pairs (or the lower triangular set of pairs).\nXY line graphs are simply XY plots with lines turned on and symbols turned off (see Graph::setelem ).\nwhere o1 , o2 , ..., are series or group objects.\nFollowing the xyline keyword, you may specify general graph characteristics using options . Available options include plotting the data in pairs or in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d ).\nThe optional categorical_spec allows you to specify a categorical graph (see \u201cCategorical Spec\u201d )."}, "xypair": {"uri": "graphmaster-xypair", "anchor": "", "usage": "xypair (options) o1 o2 [o3 ... ]\nobject_name. xypair (options) [auxiliary_spec(arg)]", "description": "Display an XY pairs graph (if possible).", "long_description": "The data will be plotted in pairs, where the first two series or columns are plotted against each other, the second two series or columns are plotted against each other, and so forth. If the number of series or columns is odd, the last one will be ignored.\nXY line graphs are simply XY plots with lines turned on and symbols turned off (see Graph::setelem ). The xypair graph type is equivalent to using xyline with the \u201cmult=pairs\u201d option indicating that the data should be graphed in pairs.\nFollowing the xypair keyword, you may specify general graph characteristics using options . Available options include plotting the data in multiple graphs, template application, and adding axis extensions.\nThe optional auxilary_spec allows you to add fit lines to the scatterplot (regression lines, kernel fit, nearest neighbor fit, orthogonal regression, and confidence ellipses; see \u201cAuxiliary Spec\u201d )."}}, "Functions": {"[Functions]": {"uri": "mathapp_cpr", "anchor": ""}, "@abs": {"uri": "mathapp_cpr", "anchor": "ww199198", "usage": "@abs( x ), abs( x )", "description": "absolute value"}, "@acos": {"uri": "mathapp_cpr", "anchor": "ww199202", "usage": "@acos( x )", "description": "arc cosine (real results in radians)"}, "@acot": {"uri": "mathapp_cpr", "anchor": ""}, "@acsc": {"uri": "mathapp_cpr", "anchor": ""}, "@addinspath": {"uri": "progref-@addinspath", "anchor": "", "usage": "Syntax: @addinspath\nReturn:\tstring", "description": "Returns a string containing the EViews add-ins directory path."}, "@addquotes": {"uri": "stringref-@addquotes", "anchor": "", "usage": "Syntax:\t\t@ addquotes ( str )\nstr : \tstring\nReturn:\t\tstring", "description": "Enclose string in quotation marks.", "long_description": "Returns the contents of the string in str with double-quotation marks added to both the left and the right."}, "@asc": {"uri": "stringref-@asc", "anchor": "", "usage": "Syntax:\t\t@ asc ( str )\nstr : \tstring\nReturn:\t\tstring", "description": "String to ASCII value.", "long_description": "Returns the integer ASCII value for the first character in the string str ."}, "@asec": {"uri": "mathapp_cpr", "anchor": ""}, "@asin": {"uri": "mathapp_cpr", "anchor": "ww199216", "usage": "@asin(x)", "description": "arc sine (real results in radians)"}, "@atan": {"uri": "mathapp_cpr", "anchor": "ww199221", "usage": "@atan(x)", "description": "arc tangent (results in radians)"}, "@attrnames": {"uri": "progref-@attrnames", "anchor": "", "usage": "Syntax: @attrnames ( attribute_pattern_list[, name_pattern_list, attribute_search_options ])\nArgument1:\tpattern string list, attribute_pattern_list\nArgument2:\tpattern string list, name_pattern_list\nArgument3:\tint, attribute_search_options\nReturn:\tstring list", "description": "The attribute_search_options is an integer value indicating how a \u201c*\u201d in the attribute_pattern should be treated when matching. Use \u201c0\u201d to treat \u201c*\u201d as a wildcard and \u201c1\u201d to treat \u201c*\u201d as a literal. The default is \u201c0\u201d.", "long_description": "Returns a string list of all attribute names of the current workfile page that satisfy the attribute_pattern_list and, optionally, the object name_pattern_list . The attribute_pattern_list may be made up of any number of \u201c?\u201d (indicates any single character) or \u201c*\u201d (indicates any number of characters)."}, "@attrvals": {"uri": "progref-@attrvals", "anchor": "", "usage": "Syntax: @attrvals ( attribute_pattern_list[, name_pattern_list, attribute_search_options ])\nArgument1:\tpattern string list, attribute_pattern_list\nArgument2:\tpattern string list, name_pattern_list\nArgument3:\tint, attribute_search_options\nReturn:\tstring list", "description": "The attribute_search_options is an integer value indicating how a \u201c*\u201d in the attribute_pattern should be treated when matching. Use \u201c0\u201d to treat \u201c*\u201d as a wildcard and \u201c1\u201d to treat \u201c*\u201d as a literal. The default is \u201c0\u201d.", "long_description": "Returns a string list of all attribute values of the current workfile page that satisfy the attribute_pattern_list and, optionally, the object name_pattern_list . The attribute_pattern_list may be made up of any number of \u201c?\u201d (indicates any single character) or \u201c*\u201d (indicates any number of characters)."}, "@beta": {"uri": "mathapp_cpr", "anchor": "ww199230", "usage": "@beta(a,b)", "description": "beta integral"}, "@betainc": {"uri": "mathapp_cpr", "anchor": "ww199234", "usage": "@betainc(x,a,b[,n])", "description": "incomplete beta integral"}, "@betaincder": {"uri": "mathapp_cpr", "anchor": "ww199238", "usage": "@betaincder(x,a,b,s)", "description": "derivative of the incomplete beta integral"}, "@betaincinv": {"uri": "mathapp_cpr", "anchor": "ww199242", "usage": "@betaincinv(p,a,b)", "description": "inverse of the incomplete beta integral"}, "@betalog": {"uri": "mathapp_cpr", "anchor": "ww199246", "usage": "@betalog(a,b)", "description": "natural logarithm of the beta integral"}, "@between": {"uri": "mathapp_cpr", "anchor": "ww199250", "usage": "@between(x, val1, val2)", "description": "Creates a dummy variable equal to 1 for observations where the series is greater than or equal to val1 and less than or equal to val2 ."}, "@binom": {"uri": "mathapp_cpr", "anchor": "ww199254", "usage": "@binom(n,x)", "description": "binomial coefficient"}, "@binomlog": {"uri": "mathapp_cpr", "anchor": "ww199258", "usage": "@binomlog(n,x)", "description": "natural logarithm of the binomial coefficient"}, "@capplyranks": {"uri": "matrixref-@capplyranks", "anchor": "", "usage": "Syntax: @capplyranks ( m , v [, n] )\nm :\tmatrix, vector\nv :\tvector\nn: (optional) integer\nReturn:\t\tmatrix, vector", "description": "Reorder the rows of a matrix using a vector of ranks.", "long_description": "Apply (a column of) row ranks in the vector v to reorder the rows of a matrix m using the ranks.\n\u2022 v should contain unique integers from 1 to the number of rows of m.\n\u2022 If the optional argument n is specified, only the rows in column n will be reordered."}, "@cbeta": {"uri": "mathapp_cpr", "anchor": "ww199263", "usage": "@cbeta(x,a,b[,n])", "description": "beta cumulative distribution (CDF)"}, "@cbinom": {"uri": "mathapp_cpr", "anchor": "ww199268", "usage": "@cbinom(x,n,p)", "description": "binomial cumulative distribution (CDF)"}, "@cchisq": {"uri": "mathapp_cpr", "anchor": "ww199273", "usage": "@cchisq(x,v[,n])", "description": "chi-square cumulative distribution (CDF)"}, "@ceiling": {"uri": "mathapp_cpr", "anchor": "ww199278", "usage": "@ceiling(x[,n])", "description": "smallest integer not less than"}, "@cexp": {"uri": "mathapp_cpr", "anchor": "ww199288", "usage": "@cexp(x,m[,n])", "description": "exponential cumulative distribution (CDF)"}, "@cextreme": {"uri": "mathapp_cpr", "anchor": "ww199293", "usage": "@cextreme(x[,n])", "description": "extreme value cumulative distribution (CDF)"}, "@cfdist": {"uri": "mathapp_cpr", "anchor": "ww199298", "usage": "@cfdist(x,v1,v2[,n])", "description": "F -distribution cumulative distribution (CDF)"}, "@cfirst": {"uri": "matrixref-@cfirst", "anchor": "", "usage": "Syntax: @cfirst ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "First non-missing value in each column of a matrix.", "long_description": "Returns a vector containing the first non-missing values of each column of the matrix m ."}, "@cgamma": {"uri": "mathapp_cpr", "anchor": "ww199306", "usage": "@cgamma(x,b,r[,n])", "description": "gamma cumulative distribution (CDF)"}, "@cged": {"uri": "mathapp_cpr", "anchor": "ww199311", "usage": "@cged(x,r[,n])", "description": "generalized error cumulative distribution (CDF)"}, "@chisq": {"uri": "mathapp_cpr", "anchor": "ww199316", "usage": "@chisq(x,v[,n])", "description": "chi-square p-value"}, "@cholesky": {"uri": "matrixref-@cholesky", "anchor": "", "usage": "Syntax: @cholesky ( s )\ns :\tsym\nReturn:\t\tmatrix", "description": "Cholesky factor of matrix.", "long_description": "Returns a matrix containing the Cholesky factorization of [img:../content/images/matrixref.098.004.1.jpg] .\nThe Cholesky factorization finds the lower triangular matrix [img:../content/images/matrixref.098.004.2.jpg] such that [img:../content/images/matrixref.098.004.3.jpg] is equal to the symmetric source matrix."}, "@chr": {"uri": "stringref-@chr", "anchor": "", "usage": "Syntax: @chr ( arg )\narg : \tinteger\nReturn:\t\tstring", "description": "ASCII value to string.", "long_description": "Returns the character string corresponding to the ASCII value arg .\nValid inputs are integer values running from 0 to 255. Any invalid value will return an empty string."}, "@cifirst": {"uri": "matrixref-@cifirst", "anchor": "", "usage": "Syntax: @cifirst ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Index of the first non-missing value in each column of a matrix.", "long_description": "Returns a vector containing the index ( i.e , row number) of the first non-missing value of each column of the matrix m ."}, "@cilast": {"uri": "matrixref-@cilast", "anchor": "", "usage": "Syntax: @cilast ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Index of the last non-missing value in each column of a matrix.", "long_description": "Returns a vector containing the index ( i.e , row number) of the last non-missing value of each column of the matrix m ."}, "@cimax": {"uri": "matrixref-@cimax", "anchor": "", "usage": "Syntax: @cimax ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Index of the maximal value in each column of a matrix.", "long_description": "Returns a vector containing the index ( i.e , row number) of the maximal values of each column of the matrix m ."}, "@cimin": {"uri": "matrixref-@cimin", "anchor": "", "usage": "Syntax: @cimin ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Index of the minimal value in each column of a matrix.", "long_description": "Returns a vector containing the index ( i.e , row number) of the minimal values of each column of m ."}, "@cintercept": {"uri": "matrixref-@cintercept", "anchor": "", "usage": "Syntax: @cintercept ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Intercept from a trend regression performed on each column of a matrix.", "long_description": "Returns a vector of intercepts from trend regressions, each the result of applying @intercept to each column of m ."}, "@claplace": {"uri": "mathapp_cpr", "anchor": "ww199321", "usage": "@claplace(x[,n])", "description": "Laplace cumulative distribution (CDF)"}, "@clast": {"uri": "matrixref-@clast", "anchor": "", "usage": "Syntax: @clast ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Last non-missing value in each column of the matrix.", "long_description": "Returns a vector containing the last non-missing value of each column of m ."}, "@clogistic": {"uri": "mathapp_cpr", "anchor": "ww199326", "usage": "@clogistic(x[,n])", "description": "logistic cumulative distribution (CDF)"}, "@cloglog": {"uri": "mathapp_cpr", "anchor": "ww199330", "usage": "@cloglog(x)", "description": "complementary log-log function"}, "@clognorm": {"uri": "mathapp_cpr", "anchor": "ww199335", "usage": "@clognorm(x,m,s[,n])", "description": "log normal cumulative distribution (CDF)"}, "@cmax": {"uri": "matrixref-@cmax", "anchor": "", "usage": "Syntax: @cmax ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Maximal value in each column of a matrix.", "long_description": "Returns a vector containing the maximal values of each column of m ."}, "@cmean": {"uri": "matrixref-@cmean", "anchor": "", "usage": "Syntax: @cmean ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Mean in each column of a matrix.", "long_description": "Returns a vector containing the mean values of each column of the matrix m ."}, "@cmedian": {"uri": "matrixref-@cmedian", "anchor": "", "usage": "Syntax: @cmedian ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Median of each column of a matrix.", "long_description": "Returns a vector containing the median values of each column of m ."}, "@cmin": {"uri": "matrixref-@cmin", "anchor": "", "usage": "Syntax: @cmin ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Minimal value for each column of the matrix.", "long_description": "Returns a vector containing the minimal values of each column of the matrix m ."}, "@cnas": {"uri": "matrixref-@cnas", "anchor": "", "usage": "Syntax: @cnas ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Number of NA values in each column of a matrix.", "long_description": "Returns a vector containing the number of missing values in each column of the matrix m ."}, "@cnegbin": {"uri": "mathapp_cpr", "anchor": "ww199340", "usage": "@cnegbin(x,n,p)", "description": "negative binomial cumulative distribution (CDF)"}, "@cnorm": {"uri": "mathapp_cpr", "anchor": "ww199345", "usage": "@cnorm(x[,n])", "description": "normal cumulative distribution (CDF)"}, "@cobs": {"uri": "matrixref-@cobs", "anchor": "", "usage": "Syntax: @cobs ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Number of non-NA values in each column of a matrix.", "long_description": "Returns a vector containing the number of non-missing values in each column of the matrix m ."}, "@colcumprod": {"uri": "matrixref-@colcumprod", "anchor": "", "usage": "Syntax: @colcumprod ( m )\nm :\tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Compute cumulative products for each column of a matrix.", "long_description": "Returns a matrix where each column contains the cumulative products of the values of the corresponding column of m.\nFor each element of the output, compute the cumulative product of the values in m from the start of the column up to the current row:\n[img:../content/images/matrixref.098.017.1.jpg]\nNote that this function is prone to numeric overflow."}, "@colcumsum": {"uri": "matrixref-@colcumsum", "anchor": "", "usage": "Syntax: @colcumsum ( m )\nm :\tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Compute cumulative sums for each column of a matrix.", "long_description": "Returns a matrix where each column contains the cumulative sums of the values of the corresponding column of m.\nFor each element of the output, compute the cumulative sum of the values in m from the start of the column up to the current row:\n[img:../content/images/matrixref.098.018.1.jpg]"}, "@coldemean": {"uri": "matrixref-@coldemean", "anchor": "", "usage": "Syntax: @coldemean ( m )\nm :\tmatrix\nReturn:\t\tmatrix", "description": "Demean each column of a matrix.", "long_description": "Returns the matrix containing the results from subtracting the column mean from each column of m .\nFor each element of the output matrix [img:../content/images/matrixref.098.019.1.jpg] :\n[img:../content/images/matrixref.098.019.2.jpg]\nfor [img:../content/images/matrixref.098.019.3.jpg] the mean of column [img:../content/images/matrixref.098.019.4.jpg] where\n(18.1)\nwhere [img:../content/images/matrixref.098.019.6.jpg] is the number of non-missing values in the column. If there are missing values in a column, they are ignored and the number of rows is adjusted."}, "@coldetrend": {"uri": "matrixref-@coldetrend", "anchor": "", "usage": "Syntax: @coldetrend ( m )\nm :\tmatrix\nReturn:\t\tmatrix", "description": "Detrend each column of a matrix.", "long_description": "Returns the matrix containing the results from detrending each column of m .\nDetrending produces the residuals of the OLS regression of the data in column [img:../content/images/matrixref.098.020.1.jpg] versus an intercept and implicit time trend. For each element of the output matrix [img:../content/images/matrixref.098.020.2.jpg] :\n[img:../content/images/matrixref.098.020.3.jpg]\nwhere [img:../content/images/matrixref.098.020.4.jpg] and [img:../content/images/matrixref.098.020.5.jpg] are the intercept and slope coefficients of a regression of the data in column [img:../content/images/matrixref.098.020.6.jpg] on a constant and time trend. If there are missing values in a column, they are ignored."}, "@colpctiles": {"uri": "matrixref-@colpctiles", "anchor": "", "usage": "Syntax: @colpctiles ( m[, o] )\nm :\tmatrix, vector\nt :\t(optional) string\nReturn:\t\tmatrix, vector", "description": "Compute percentile values for each column of a matrix.", "long_description": "Returns a matrix where each column contains the percentiles of the values of the corresponding column of m\nThe option o controls the direction of the ranking: \u201ca\u201d (ascending - default) or \u201cd\u201d (descending)."}, "@colranks": {"uri": "matrixref-@colranks", "anchor": "", "usage": "Syntax: @colranks ( m [, o] )\nm :\tmatrix, vector\no :\t(optional) o\nReturn:\t\tmatrix, vector", "description": "Matrix where each column contains ranks of the row values.", "long_description": "Returns a matrix where each column contains the ranks of the values of the corresponding column of m .\nThe option o controls the direction of the ranking: \u201ca\u201d (ascending - default) or \u201cd\u201d (descending)."}, "@colsort": {"uri": "matrixref-@colsort", "anchor": "", "usage": "Syntax: @colsort ( m[, o] )\nm :\tmatrix, vector\no :\t(optional) string\nReturn:\t\tmatrix, vector", "description": "Matrix where each row contains sorted row values.", "long_description": "Returns a matrix where each column contains the sorted values of the corresponding column of m .\nThe option o controls the direction of the ranking: \u201ca\u201d (ascending - default) or \u201cd\u201d (descending)."}, "@colstdize": {"uri": "matrixref-@colstdize", "anchor": "", "usage": "Syntax: @colstdize ( m )\nm :\tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Standardize each column using the sample standard deviation.", "long_description": "Returns the matrix containing the results from standardizing each column of m .\nFor each element of the output:\n[img:../content/images/matrixref.098.025.1.jpg]\nfor [img:../content/images/matrixref.098.025.2.jpg] the mean and [img:../content/images/matrixref.098.025.3.jpg] the sample (d.f. corrected) standard deviation of column [img:../content/images/matrixref.098.025.4.jpg] where\n(18.2)\nwhere [img:../content/images/matrixref.098.025.6.jpg] is the number of non-missing values in the column. If there are missing values in a column, they are ignored and the number of rows is adjusted."}, "@colstdizep": {"uri": "matrixref-@colstdizep", "anchor": "", "usage": "Syntax: @colstdizep ( m )\nm :\tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Standardize each column using the population standard deviation.", "long_description": "Returns the matrix containing the results from standardizing each column of m .\nFor each element of the output:\n[img:../content/images/matrixref.098.026.1.jpg]\nfor [img:../content/images/matrixref.098.026.2.jpg] the mean and [img:../content/images/matrixref.098.026.3.jpg] the population (non d.f. corrected) standard deviation of column [img:../content/images/matrixref.098.026.4.jpg] where\n(18.3)\nwhere [img:../content/images/matrixref.098.026.6.jpg] is the number of non-missing values in the column. If there are missing values in a column, they are ignored and the number of rows is adjusted."}, "@columnextract": {"uri": "matrixref-@columnextract", "anchor": "", "usage": "Syntax: @columnextract ( m , n )\nm: matrix, sym\nn :\tinteger\nReturn:\t\tvector", "description": "Extract a column from the matrix object.", "long_description": "Extract a vector from column n of the matrix object m , where m is a matrix object.\nNote that we recommend that extraction be performed using the newer \u201c.col\u201d object data member functions. See \u201cMatrix Data Members\u201d \u201cSym Data Members\u201d and the examples below."}, "@columns": {"uri": "matrixref-@columns", "anchor": "", "description": "Number of columns in matrix object, series, or group.", "long_description": "When assigning to a matrix object:\nSyntax: @columns ( m )\nm :\tmatrix, vector, sym, series, group\nReturn:\t\tinteger\nWhen assigning to a series:\nSyntax: @columns ( m )\nm :\tgroup\nReturn:\t\tinteger"}, "@commute": {"uri": "matrixref-@commute", "anchor": "", "usage": "Syntax: @commute ( m, n )\nm :\tinteger\nn: integer\nReturn:\t\tmatrix", "description": "Commutation matrix.", "long_description": "The commutation matrix transforms the vectorization of a matrix to the vectorization of its transpose.\nGiven the [img:../content/images/matrixref.098.029.1.jpg] matrix [img:../content/images/matrixref.098.029.2.jpg] , returns the [img:../content/images/matrixref.098.029.3.jpg] matrix [img:../content/images/matrixref.098.029.4.jpg] , which satisfies\n[img:../content/images/matrixref.098.029.5.jpg]"}, "@cond": {"uri": "matrixref-@cond", "anchor": "", "usage": "Syntax: @cond ( m[ , n] )\nm: matrix, sym\nn :\t(optional) integer\nReturn:\t\tnumber", "description": "Condition number of matrix.", "long_description": "Returns the condition number of a square matrix or sym, m.\nThe condition number is the product of the norm of the matrix divided by the norm of the inverse.\nIf the norm option n is omitted, the infinity norm is used to determine the condition number. Possible norms are \u201c-1\u201d for the infinity norm, \u201c0\u201d for the Frobenius norm, and an integer \u201cn\u201d for the [img:../content/images/matrixref.098.030.1.jpg] norm."}, "@convert": {"uri": "matrixref-@convert", "anchor": "", "usage": "Syntax: @convert ( o[ , s] )\no :\tseries, alpha, group, o\ns :\t(optional) sample string or object\nReturn:\t\tvector, svector, matrix", "description": "Converts series or group to a vector or matrix after removing NAs", "long_description": "Convert data in the series (numeric or alpha) or group object into a vector (numeric or alpha) or group after removing rows with an NA or \u201c\u201d.\n\u2022 If o is a series, @convert returns a vector from the values of o using the optional sample s or the current workfile sample. If any observation has the value \u201cNA\u201d, the observation will be omitted from the vector.\n\u2022 If o is an alpha series, @convert returns an svector from the values of o using the optional sample s or the current workfile sample.\n\u2022 If o is a group, @convert returns a matrix from the values of o using the optional sample object smp or the current workfile sample.\nThe data for series in o are placed in the columns of the resulting matrix in the order they appear in the group spreadsheet. If any of the series for a given observation has the value \u201cNA\u201d, the observation will be omitted for all series.\nNote that if the group contains alpha series, they are treated as numeric series with all NA values for purposes of this conversion.\nFor a conversion method that preserves NAs, see stomna ."}, "@cor": {"uri": "matrixref-@cor", "anchor": "", "usage": "Syntax: @cor ( x)\nx :\tmatrix\nReturn:\t\tsym", "description": "Pearson product moment correlation .", "long_description": "Compute the correlation between columns of a matrix.\n[img:../content/images/matrixref.098.032.1.jpg]\nwhere\n[img:../content/images/matrixref.098.032.2.jpg]\n[img:../content/images/matrixref.098.032.3.jpg] is the column vector corresponding to the i -th row of the matrix, [img:../content/images/matrixref.098.032.4.jpg] are the corresponding means, and [img:../content/images/matrixref.098.032.5.jpg] is the number of rows of the matrix."}, "@cos": {"uri": "mathapp_cpr", "anchor": "ww199359", "usage": "@cos(x)", "description": "cosine (argument in radians)"}, "@cov": {"uri": "matrixref-@cov", "anchor": "", "usage": "Syntax: @cov ( x)\nx :\tmatrix\nReturn:\t\tsym", "description": "Pearson product moment covariance (no d.f. adjustment).", "long_description": "Compute the covariance between columns of a matrix, with no d.f. correction.\n[img:../content/images/matrixref.098.033.1.jpg]\nwhere [img:../content/images/matrixref.098.033.2.jpg] is the column vector corresponding to the i -th row of the matrix, [img:../content/images/matrixref.098.033.3.jpg] are the corresponding means, and [img:../content/images/matrixref.098.033.4.jpg] is the number of rows of the matrix."}, "@covp": {"uri": "matrixref-@covp", "anchor": "", "usage": "Syntax: @covp ( x)\nx :\tmatrix\nReturn:\t\tsym", "description": "Pearson (population) product moment covariance (population \u2013 no d.f. adjustment).", "long_description": "(Same as @cov .)\nCompute the covariance between columns of a matrix, with no d.f. correction.\n[img:../content/images/matrixref.098.034.1.jpg]\nwhere [img:../content/images/matrixref.098.034.2.jpg] is the column vector corresponding to the i -th row of the matrix, [img:../content/images/matrixref.098.034.3.jpg] are the corresponding means, and [img:../content/images/matrixref.098.034.4.jpg] is the number of rows of the matrix."}, "@covs": {"uri": "matrixref-@covs", "anchor": "", "usage": "Syntax: @covs ( x)\nx :\tmatrix\nReturn:\t\tsym", "description": "Pearson (sample) product moment covariance (d.f. adjusted).", "long_description": "Compute the covariance between columns of a matrix, with d.f. correction.\nFor the multiple variables in group and matrix settings,\n[img:../content/images/matrixref.098.035.1.jpg]\nwhere [img:../content/images/matrixref.098.035.2.jpg] is the column vector corresponding to the i -th row of the matrix, [img:../content/images/matrixref.098.035.3.jpg] are the corresponding means, and [img:../content/images/matrixref.098.035.4.jpg] is the number of rows of the matrix."}, "@cpareto": {"uri": "mathapp_cpr", "anchor": "ww199380", "usage": "@cpareto(x,a,k[,n])", "description": "Pareto cumulative distribution (CDF)"}, "@cpoisson": {"uri": "mathapp_cpr", "anchor": "ww199385", "usage": "@cpoisson(x,m)", "description": "Poisson cumulative distribution (CDF)"}, "@cprod": {"uri": "matrixref-@cprod", "anchor": "", "usage": "Syntax: @cprod ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Product of elements in each column of a matrix", "long_description": "Returns a vector containing the column products. One should be aware of overflow."}, "@cquantile": {"uri": "matrixref-@cquantile", "anchor": "", "usage": "Syntax: @cquantile ( m, q )\nm :\tmatrix\nq: number\nReturn:\t\tvector", "description": "Quantile of each column of a matrix.", "long_description": "Returns the column q- quantile using the Cleveland definition. q must be between zero and one."}, "@cstdev": {"uri": "matrixref-@cstdev", "anchor": "", "usage": "Syntax: @cstdev ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Standard deviation (sample) of each column of a matrix", "long_description": "Returns the column sample standard deviation."}, "@cstdevp": {"uri": "matrixref-@cstdevp", "anchor": "", "usage": "Syntax: @cstdevp ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Standard deviation (population) of each column of a matrix.", "long_description": "Returns the column population standard deviation."}, "@cstdevs": {"uri": "matrixref-@cstdevs", "anchor": "", "usage": "Syntax: @cstdevs ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Standard deviation (sample) of each column of a matrix", "long_description": "Returns the column sample standard deviation."}, "@csum": {"uri": "matrixref-@csum", "anchor": "", "usage": "Syntax: @csum ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Sum of the values in each column of a matrix.", "long_description": "Returns a vector containing the summation of the rows in each column of the matrix m ."}, "@csumsq": {"uri": "matrixref-@csumsq", "anchor": "", "usage": "Syntax: @csumsq ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Sum of the squared values in each column of a matrix.", "long_description": "Returns the sum of squared values for each column of m."}, "@ctdist": {"uri": "mathapp_cpr", "anchor": "ww199394", "usage": "@ctdist(x,v)", "description": "Student\u2019s t -distribution cumulative distribution (CDF)"}, "@ctrendcoef": {"uri": "matrixref-@ctrendcoef", "anchor": "", "usage": "Syntax: @ctrendcoef ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Slope from a trend regression on each column of a matrix.", "long_description": "Returns a vector of slopes from a trend regression, each the result of applying @trendcoef to the columns of m ."}, "@ctrmean": {"uri": "matrixref-@ctrmean", "anchor": "", "usage": "Syntax: @ctrmean ( m, p )\nm :\tmatrix\np: number\nReturn:\t\tvector", "description": "Trimmed mean of each column of a matrix.", "long_description": "Returns a vector of trimmed means, each the result of applying @trmean to columns of m ."}, "@cunif": {"uri": "mathapp_cpr", "anchor": "ww199542", "usage": "@cunif(x,a,b)", "description": "uniform cumulative distribution (CDF)"}, "@cvar": {"uri": "matrixref-@cvar", "anchor": "", "usage": "Syntax: @cvar ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Variance(population) of each column of a matrix.", "long_description": "Returns the column population variance. Example:\nvector v = @cvar(m1)"}, "@cvarp": {"uri": "matrixref-@cvarp", "anchor": "", "usage": "Syntax: @cvarp ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Variance(population) of each column of a matrix.", "long_description": "Returns the column population variance."}, "@cvars": {"uri": "matrixref-@cvars", "anchor": "", "usage": "Syntax: @cvars ( m )\nm :\tmatrix\nReturn:\t\tvector", "description": "Variance(sample) of each column of a matrix.", "long_description": "Returns the column sample variance."}, "@cweib": {"uri": "mathapp_cpr", "anchor": "ww199547", "usage": "@cweib(x,m,a[,n])", "description": "Weibull cumulative distribution (CDF)"}, "@datapath": {"uri": "progref-@datapath", "anchor": "", "usage": "Syntax: @datapath\nReturn:\tstring", "description": "Returns a string containing the location of the current EViews data directory."}, "@date": {"uri": "progref-@date", "anchor": "", "usage": "Syntax: @date\nReturn:\tstring", "description": "Returns a string containing the current date in \u201cmm/dd/yy\u201d format."}, "@dateadd": {"uri": "stringref-@dateadd", "anchor": "", "usage": "Syntax: @dateadd ( d, offset , u[, f] )\nd : \tdate number\noffset : \tinteger\nu : time unit string\nf : \t(optional) number\nReturn:\t\tdate number", "description": "Date number after applying offset.", "long_description": "Returns the date number given by d offset by offset time units as specified by the time unit string u. The optional parameter f controls handling of business days.\n\u2022 The valid time unit string values are: \u201cA\u201d or \u201cY\u201d (annual), \u201cS\u201d (semi-annual), \u201cQ\u201d (quarters), \u201cMM\u201d (months), \u201cWW\u201d (weeks), \u201cDD\u201d (days), \u201cB\u201d (business days), \u201cHH\u201d (hours), \u201cMI\u201d (minutes), \u201cSS\u201d (seconds).\n\u2022 When the time unit u is business days (\u201cB\u201d), the optional control flag parameter f controls how a non-business day date number d is handled. When f is absent or equal to zero, the date number d is automatically advanced to the next business day before offset is applied. Otherwise, when f is non-zero automatic advancement is suppressed. Consequently, when f is non-zero and offset is 0 the function returns the original date number d (a non-business day)."}, "@dateceil": {"uri": "stringref-@dateceil", "anchor": "", "usage": "Syntax: @dateceil ( d , u[ , step] )\nd : \tdate number\nu : \ttime unit string\nstep : \t(optional) integer\nReturn: \t\tdate number", "description": "Last possible date in a time period.", "long_description": "Finds the last possible date number associated with d in the regular frequency defined by the given time unit u and optional step integer step . The regular frequency is defined relative to the basedate of midnight, January 2001.\n\u2022 The valid time unit string values are: \u201cA\u201d or \u201cY\u201d (annual), \u201cS\u201d (semi-annual), \u201cQ\u201d (quarters), \u201cMM\u201d (months), \u201cWW\u201d (weeks), \u201cDD\u201d (days), \u201cB\u201d (business days), \u201cHH\u201d (hours), \u201cMI\u201d (minutes), \u201cSS\u201d (seconds).\n\u2022 If step is omitted, the frequency will use a step of 1, so that by default, @dateceil will find the end of the period defined by the time unit."}, "@datediff": {"uri": "stringref-@datediff", "anchor": "", "usage": "Syntax: @datediff ( d1 , d2 , u[, f] )\nd1 : \tdate number\nd2 : \tdate number\nu : time unit string\nf : \t(optional) number\nReturn:\t\tdate number", "description": "Difference between two date numbers.", "long_description": "Returns the difference between two date numbers d1 and d2 , measured by time units specified by the time unit string u. The optional parameter f controls handling of business days.\n\u2022 The valid time unit string values are: \u201cA\u201d or \u201cY\u201d (annual), \u201cS\u201d (semi-annual), \u201cQ\u201d (quarters), \u201cMM\u201d (months), \u201cWW\u201d (weeks), \u201cDD\u201d (days), \u201cB\u201d (business days), \u201cHH\u201d (hours), \u201cMI\u201d (minutes), \u201cSS\u201d (seconds).\n\u2022 When the time unit u is business days (\u201cB\u201d), the optional control flag parameter f controls how a non-business day date number d is handled. When f is absent or equal to zero, the date number d is automatically advanced to the next business day before offset is applied. Otherwise, when f is non-zero automatic advancement is suppressed. Consequently, when f is non-zero and offset is 0 the function returns the original date number d (a non-business day)."}, "@datefloor": {"uri": "stringref-@datefloor", "anchor": "", "usage": "Syntax: @datefloor ( d , u[ , step] )\nd : \tdate number\nu : \ttime unit string\nstep : \t(optional) integer\nReturn: \t\tdate number", "description": "First possible date in a time period.", "long_description": "Finds the first possible date number associated with d in the regular frequency defined by the given time unit u and optional step integer step . The regular frequency is defined relative to the basedate of midnight, January 2001.\n\u2022 The valid time unit string values are: \u201cA\u201d or \u201cY\u201d (annual), \u201cS\u201d (semi-annual), \u201cQ\u201d (quarters), \u201cMM\u201d (months), \u201cWW\u201d (weeks), \u201cDD\u201d (days), \u201cB\u201d (business days), \u201cHH\u201d (hours), \u201cMI\u201d (minutes), \u201cSS\u201d (seconds).\n\u2022 If step is omitted, the frequency will use a step of 1, so that by default, @dateceil will find the end of the period defined by the time unit."}, "@datenext": {"uri": "stringref-@datenext", "anchor": "", "usage": "Syntax: @datenext ( d , u[ , step] )\nd : \tdate number\nu : time unit string\nstep : \t(optional) integer\nReturn:\t\tdate number", "description": "First possible date in next time period.", "long_description": "Finds the first possible date number in the next regular frequency period following d , defined by the given time unit u and optional step integer step . The regular frequency is defined relative to the basedate of midnight, January 2001.\n\u2022 The valid time unit string values are: \u201cA\u201d or \u201cY\u201d (annual), \u201cS\u201d (semi-annual), \u201cQ\u201d (quarters), \u201cMM\u201d (months), \u201cWW\u201d (weeks), \u201cDD\u201d (days), \u201cB\u201d (business days), \u201cHH\u201d (hours), \u201cMI\u201d (minutes), \u201cSS\u201d (seconds).\n\u2022 If step is omitted, the frequency will use a step of 1, so that by default, @datenext will find the end of the period defined by the time unit."}, "@datepart": {"uri": "stringref-@datepart", "anchor": "", "usage": "Syntax: @datepart ( d , fmt )\nd :\tdate number\nfmt :\tdate format string\nReturn:\t\tnumber", "description": "Extract part of a date number.", "long_description": "Returns a number representing part of a date, using a date number corresponding to the date and a fmt , where fmt is a component of a date format string."}, "@datestr": {"uri": "stringref-@datestr", "anchor": "", "usage": "Syntax: @datestr ( d[ , fmt] )\nd :\tdate number\nfmt :\t(optional) date format string\nReturn:\t\tstring", "description": "String representation of a date number.", "long_description": "Convert the numeric date value, d, into a string representation of a date using the optional format string fmt. Date format syntax is outlined in \u201cDate Formats\u201d .\nIf a fmt is not provided, EViews will use the global default settings for the Month/Day order in dates to determine the ordering of days and months in the string.\nNext, EViews examines the date values to be translated and looks for relevant time-of-day information. If there is relevant time-of-day information, EViews will extend the date format accordingly by adding relevant hours, minutes, and seconds information, in that order. Thus, if days are favored in the global default ordering, and relevant hours (but not minutes and seconds) information is present, EViews will use\n\"dd/mm/yyyy hh\"\nwhile if hours-minutes are present, the default format will be\n\"dd/mm/yyyy hh:mi\"\nand so forth."}, "@dateval": {"uri": "stringref-@dateval", "anchor": "", "usage": "Syntax: @dateval ( str[ , fmt] )\nstr :\tstring\nfmt :\t(optional) date format string\nReturn:\t\tdate number", "description": "Convert the string representation of a date into a date number.", "long_description": "Returns the date number associated with the string representation of a date, str. Interpretation of the string may be controlled of using the optional format string fmt ."}, "@dbeta": {"uri": "mathapp_cpr", "anchor": "ww199600", "usage": "@dbeta(x,a,b)", "description": "beta density function"}, "@dbinom": {"uri": "mathapp_cpr", "anchor": "ww199605", "usage": "@dbinom(x,n,p)", "description": "binomial density function"}, "@dbname": {"uri": "mathapp_cpr", "anchor": "ww200982", "usage": "@wfname", "description": "returns a string containing the current default workfile name."}, "@dchisq": {"uri": "mathapp_cpr", "anchor": "ww199610", "usage": "@dchisq(x,v)", "description": "chi-square density function"}, "@det": {"uri": "matrixref-@det", "anchor": "", "usage": "Syntax: @de t ( m )\nm :\tmatrix, sym\nReturn:\t\tnumber", "description": "Determinant of matrix.", "long_description": "Calculate the determinant of the square matrix or sym, m .\nThe determinant is nonzero for a nonsingular matrix and 0 for a singular matrix."}, "@dexp": {"uri": "mathapp_cpr", "anchor": "ww199615", "usage": "@dexp(x,m)", "description": "exponential density function"}, "@dextreme": {"uri": "mathapp_cpr", "anchor": "ww199620", "usage": "@dextreme(x)", "description": "extreme value density function"}, "@dfdist": {"uri": "mathapp_cpr", "anchor": "ww199625", "usage": "@dfdist(x,v1,v2)", "description": "F -distribution density function"}, "@dgamma": {"uri": "mathapp_cpr", "anchor": "ww199633", "usage": "@dgamma(x,b,r)", "description": "gamma density function"}, "@dged": {"uri": "mathapp_cpr", "anchor": "ww199638", "usage": "@dged(x,r)", "description": "generalized error density function"}, "@digamma": {"uri": "mathapp_cpr", "anchor": "ww199642", "usage": "@digamma(x), @psi(x)", "description": "first derivative of the log gamma function"}, "@diwish": {"uri": "mathapp_cpr", "anchor": "ww205276", "usage": "@diwish([v,]s)", "description": "Inverse Wishart density with sym covariance"}, "@diwishc": {"uri": "mathapp_cpr", "anchor": "ww205270", "usage": "@diwishc([v,]s)", "description": "Inverse Wishart density with sym Choesky of covariance"}, "@diwishi": {"uri": "mathapp_cpr", "anchor": "ww205265", "usage": "@diwishi([v,]s)", "description": "Inverse Wishart density with sym inverse covariance"}, "@diwishic": {"uri": "mathapp_cpr", "anchor": "ww205260", "usage": "@diwishic([v,]s)", "description": "Inverse Wishart density with sym Cholesky of inverse covariance"}, "@dlaplace": {"uri": "mathapp_cpr", "anchor": "ww199647", "usage": "@dlaplace(xb)", "description": "Laplace density function"}, "@dlogged": {"uri": "mathapp_cpr", "anchor": ""}, "@dlogistic": {"uri": "mathapp_cpr", "anchor": "ww199668", "usage": "@dlogistic(x)", "description": "logistic density function"}, "@dlognorm": {"uri": "mathapp_cpr", "anchor": "ww199673", "usage": "@dlognorm(x,m,s)", "description": "log normal density function"}, "@dmvnorm": {"uri": "mathapp_cpr", "anchor": "ww205194", "usage": "@dmvnorm([v,]s)", "description": "multivariate normal density with sym covariance"}, "@dmvnormc": {"uri": "mathapp_cpr", "anchor": "ww205199", "usage": "@dmvnormc([v,]s)", "description": "multivariate normal density with sym Choesky of covariance"}, "@dmvnormi": {"uri": "mathapp_cpr", "anchor": "ww205204", "usage": "@dmvnormi([v,]s)i", "description": "multivariate normal density with sym inverse covariance"}, "@dmvnormic": {"uri": "mathapp_cpr", "anchor": "ww205209", "usage": "@dmvnormic([v,]s)", "description": "multivariate normal density with sym Cholesky of inverse covariance"}, "@dnegbin": {"uri": "mathapp_cpr", "anchor": "ww199340", "usage": "@cnegbin(x,n,p)", "description": "negative binomial cumulative distribution (CDF)"}, "@dnorm": {"uri": "mathapp_cpr", "anchor": "ww199683", "usage": "@dnorm(x)", "description": "normal density function"}, "@dot": {"uri": "mathapp_cpr", "anchor": ""}, "@dpareto": {"uri": "mathapp_cpr", "anchor": "ww199688", "usage": "@dpareto(x,a,k)", "description": "Pareto density function"}, "@dpoisson": {"uri": "mathapp_cpr", "anchor": "ww199693", "usage": "@dpoisson(x,m)", "description": "Poisson density function"}, "@dtdist": {"uri": "mathapp_cpr", "anchor": "ww199698", "usage": "@dtdist(x,v)", "description": "Student\u2019s t -distribution density function"}, "@dtoo": {"uri": "stringref-@dtoo", "anchor": "", "usage": "Syntax: @dtoo ( str )\nstr :\tstring\nReturn:\t\tinteger", "description": "Date-to-(workfile) observation.", "long_description": "Returns the observation number corresponding to the workfile date contained in the string. The observation number is relative to the start of the current workfile range, not the current sample.\nNote that EViews will use the global default settings for the Month/Day order in dates to determine the ordering of days and months in the string.\n@dtoo will generate an error if used in a panel structured workfile."}, "@dunif": {"uri": "mathapp_cpr", "anchor": "ww199710", "usage": "@dunif(x,a,b)", "description": "uniform density function"}, "@duplic": {"uri": "matrixref-@duplic", "anchor": "", "usage": "Syntax: @duplic ( n )\nn :\tinteger\nReturn:\t\tmatrix", "description": "Duplication matrix.", "long_description": "The duplication matrix transforms the half vectorization of a sym matrix to the full vectorization of the matrix.\nGiven the [img:../content/images/matrixref.098.049.1.jpg] sym matrix [img:../content/images/matrixref.098.049.2.jpg] , returns the [img:../content/images/matrixref.098.049.3.jpg] matrix [img:../content/images/matrixref.098.049.4.jpg] , which satisfies\n[img:../content/images/matrixref.098.049.5.jpg]"}, "@duplicinv": {"uri": "matrixref-@duplicinv", "anchor": "", "usage": "Syntax: @duplicinv ( n )\nn :\tinteger\nReturn:\t\tmatrix", "description": "Inverse duplication matrix.", "long_description": "The inverse of the duplication matrix transforms the vectorization of a sym matrix to the half vectorization of the matrix.\nReturns [img:../content/images/matrixref.098.050.1.jpg] , the [img:../content/images/matrixref.098.050.2.jpg] Moore-Penrose inverse of the duplication matrix where\n[img:../content/images/matrixref.098.050.3.jpg]\nfor [img:../content/images/matrixref.098.050.4.jpg] , the duplication matrix satisfying\n[img:../content/images/matrixref.098.050.5.jpg]\nfor an [img:../content/images/matrixref.098.050.6.jpg] symmetric matrix [img:../content/images/matrixref.098.050.7.jpg] , so that\n[img:../content/images/matrixref.098.050.8.jpg]"}, "@dweib": {"uri": "mathapp_cpr", "anchor": "ww199719", "usage": "@dweib(x,m,a)", "description": "Weibull density function"}, "@dwish": {"uri": "mathapp_cpr", "anchor": "ww205041", "usage": "@dwish([v,]s)", "description": "Wishart density with sym covariance"}, "@dwishc": {"uri": "mathapp_cpr", "anchor": "ww205035", "usage": "@dwishc([v,]s)", "description": "Wishart density with sym Choesky of covariance"}, "@dwishi": {"uri": "mathapp_cpr", "anchor": "ww205030", "usage": "@dwishi([v,]s)", "description": "Wishart density with sym inverse covariance"}, "@dwishic": {"uri": "mathapp_cpr", "anchor": "ww205025", "usage": "@dwishic([v,]s)", "description": "Wishart density with sym Cholesky of inverse covariance"}, "@ediv": {"uri": "matrixref-@ediv", "anchor": "", "usage": "Syntax: @ediv ( m1, m2 )\nm1 :\tmatrix, vector\nm2 :\tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Element division of two matrices.", "long_description": "Returns the element by element division of two matrix objects or syms.\nEach element of the returned matrix is equal to the corresponding element in m1 divided by the corresponding element in m2 .\nNote m1 and m2 must be of identical dimensions."}, "@eeq": {"uri": "matrixref-@eeq", "anchor": "", "usage": "Syntax: @eeq ( m1, m2 )\nm1 :\tmatrix, vector\nm2 :\tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Element equality comparison of two matrices.", "long_description": "Returns the element by element test of equality between two matrix objects or syms.\nEach element of the returned matrix is equal to 1 or 0 depending on whether the corresponding element in m1 is equal to the corresponding element in m2 .\nNote m1 and m2 must be of identical dimensions."}, "@eeqna": {"uri": "matrixref-@eeqna", "anchor": "", "usage": "Syntax: @eeqna ( m1, m2 )\nm1 :\tmatrix, vector\nm2 :\tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Element equality comparison of two matrices", "long_description": "Returns the element by element test of equality between two matrix objects or syms. NAs are treated as ordinary values for purposes of comparison.\nEach element of the returned matrix is equal to 1 or 0 depending on whether the corresponding element in m1 is equal to the corresponding element in m2 .\nNote m1 and m2 must be of identical dimensions."}, "@ege": {"uri": "matrixref-@ege", "anchor": "", "usage": "Syntax: @ege ( m1, m2 )\nm1 :\tmatrix, vector\nm2 :\tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Elements greater than or equal to tests of two matrices.", "long_description": "Returns a test for whether the elements in the matrix or sym m1 are greater than or equal to the corresponding elements in m2 .\nEach element of the returned matrix is equal to 1 or 0 depending on the outcome of the comparison.\nNote m1 and m2 must be of identical dimensions."}, "@egt": {"uri": "matrixref-@egt", "anchor": "", "usage": "Syntax: @egt ( m1,m2 )\nm1 :\tmatrix, vector\nm2 :\tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Elements greater than tests of two matrices", "long_description": "Returns a test for whether the elements in the matrix or sym m1 are greater than the corresponding elements in m2 .\nEach element of the returned matrix is equal to 1 or 0 depending on the outcome of the comparison.\nNote m1 and m2 must be of identical dimensions."}, "@eigenvalues": {"uri": "matrixref-@eigenvalues", "anchor": "", "usage": "Syntax: @eigenvalues ( s )\ns :\tsym\nReturn:\t\tvector", "description": "Eigenvalues of symmetric matrix.", "long_description": "Returns a vector containing the eigenvalues of the sym s .\nThe eigenvalues are those scalars [img:../content/images/matrixref.098.056.1.jpg] that satisfy [img:../content/images/matrixref.098.056.2.jpg] where [img:../content/images/matrixref.098.056.3.jpg] is the sym associated with the argument [img:../content/images/matrixref.098.056.4.jpg] . The eigenvalues are arranged in ascending order."}, "@eigenvectors": {"uri": "matrixref-@eigenvectors", "anchor": "", "usage": "Syntax: @eigenvectors ( s )\ns :\tsym\nReturn:\t\tmatrix", "description": "Eigenvectors of symmetric matrix.", "long_description": "Returns a square matrix whose columns are the eigenvectors of the sym s .\nEach eigenvector v satisfies [img:../content/images/matrixref.098.057.1.jpg] , where [img:../content/images/matrixref.098.057.2.jpg] is the symmetric matrix given by s , and where n is the eigenvalue associated with the eigenvector v. The eigenvalues are arranged in ascending order, and the columns of the eigenvector matrix correspond to the sorted eigenvalues."}, "@einv": {"uri": "matrixref-@einv", "anchor": "", "usage": "Syntax: @einv ( m )\nm :\tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Element inversion of a matrix.", "long_description": "Returns the element by element inverse of a matrix object or sym.\nEach element of the returned matrix is equal to 1 divided by the corresponding element of the input matrix."}, "@ele": {"uri": "matrixref-@ele", "anchor": "", "usage": "Syntax: @ege ( m1, m2 )\nm1 :\tmatrix, vector\nm2 :\tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Element less than or equal to tests of two matrices.", "long_description": "Returns a test for whether the elements in the matrix or sym m1 are greater than or equal to the corresponding elements in m2 .\nEach element of the returned matrix is equal to 1 or 0 depending on the outcome of the comparison.\nNote m1 and m2 must be of identical dimensions."}, "@elem": {"uri": "mathapp_cpr", "anchor": "ww199723", "usage": "@elem(x,\"v\")", "description": "element"}, "@elimin": {"uri": "matrixref-@elimin", "anchor": "", "usage": "Syntax: @elimin ( n )\nn :\tinteger\nReturn:\t\tmatrix", "description": "Elimination matrix.", "long_description": "The elimination matrix transforms the half vectorization of a sym matrix to the vectorization of the matrix.\nReturns the [img:../content/images/matrixref.098.060.1.jpg] matrix [img:../content/images/matrixref.098.060.2.jpg] , which satisfies\n[img:../content/images/matrixref.098.060.3.jpg]\nfor an [img:../content/images/matrixref.098.060.4.jpg] sym matrix [img:../content/images/matrixref.098.060.5.jpg] ,"}, "@elt": {"uri": "matrixref-@elt", "anchor": "", "usage": "Syntax: @elt ( m1, m2 )\nm1 :\tmatrix, vector\nm2 :\tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Element less than tests of two matrices.", "long_description": "Returns a test for whether the elements in the matrix or sym m1 are less than the corresponding elements in m2 .\nEach element of the returned matrix is equal to 1 or 0 depending on the outcome of the comparison.\nNote m1 and m2 must be of identical dimensions."}, "@emax": {"uri": "matrixref-@emax", "anchor": ""}, "@emin": {"uri": "matrixref-@emin", "anchor": ""}, "@emult": {"uri": "matrixref-@emult", "anchor": "", "usage": "Syntax: @emult ( m1, m2 )\nm1 :\tmatrix, vector\nm2 :\tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Element maximums of two matrices.", "long_description": "Returns the element by element multiplication of two matrix objects or syms.\nEach element of the returned matrix is equal to the corresponding element in m1 multiplied by the corresponding element in m2 .\nNote m1 and m2 must be of identical dimensions."}, "@eneq": {"uri": "matrixref-@eneq", "anchor": "", "usage": "Syntax: @eneq ( m1,m2 )\nm1 :\tmatrix, vector\nm2 :\tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Element inequality comparison of two matrices.", "long_description": "Returns the element by element test of inequality between two matrix objects or syms. Each element of the returned matrix is equal to 1 or 0 depending on whether the corresponding element in m1 is not equal to the corresponding element in m2 . Note m1 and m2 must be of identical dimensions."}, "@eneqna": {"uri": "matrixref-@eneqna", "anchor": "", "usage": "Syntax: @eneqna ( m1, m2 )\nm1 :\tmatrix, vector\nm2 :\tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Element inequality comparison of two matrices", "long_description": "Returns the element by element test of inequality between two matrix objects or syms. NAs are treated as ordinary values for purposes of comparison.\nEach element of the returned matrix is equal to 1 or 0 depending on whether the corresponding element in m1 is not equal to the corresponding element in m2 .\nNote m1 and m2 must be of identical dimensions."}, "@env": {"uri": "progref-@env", "anchor": "", "usage": "Syntax: @env ( str )\nArgument:\tstring, str\nReturn:\tstring", "description": "Returns a string containing the value of the Windows environment variable given by str . For a list of common Windows environment variables, see:", "long_description": "http://en.wikipedia.org/wiki/Environment_variable#Examples_from_Microsoft_Windows\nor:\nhttp://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/ntcmds_shelloverview.mspx?mfr=true"}, "@epow": {"uri": "matrixref-@epow", "anchor": "", "usage": "Syntax: @epow ( m, n )\nm :\tmatrix, vector\nn:\tmatrix, vector, number\nReturn:\t\tmatrix, vector", "description": "Elements raised to a power in a matrix", "long_description": "Returns a matrix where every element is equal to the corresponding element in m1 raised to the power given by o .\n\u2022 If n is a number, each element of m will be raised to the power given by n.\n\u2022 If n i s not a number, the each element of m will be raised to the power of the corresponding element of n ."}, "@eqna": {"uri": "stringref-@eqna", "anchor": "", "usage": "Syntax: @eqna ( str1 , str2 )\nstr1 :\tstring\nstr2 :\tstring\nReturn:\t\tinteger", "description": "Tests for equality of two strings.", "long_description": "Tests for equality of the strings in str1 and str2 , treating null strings as ordinary blank strings, and not as missing values.\nReturn value is an integer (0, 1). Strings which test as equal return a 1, and 0 otherwise.\nSimple inequality testing which propagates null string NAs may be performed using the \u201c=\u201d binary comparison operator."}, "@equaloption": {"uri": "progref-@equaloption", "anchor": "", "usage": "Syntax: @equaloption (\"option_keyword\")\nSyntax: @equaloption (string)\nReturn:\tstring", "description": "returns the text to the right of the \u201c option_keyword =\u201d option provided in the exec or run command. If the option keyword is not found, the function will return an empty string. For example, if you specify the option \u201ckernel=tri\u201d in your exec command,", "long_description": "string opt = @equaloption(\"kernel\")\nwill return the string \u201cTRI\u201d."}, "@erecode": {"uri": "matrixref-@erecode", "anchor": "", "usage": "Syntax: @erecode ( m1, m2, m3 )\nm1 :\tmatrix, vector\nm2 :\tmatrix, vector\nm3 :\tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Element recode of a matrix", "long_description": "Returns the element recode using the conformable condition matrix m3 and the matrices m1 and m2 ."}, "@erf": {"uri": "mathapp_cpr", "anchor": "ww199744", "usage": "@erf(x)", "description": "error function"}, "@erfc": {"uri": "mathapp_cpr", "anchor": "ww199748", "usage": "@erfc(x)", "description": "complementary error function"}, "@errorcount": {"uri": "progref-@errorcount", "anchor": "", "usage": "Syntax: @errorcount\nArgument:\tnone\nReturn:\tinteger", "description": "Number of errors encountered in a program. Returns a scalar containing the number of errors encountered during program execution."}, "@evpath": {"uri": "progref-@evpath", "anchor": "", "usage": "Syntax: @evpath\nReturn:\tstring", "description": "Returns a string containing the directory path for the EViews executable."}, "@exp": {"uri": "mathapp_cpr", "anchor": "ww199757", "usage": "@exp(x), exp(x)", "description": "exponential, [img:../content/images/mathapp_cpr.094.1.03.jpg]"}, "@explode": {"uri": "matrixref-@explode", "anchor": "", "usage": "Syntax: @explode ( s )\ns :\tsym\nReturn:\t\tmatrix", "description": "Create square matrix from a sym matrix.", "long_description": "Creates a square matrix from a sym s , by duplicating the lower triangle elements into the upper triangle."}, "@expm1": {"uri": "mathapp_cpr", "anchor": "ww202824", "usage": "@expm1(x)", "description": "for x near zero, [img:../content/images/mathapp_cpr.094.1.04.jpg]"}, "@fact": {"uri": "mathapp_cpr", "anchor": "ww199765", "usage": "@fact(x)", "description": "factorial, [img:../content/images/mathapp_cpr.094.1.05.jpg]"}, "@factlog": {"uri": "mathapp_cpr", "anchor": "ww199774", "usage": "@factlog(x)", "description": "natural logarithm of the factorial, [img:../content/images/mathapp_cpr.094.1.06.jpg]"}, "@fdist": {"uri": "mathapp_cpr", "anchor": "ww199781", "usage": "@fdist(x,v1,v2)", "description": "F -distribution p-value"}, "@fileexist": {"uri": "progref-@fileexist", "anchor": "", "usage": "Syntax: @fileexist ( str )\nArgument:\tstring, str\nReturn:\tinteger", "description": "Check for an file\u2019s existence. str should contain the full path and file name of the file you want to check for. Returns a \u201c1\u201d if the file exists, and a \u201c0\u201d if it does not exist."}, "@fill": {"uri": "matrixref-@fill", "anchor": "", "usage": "Syntax: @fill ( n1[ , n2 , n3 , ...])\nn# :\tnumber\nReturn:\t\tvector", "description": "Create and fill a vector from a list of values.", "long_description": "Returns a vector containing the elements specified by the arguments to the function. The vector will have length equal to the number of arguments. The maximum number of arguments is 96."}, "@filledmatrix": {"uri": "matrixref-@filledmatrix", "anchor": "", "usage": "Syntax: @filledmatrix ( n1 , n2 , n3 )\nn1 :\tinteger\nn2 :\tinteger\nn3 :\tnumber\nReturn:\t\tmatrix", "description": "Create and fill matrix with scalar value.", "long_description": "Returns a matrix with n1 rows and n2 columns, where each element contains the value n3 ."}, "@filledrowvector": {"uri": "matrixref-@filledrowvector", "anchor": "", "usage": "Syntax: @filledrowvector ( n1 , n2 )\nn1 :\tinteger\nn2 :\tinteger\nReturn:\t\trowvector", "description": "Create and fill rowvector with scalar value.", "long_description": "Returns a rowvector of length n1 , where each element contains the value n2 ."}, "@filledsym": {"uri": "matrixref-@filledsym", "anchor": "", "usage": "Syntax: @filledsym ( n1 , n2 )\nn1 :\tinteger\nn2 :\tnumber\nReturn:\t\tsym", "description": "Create and fill sym with scalar value.", "long_description": "Returns an [img:../content/images/matrixref.098.075.1.jpg] sym, where each element contains n2 ."}, "@filledvector": {"uri": "matrixref-@filledvector", "anchor": "", "usage": "Syntax: @filledvector ( n1 , n2 )\nn1 :\tinteger\nn2 :\tnumber\nReturn:\t\tvector", "description": "Create and fill vector with scalar value.", "long_description": "Returns a vector of length n1 , where each element contains the value n2 ."}, "@floor": {"uri": "mathapp_cpr", "anchor": "ww199801", "usage": "@floor(x[,n])", "description": "largest integer not greater than."}, "@folderexist": {"uri": "progref-@folderexist", "anchor": "", "usage": "Syntax: @folderexist ( str )\nArgument:\tstring, str\nReturn:\tinteger", "description": "Check for a folder\u2019s existence. str should contain the full path of the folder you want to check for. Returns a \u201c1\u201d if the file exists, and a \u201c0\u201d if it does not exist."}, "@gamma": {"uri": "mathapp_cpr", "anchor": "ww199814", "usage": "@gamma(x)", "description": "(complete) gamma function"}, "@gammader": {"uri": "mathapp_cpr", "anchor": "ww199818", "usage": "@gammader(x)", "description": "first derivative of the gamma function"}, "@gammainc": {"uri": "mathapp_cpr", "anchor": "ww199822", "usage": "@gammainc(x,a[,n])", "description": "incomplete gamma function"}, "@gammaincder": {"uri": "mathapp_cpr", "anchor": "ww199826", "usage": "@gammaincder(x,a,n)", "description": "derivative of the incomplete gamma function"}, "@gammaincinv": {"uri": "mathapp_cpr", "anchor": "ww199830", "usage": "@gammaincinv(p,a)", "description": "inverse of the incomplete gamma function"}, "@gammalog": {"uri": "mathapp_cpr", "anchor": "ww199835", "usage": "@gammalog(x)", "description": "logarithm of the gamma function"}, "@getmaindiagonal": {"uri": "matrixref-@getmaindiagonal", "anchor": "", "usage": "Syntax: @getmaindiagonal ( m )\nm :\tmatrix, vector, sym\nReturn:\t\tvector", "description": "Extract main diagonal from matrix.", "long_description": "Returns a vector created from the main diagonal of the matrix or sym object. The main diagonal is defined as the elements {(1, 1), (2, 2), ..., ( k , k )} of the matrix, where k is the smaller of the number of rows and columns."}, "@getnextname": {"uri": "progref-@getnextname", "anchor": "", "usage": "Syntax: @getnextname ( str )\nArgument:\tstring, str\nReturn:\tstring, name", "description": "Returns a string containing the next available variable name in the workfile, starting with str ( i.e. entering \u201cresult\u201d will return \u201cRESULT01\u201d unless there is already a RESULT01, in which case it will return \u201cRESULT02\u201d)."}, "@getthistype": {"uri": "progref-@getthistype", "anchor": "", "usage": "Syntax: @getthistype\nReturn:\tstring", "description": "Returns the object type of the _this object.", "long_description": "If no workfile is open, or if no object has yet been opened in a workfile, the function will return the string \"NONE\". Note this latter behavior is in contrast to using the data member syntax \u201c _this.@type \u201d, which will error on those cases."}, "@gmean": {"uri": "mathapp_cpr", "anchor": "ww199843", "usage": "@gmean(x[,s])", "description": "geometric mean"}, "@grid": {"uri": "matrixref-@grid", "anchor": "", "usage": "Syntax: @grid ( d1, d2, n )\nd1 :\tnumber\nd 2:\tnumber\nn :\tinteger\nReturn:\t\tvector", "description": "Vector containing equally spaced grid of values.", "long_description": "Returns a vector holding an arithmetic sequence of n elements. The initial element has value d1 , the last element is d2 , and there are equal increments between rows of the vector."}, "@hasoption": {"uri": "progref-@hasoption", "anchor": "", "usage": "Syntax: @hasoption (\"option\")\nSyntax: @hasoption (string)\nReturn:\t0 or 1", "description": "returns 1 or 0 depending on whether the specified option is or is not in the program options provided in the exec or run command."}, "@hcat": {"uri": "matrixref-@hcat", "anchor": "", "usage": "Syntax: @vcat ( m1 , m2[, m3, ...] )\nm# :\tmatrix, vector, svector or sym\nReturn:\t\tmatrix", "description": "Vertically concatenate matrices.", "long_description": "Performs vertical concatenation of two matrix objects. Each of the m# must have the same number of columns.\nThe result will have the same number of rows and sum of the number of columns of the m#.\nFor example, if m1 is a matrix with m rows and k columns, and m2 is a matrix with m rows and p columns, then @hcat will return a matrix with m rows and ( k + p ) columns."}, "@hmean": {"uri": "mathapp_cpr", "anchor": "ww199852", "usage": "@hmean(x[.s])", "description": "harmonic mean"}, "@identity": {"uri": "matrixref-@identity", "anchor": "", "usage": "Syntax: @identity ( n )\nn :\tinteger\nReturn:\t\tmatrix", "description": "Identity matrix.", "long_description": "Returns a square [img:../content/images/matrixref.098.080.1.jpg] identity matrix."}, "@implode": {"uri": "matrixref-@implode", "anchor": "", "usage": "Syntax: @implode ( m )\nm :\tmatrix\nReturn:\t\tsym", "description": "Create sym from lower triangle of square matrix", "long_description": "Forms a sym by copying the lower triangle of a square input matrix, m . Note that this function does not check for symmetry."}, "@inlist": {"uri": "mathapp_cpr", "anchor": "ww199890", "usage": "@inlist(x, \u201clist\u201d)", "description": "Creates a dummy variable equal to 1 for observations where the series is equal to one of the values specified in list , and 0 otherwise. list should be a quoted, space delimited list of values. This function works on both numerical and alpha series."}, "@inner": {"uri": "matrixref-@inner", "anchor": "", "usage": "Syntax: @inner ( v1 , v2[ , s] )\nv1 :\tvector, series\nv2 :\tvector, series\ns :\t(optional) sample object, string\nReturn:\t\tscalar", "description": "Inner product of vectors, series, matrices, group.", "long_description": "If used with two vectors, v1 and v2 , @inner returns the dot or inner product of the two vectors.\nIf used with two series, v1 and v2 , @inner returns the dot or inner product of the two series for the workfile or optional sample. If used with two series, @inner returns the inner product of the series using observations in the workfile sample, or optional sample. Observations with NAs will be skipped.\nSyntax: @inner ( o[ , s] )\no :\tmatrix, group\ns :\t(optional) sample object, string\nReturn:\t\tsym\nIf used with a matrix or sym, o , @inner returns the moment matrix, o \u2019 o . Each element of the result is the vector inner product of two columns of the source matrix. The size of the resulting sym is the number of columns in o .\nIf used with a group, @inner returns the uncentered second moment matrix of the data in the group, g , using the observations in the sample, smp . If no sample is provided, the workfile sample is used. Observations with NAs will be skipped"}, "@insert": {"uri": "stringref-@insert", "anchor": "", "usage": "Syntax: @insert ( str1 , str2 , n )\nstr1 :\tstring\nstr2 :\tstring\nn :\tinteger\nReturn:\t\tstring", "description": "Insert string into a string.", "long_description": "Inserts the string str2 into the string str1 at the position given by the integer n ."}, "@instr": {"uri": "stringref-@instr", "anchor": "", "usage": "Syntax: @instr ( str1 , str2[ , n] )\nstr1 :\tstring\nstr2 :\tstring\nn :\t(optional) integer\nReturn:\t\tinteger", "description": "Find substring position.", "long_description": "Finds the starting position of the n -th occurrence of the target string str2 in the string str1 .\nBy default, the function returns the location of the first instance of str2 in str1 , but you may provide the optional integer n to change the occurrence.\nIf the target string is not found, @instr will return a 0."}, "@intercept": {"uri": "mathapp_cpr", "anchor": "ww204045", "usage": "@intercept(x[,s])", "description": "intercept of OLS regression versus implicit time trend"}, "@inverse": {"uri": "matrixref-@inverse", "anchor": "", "usage": "Syntax: @inverse ( m )\nm: matrix, sym\nReturn:\t\tmatrix sym", "description": "Inverse of matrix.", "long_description": "Returns the inverse of a square matrix object or sym.\nThe inverse has the property that the product of the inverse and the source matrix and is the identity matrix. The inverse of a matrix returns a matrix, while the inverse of a sym returns a sym. Note that inverting a sym is much faster than inverting a matrix."}, "@isempty": {"uri": "stringref-@isempty", "anchor": "", "usage": "Syntax: @isempty ( str )\nstr :\tstring\nReturn:\t\tinteger", "description": "Tests for whether str is a blank string, returning a 1 if str is a null string, and 0 otherwise."}, "@isna": {"uri": "mathapp_cpr", "anchor": "ww199920", "usage": "@isna(x)", "description": "equal to NA"}, "@isobject": {"uri": "progref-@isobject", "anchor": "", "usage": "Syntax: @isobject ( str )\nArgument:\tstring, str\nReturn:\tinteger", "description": "Check for an object\u2019s existence. Returns a \u201c1\u201d if the object exists in the current workfile, and a \u201c0\u201d if it does not exist."}, "@ispanel": {"uri": "mathapp_cpr", "anchor": "ww199924", "usage": "@ispanel", "description": "returns indicator for whether the workfile is panel structured."}, "@issingular": {"uri": "matrixref-@issingular", "anchor": "", "usage": "Syntax: @issingular ( m )\nm :\tmatrix, sym\nReturn:\t\tinteger", "description": "Test matrix for singularity.", "long_description": "Returns \u201c1\u201d if the square matrix or sym, o , is singular, and \u201c0\u201d otherwise.\nA singular matrix has a determinant of 0, and cannot be inverted."}, "@isvalidgroup": {"uri": "progref-@isvalidgroup", "anchor": "", "usage": "Syntax: @isvalidgroup ( str )\nArgument:\tstring, str\nReturn:\tinteger", "description": "Check for whether a string represents a valid name for creating an EViews group or auto-series. Returns a \u201c1\u201d if the expression is valid, and a \u201c0\u201d if it is not."}, "@isvalidname": {"uri": "progref-@isvalidname", "anchor": "", "usage": "Syntax: @isvalidname ( str )\nArgument:\tstring, str\nReturn:\tinteger", "description": "Check for whether a string represents a valid name for an EViews object. Returns a \u201c1\u201d if the name is valid, and a \u201c0\u201d if it is not."}, "@kronecker": {"uri": "matrixref-@kronecker", "anchor": "", "usage": "Syntax: @kronecker ( m1 , m2 )\nm1 :\tmatrix, vector, sym\nm2: matrix, vector, sym\nReturn:\t\tmatrix", "description": "Kronecker product.", "long_description": "Calculates the Kronecker product of the two matrix objects, m1 and m2 .\nThe resulting matrix has a number of rows equal to the product of the numbers of rows of the two matrix objects and a number of columns equal to the product of the numbers of columns of the two matrix objects.\nThe elements of the resulting matrix consist of submatrices consisting of an element of the first matrix object multiplied by the entire second matrix object."}, "@kurt": {"uri": "mathapp_cpr", "anchor": "ww199932", "usage": "@kurt(x[,s])", "description": "kurtosis"}, "@lag": {"uri": "matrixref-@lag", "anchor": "", "usage": "Syntax:\t\t@ lag ( x, n)\nx :\tmatrix, vector, svector\nn: matrix, vector, svector\nReturn:\t\tseries", "description": "n -th order lag function.", "long_description": "Returns n -th order lag of the vector, svector, or matrix x . If n is not an integer, the integer floor [img:../content/images/matrixref.098.087.1.jpg] will be used."}, "@lasterrnum": {"uri": "progref-@lasterrnum", "anchor": "", "usage": "Syntax: @lasterrnum\nReturn:\tinteger", "description": "Returns a integer containing the error number for the previously issued command. If there the previous program line did not generate an error, the result will be a 0.", "long_description": "May only be used in a program."}, "@lasterrstr": {"uri": "progref-@lasterrstr", "anchor": "", "usage": "Syntax: @lasterrstr\nReturn:\tstring", "description": "Returns a string containing the error message for the previously issued command. If there the previous program line did not generate an error, the result will be an empty string.", "long_description": "May only be used in a program."}, "@left": {"uri": "stringref-@left", "anchor": "", "usage": "Syntax: @left ( str , n )\nstr :\tstring\nn :\tinteger\nReturn:\t\tstring", "description": "Left portion of string.", "long_description": "Returns a string containing n characters from the left end of str . If the string is shorter than n characters, this function returns all of the characters in the source string."}, "@length": {"uri": "stringref-@length", "anchor": "", "usage": "Syntax: @length ( str )\nstr :\tstring\nReturn:\t\tinteger", "description": "String length.", "long_description": "Returns integer values for the length of the string str ."}, "@linepath": {"uri": "progref-@linepath", "anchor": "", "usage": "Syntax: @linepath\nReturn:\tstring", "description": "Returns a string containing the location of the program currently being executed. If @linepath is being executed as a child program from a parent as part of an include or exec statement, the string will return the location of the child program."}, "@loadprgini": {"uri": "progref-@loadprgini", "anchor": "", "usage": "Syntax: @loadprgini (\u201c [section]name\u201d, \u201cfilename\u201d )\nArgument 1:\tstring, name\nArgument 1:\tstring, filename\nReturn:\tstring", "description": "Returns a string containing the value of the specified variable name in the optionally specified section from the \u201c.ini\u201d file specified in filename . If filename is not specified the default \u201c.ini\u201d is the one with the name of the current running program with extension \u201c.ini.\u201d Note that the function returns a string, so scalars will have to be converted with @val. Also note that both arguments must be enclosed in quotes."}, "@localt": {"uri": "stringref-@localt", "anchor": "", "usage": "Syntax: @localt ( utctime[, timezone ] )\nutctime :\tdate number\ntimezone :\t(optional) timezone string\nReturn:\t\tdate number", "description": "Convert UTC (Coordinated Universal Time) to local time.", "long_description": "Returns the local time zone representation of a point in time input in Coordinated Universal Time (UTC), utctime.\n\u2022 If timezone is not provided, the current Windows time zone setting is used as the local time zone target.\n\u2022 If timezone is provided, the timezone string can either contain raw time zone information in the format returned by @tzspec or it can contain search text (such as a city name) found within one of the time zone descriptions returned by the function @tzlist ."}, "@log": {"uri": "mathapp_cpr", "anchor": "ww199963", "usage": "@log(x), log(x)", "description": "natural logarithm, [img:../content/images/mathapp_cpr.094.1.08.jpg]"}, "@log10": {"uri": "mathapp_cpr", "anchor": "ww199971", "usage": "@log10(x)", "description": "base-10 logarithm, [img:../content/images/mathapp_cpr.094.1.09.jpg]"}, "@log1mexp": {"uri": "mathapp_cpr", "anchor": "ww202784", "usage": "@log1mexp(x)", "description": "for negative x near zero, [img:../content/images/mathapp_cpr.094.1.10.jpg]"}, "@log1p": {"uri": "mathapp_cpr", "anchor": "ww202736", "usage": "@log1p(x)", "description": "for x near zero, [img:../content/images/mathapp_cpr.094.1.11.jpg]"}, "@log2pi": {"uri": "mathapp_cpr", "anchor": "ww203001", "usage": "@log2pi", "description": "[img:../content/images/mathapp_cpr.094.1.12.jpg]"}, "@logcnorm": {"uri": "mathapp_cpr", "anchor": "ww202449", "usage": "@logcnorm", "description": "@log(@cnorm(x))"}, "@logcnormu": {"uri": "mathapp_cpr", "anchor": ""}, "@logit": {"uri": "mathapp_cpr", "anchor": "ww199978", "usage": "@logit(x)", "description": "logistic transform"}, "@logitc": {"uri": "mathapp_cpr", "anchor": ""}, "@logx": {"uri": "mathapp_cpr", "anchor": "ww199983", "usage": "@logx(x,b)", "description": "base- b logarithm, [img:../content/images/mathapp_cpr.094.1.13.jpg]"}, "@lower": {"uri": "stringref-@lower", "anchor": "", "usage": "Syntax: @lower ( str )\nstr :\tstring\nReturn:\t\tstring", "description": "Lowercase string.", "long_description": "Returns the lowercase representation of the string str ."}, "@ltrim": {"uri": "stringref-@ltrim", "anchor": "", "usage": "Syntax: @ltrim ( str )\ntr :\tstring\nReturn:\t\tstring", "description": "Trim left whitespace.", "long_description": "Returns the string str with spaces trimmed from the left."}, "@lu": {"uri": "matrixref-@lu", "anchor": "", "usage": "Syntax: @lu ( M, L, U )\nM :\tmatrix\nL :\tmatrix\nU :\tmatrix\nReturn:\t\tmatrix ( P )", "description": "LU decomposition of matrix.", "long_description": "Performs an LU decomposition with partial (row) pivoting of the matrix M :\n\u2022 if M is a square [img:../content/images/matrixref.098.088.1.jpg] produce a unit lower triangular matrix, L , an upper triangular matrix, U , and a row permutation matrix, P , such that [img:../content/images/matrixref.098.088.2.jpg] .\n\u2022 if M is a non-square [img:../content/images/matrixref.098.088.3.jpg] matrix, if [img:../content/images/matrixref.098.088.4.jpg] , L will be unit lower trapezoidal (rather than triangular), and if [img:../content/images/matrixref.098.088.5.jpg] , U will be upper trapezoidal (rather than triangular)."}, "@mae": {"uri": "mathapp_cpr", "anchor": "ww210669", "usage": "@mae(x, y)", "description": "the mean of the absolute value of the difference between X and Y."}, "@makedate": {"uri": "stringref-@makedate", "anchor": "", "usage": "Syntax: @makedate ( arg1[ , arg2[ , arg3]] , fmt )\narg1 :\tnumber\nargs :\t(optional) number(s) arg2, arg3, ...\nfmt :\tdate format\nReturn:\t\tdate number", "description": "Numbers to date number.", "long_description": "Takes the numeric values given by the arguments arg1 , and optionally, arg2 , etc. and returns a date number using the required format string, fmt.\nIf more than one argument is provided, the arguments must be listed from the lowest frequency to the highest, with the first field representing either the year or the hour."}, "@makediagonal": {"uri": "matrixref-@makediagonal", "anchor": "", "usage": "Syntax: @makediagonal ( v , k )\nv :\tvector, rowvector\nk :\t(optional) integer\nReturn:\t\tsym or matrix", "description": "Create a matrix with vector placed on diagonal.", "long_description": "Create a square matrix with v placed in the k -th diagonal relative to the main diagonal, and zeros off the diagonal.\n\u2022 If no k value is provided or if k is set to 0, the resulting sym matrix will have the same number of rows and columns as the length of v , and will have v in the main diagonal.\n\u2022 If a value for k is provided, the matrix has the same number of rows and columns as the number of elements in the vector plus k , and will place v in the diagonal offset from the main by k ."}, "@makevalidname": {"uri": "progref-@makevalidname", "anchor": "", "usage": "Syntax: @makevalidname ( str )\nArgument:\tstring, str\nReturn:\tstring, name", "description": "Returns a string containing an uppercased valid EViews name based on str.", "long_description": "\u2022 If str is a valid name, then the original string str is returned.\n\u2022 If str exceeds the maximum length, the resulting string will be truncated.\n\u2022 If str is not a valid name, invalid characters will be replaced in the new string with \u201c_\u201d prior to the return."}, "@mape": {"uri": "mathapp_cpr", "anchor": "ww210705", "usage": "@mape(x,y)", "description": "100 multiplied by the mean of the absolute difference between X and Y, divided by Y."}, "@max": {"uri": "mathapp_cpr", "anchor": "ww200016", "usage": "@max(x[,s])", "description": "maximum"}, "@maxerrcount": {"uri": "progref-@maxerrcount", "anchor": "", "usage": "Syntax: @maxerrcount\nReturn:\tinteger", "description": "Returns an integer containing the current value of the maximum number of errors that a program may encounter before execution is halted.", "long_description": "May only be used in a program."}, "@maxes": {"uri": "matrixref-@maxes", "anchor": "", "usage": "Syntax: @maxes ( m , n )\nm: series, matrix, vector, sym\nn :\tinteger\nReturn:\t\tvector", "description": "Vector of maximal values.", "long_description": "Returns a vector with the n maximal values of the object m , arranged from high to low."}, "@mean": {"uri": "mathapp_cpr", "anchor": "ww200046", "usage": "@mean(x[,s])", "description": "mean"}, "@mean1": {"uri": "mathapp_cpr", "anchor": ""}, "@median": {"uri": "mathapp_cpr", "anchor": "ww200056", "usage": "@median(x[,s])", "description": "median"}, "@mid": {"uri": "stringref-@mid", "anchor": "", "usage": "Syntax: @mid ( str , n1[ , n2] )\nstr :\tstring\nn1 :\tinteger\nn2 :\t(optional) integer\nReturn:\t\tstring", "description": "Middle substring.", "long_description": "Returns n2 characters from str , starting at location n1 and continuing for n2 characters to the right. If you omit n2 , it will return all of the remaining characters in the string."}, "@min": {"uri": "mathapp_cpr", "anchor": "ww200070", "usage": "@min(x[,s])", "description": "minimum"}, "@mins": {"uri": "matrixref-@mins", "anchor": "", "usage": "Syntax: @mins ( m , n )\nm: series, matrix, vector, sym\nn :\tinteger\nReturn:\t\tvector", "description": "Vector of minimal values.", "long_description": "Returns a vector with the n minimal values of the object m , arranged from low to high."}, "@mnrnd": {"uri": "matrixref-@mnrnd", "anchor": "", "usage": "Syntax: @mnrnd ( n1 , n2 )\nn1 :\tinteger\nn2 :\tinteger\nReturn:\t\tmatrix", "description": "Matrix of normal random numbers.", "long_description": "Creates a matrix filled with normal [img:../content/images/matrixref.098.093.1.jpg] random numbers. The size of the matrix is given by the integers n1 (number of rows) and n2 (number of columns)."}, "@mod": {"uri": "mathapp_cpr", "anchor": "ww200115", "usage": "@mod(x,y)", "description": "floating point remainder"}, "@mrnd": {"uri": "matrixref-@mrnd", "anchor": "", "usage": "Syntax: @mrnd ( n1 , n2 )\nn1 :\tinteger\nn2 :\tinteger\nReturn:\t\tmatrix", "description": "Matrix of uniform random numbers.", "long_description": "Creates a matrix filled with uniform (0, 1) random numbers. The size of the matrix is given by the integers n1 (number of rows) and n2 (number of columns)."}, "@mse": {"uri": "mathapp_cpr", "anchor": ""}, "@mvgamma": {"uri": "mathapp_cpr", "anchor": ""}, "@mvgammalog": {"uri": "mathapp_cpr", "anchor": ""}, "@nan": {"uri": "mathapp_cpr", "anchor": "ww200274", "usage": "@nan(x,y)", "description": "recode NAs in X to Y"}, "@nas": {"uri": "mathapp_cpr", "anchor": "ww200279", "usage": "@nas(x[,s])", "description": "number of NAs"}, "@neqna": {"uri": "stringref-@neqna", "anchor": "", "usage": "Syntax: @neqna ( str1 , str2 )\ns tr1 :\tstring\nstr2 :\tstring\nReturn:\t\tinteger", "description": "String inequality.", "long_description": "Tests for inequality of str1 and str2 , treating null strings as ordinary blank strings, and not as missing values.\nStrings which test as equal return a 0, and 1 otherwise.\nSimple inequality testing which propagates null string NAs may be performed using the \u201c<>\u201d binary comparison operator.\nDefine the string objects\nstring s1 = \"abc\"\nstring s2 = \"\"\nThen\nscalar b1 = @neqna(\"abc\", \"abc\")\nscalar b2 = @neqna(\"abc\", s1)\nsets the scalar objects B1 and B2 to 0, while\nscalar c1 = @neqna(\"\", \"def\")\nscalar c2 = @neqna(s2, \"def\")\nscalar c3 = @neqna(s1, s2)\nsets C1, C2, and C3 to 1.\nIf ALPHA1 and ALPHA2 are alpha series,\nseries d1 = @neqna(alpha1, \"abc\")\nseries d2 = @neqna(alpha1, s1)\nseries d3 = @neqna(alpha1, alpha2)\nperform the inequality test using ALPHA1 and the literal string and scalar containing \u201cabc\u201d, and the contents of ALPHA2 for each observation in the workfile sample.\nIf SVEC1 and SVEC2 are svectors,\nscalar sc1 = @neqna(svec1, \"abc\")\nscalar sc2 = @neqna(svec1, svec2)\nperform the equality test of SVEC1 against \u201cabc\u201d, and the contents of SVEC2. Note that this is a full equality test of SVEC1 against the string, or against each element of SVEC2, and that the test will return a 0 if any element is equal, and a 1 if all elements are unequal (ignoring empty strings)."}, "@norm": {"uri": "matrixref-@norm", "anchor": "", "usage": "Syntax: @norm ( m[ , n] )\nm :\tmatrix, vector, sym, series\nn :\t(optional) integer\nReturn:\t\t number", "description": "Norm of matrix.", "long_description": "Returns the norm of m .\nIf no norm type is provided, this function returns the infinity norm. Possible choices for the norm type n include \u201c\u20131\u201d for the infinity norm, \u201c0\u201d for the Frobenius norm, and an integer \u201c n\u201d for the [img:../content/images/matrixref.098.096.1.jpg] norm."}, "@now": {"uri": "stringref-@now", "anchor": "", "usage": "Syntax: @now\nReturn:\t\tdate number", "description": "Current time.", "long_description": "Returns the date number associated with the current time."}, "@nrnd": {"uri": "mathapp_cpr", "anchor": ""}, "@obs": {"uri": "mathapp_cpr", "anchor": "ww200311", "usage": "@obs(x[,s])", "description": "number of observations"}, "@obsrange": {"uri": "mathapp_cpr", "anchor": "ww200325", "usage": "@obsrange", "description": "observations in range"}, "@obssmpl": {"uri": "mathapp_cpr", "anchor": "ww200329", "usage": "@obssmpl", "description": "observations in sample"}, "@ones": {"uri": "matrixref-@ones", "anchor": "", "usage": "Syntax: @ones ( n1 , n2 )\nn1 :\tinteger\nn2 :\tinteger\nReturn:\t\tmatrix, vector", "description": "Matrix of vector of ones.", "long_description": "Creates a matrix or vector filled with the value 1. The size of the created matrix is given by the integers n1 (number of rows) and n2 (number of columns)."}, "@option": {"uri": "progref-@option", "anchor": "", "usage": "Syntax: @option (i), integer\nReturn:\tstring", "description": "returns the i -th option provided in the exec or run command."}, "@otod": {"uri": "stringref-@otod", "anchor": "", "usage": "Syntax: @otod ( n )\nn :\tinteger\nReturn:\t\tstring", "description": "Workfile observation to date.", "long_description": "Returns a string identifying the date or observation corresponding to observation number n , counted from the beginning of the current workfile. Invalid inputs will produce an empty string.\nEViews will use the global default settings for the Month/Day order in dates to determine the ordering of days and months in the resulting date string."}, "@otods": {"uri": "stringref-@otods", "anchor": "", "usage": "Syntax: @otods ( n )\nn :\tinteger\nReturn:\t\tstring", "description": "Sample observation to date.", "long_description": "Returns a string containing the date or observation corresponding to observation number n , counted from the beginning of the current workfile sample .\nEViews will use the global default settings for the Month/Day order in dates to determine the ordering of days and months in the resulting date string."}, "@outer": {"uri": "matrixref-@outer", "anchor": "", "usage": "Syntax: @outer ( v1 , v2 )\nv1 :\tvector, series\nv2 :\tvector, series\nReturn:\t\tmatrix", "description": "Outer product of vectors or series.", "long_description": "Returns the outer product of the two vectors or series. If used with two vectors, @outer requires that v1 and v2 be the same size.\n\u2022 If used with two series, @outer returns a square matrix of every possible product of the elements of the two inputs.\n\u2022 If used with two vectors, @outer computes [img:../content/images/matrixref.098.099.1.jpg] . If v1 and v2 are column vectors, the result is the square matrix of every possible product of the elements of the two inputs. If v1 and v2 are row vectors, the result is a scalar containing the sum of the element products."}, "@pagecount": {"uri": "mathapp_cpr", "anchor": "ww200346", "usage": "@pagecount", "description": "returns a scalar containing the number of pages in the current workfile."}, "@pageexist": {"uri": "mathapp_cpr", "anchor": "ww200350", "usage": "@pageexist(str)", "description": "returns a 0 or 1 depending on whether the page specified by str exists in the current workfile."}, "@pagefreq": {"uri": "mathapp_cpr", "anchor": "ww200354", "usage": "@pagefreq", "description": "returns a string containing the current page\u2019s frequency."}, "@pageids": {"uri": "mathapp_cpr", "anchor": "ww200358", "usage": "@pageids", "description": "returns a string containing a space delimited list of the id series for the current workfile page."}, "@pagelist": {"uri": "mathapp_cpr", "anchor": "ww200362", "usage": "@pagelist", "description": "returns a space delimited string containing the names of all the pages in the current active workfile."}, "@pagename": {"uri": "mathapp_cpr", "anchor": "ww200366", "usage": "@pagename", "description": "returns a string containing the current default page name."}, "@pagesmpl": {"uri": "mathapp_cpr", "anchor": "ww200370", "usage": "@pagesmpl", "description": "returns a string containing the current sample for the active page."}, "@permute": {"uri": "matrixref-@permute", "anchor": "", "usage": "Syntax: @permute ( m )\nm : \tmatrix, vector\nReturn:\t\tmatrix, vector", "description": "Permutation of matrix.", "long_description": "Returns a matrix or vector whose rows are randomly drawn without replacement from rows of the input m . The output has the same size as the input matrix or vector.\nTo draw with replacement from rows of a matrix, use @resample ."}, "@pi": {"uri": "mathapp_cpr", "anchor": "ww203027", "usage": "@pi", "description": "[img:../content/images/mathapp_cpr.094.1.14.jpg]"}, "@pinverse": {"uri": "matrixref-@pinverse", "anchor": "", "usage": "Syntax: @pinverse ( m )\nm :\tmatrix, sym\nReturn:\t\tmatrix, sym", "description": "Moore-Penrose pseudo-inverse of matrix.", "long_description": "Returns the Moore-Penrose pseudo-inverse of a matrix object or sym.\nThe pseudo-inverse has the property that both pre-multiplying and post-multiplying the pseudo-inverse by the source matrix returns the source matrix, and that both pre-multiplying and post-multiplying the source matrix by the pseudo-inverse will return the pseudo-inverse.\nFor matrix [img:../content/images/matrixref.098.101.1.jpg] and pseudo-inverse [img:../content/images/matrixref.098.101.2.jpg] ,\n[img:../content/images/matrixref.098.101.3.jpg]\nCalling the function to produce the pseudo-inverse of a matrix returns a matrix, while the pseudo-inverse of a sym returns a sym. Note that pseudo-inverting a sym is much faster than inverting a matrix."}, "@pow": {"uri": "mathapp_cpr", "anchor": "ww202876", "usage": "@pow(x,a)", "description": "power, [img:../content/images/mathapp_cpr.094.1.15.jpg]"}, "@pow1pm1": {"uri": "mathapp_cpr", "anchor": "ww202872", "usage": "@pow1pm1(x,a)", "description": "for x near zero, [img:../content/images/mathapp_cpr.094.1.17.jpg]"}, "@powm1": {"uri": "mathapp_cpr", "anchor": "ww202880", "usage": "@powm1(x,a)", "description": "for x near 1, [img:../content/images/mathapp_cpr.094.1.16.jpg]"}, "@prod": {"uri": "mathapp_cpr", "anchor": "ww200409", "usage": "@prod(x[,s])", "description": "product"}, "@psi": {"uri": "mathapp_cpr", "anchor": "ww200414", "usage": "@psi(x)", "description": "see @digamma"}, "@qbeta": {"uri": "mathapp_cpr", "anchor": "ww200424", "usage": "@qbeta(s,a,b)", "description": "beta quantile function (inverse CDF)"}, "@qbinom": {"uri": "mathapp_cpr", "anchor": "ww200429", "usage": "@qbinom(s,n,p)", "description": "binomial quantile function (inverse CDF)"}, "@qchisq": {"uri": "mathapp_cpr", "anchor": "ww200434", "usage": "@qchisq(p,v)", "description": "chi-square quantile function (inverse CDF)"}, "@qexp": {"uri": "mathapp_cpr", "anchor": "ww200439", "usage": "@qexp(p,m)", "description": "exponential quantile function (inverse CDF)"}, "@qextreme": {"uri": "mathapp_cpr", "anchor": "ww200444", "usage": "@qextreme(p)", "description": "extreme value quantile function (inverse CDF)"}, "@qfdist": {"uri": "mathapp_cpr", "anchor": "ww200449", "usage": "@qfdist(p,v1,v2)", "description": "F -distribution quantile function (inverse CDF)"}, "@qform": {"uri": "matrixref-@qform", "anchor": "", "usage": "Syntax: @qform ( s , o )\ns :\tsym\no :\tvector, matrix, sym\nReturn:\t\tnumber, sym", "description": "Quadratic form.", "long_description": "Returns the quadratic form of a symmetric matrix s, with a vector or matrix object o .\n[img:../content/images/matrixref.098.102.1.jpg]\n\u2022 if o is a vector, the function returns a scalar\n\u2022 If o is a matrix, the function returns a sym"}, "@qgamma": {"uri": "mathapp_cpr", "anchor": "ww200457", "usage": "@qgamma(p,b,r)", "description": "gamma quantile function (inverse CDF)"}, "@qged": {"uri": "mathapp_cpr", "anchor": "ww200462", "usage": "@qged(p,r)", "description": "generalized error quantile function (inverse CDF)"}, "@qlaplace": {"uri": "mathapp_cpr", "anchor": "ww200467", "usage": "@qlaplace(x)", "description": "Laplace quantile function (inverse CDF)"}, "@qlogistic": {"uri": "mathapp_cpr", "anchor": "ww200472", "usage": "@qlogistic(p)", "description": "logistic quantile function (inverse CDF)"}, "@qlognorm": {"uri": "mathapp_cpr", "anchor": "ww200477", "usage": "@qlognorm(p,m,s)", "description": "log normal quantile function (inverse CDF)"}, "@qnegbin": {"uri": "mathapp_cpr", "anchor": "ww200482", "usage": "@qnegbin(s,n,p)", "description": "negative binomial quantile function (inverse CDF)"}, "@qnorm": {"uri": "mathapp_cpr", "anchor": "ww200487", "usage": "@qnorm(p)", "description": "normal quantile function (inverse CDF)"}, "@qpareto": {"uri": "mathapp_cpr", "anchor": "ww200492", "usage": "@qpareto(p,a,k)", "description": "Pareto quantile function (inverse CDF)"}, "@qpoisson": {"uri": "mathapp_cpr", "anchor": "ww200497", "usage": "@qpoisson(p,m)", "description": "Poisson quantile function (inverse CDF)"}, "@qr": {"uri": "matrixref-@qr", "anchor": "", "usage": "Syntax: @qr ( M, R[, P] )\nM :\tmatrix\nR :\tmatrix\nP :\t(optional) matrix", "description": "QR decomposition of matrix.", "long_description": "Return:\t\tmatrix [img:../content/images/matrixref.098.103.01.jpg]\nDecomposes an [img:../content/images/matrixref.098.103.02.jpg] matrix [img:../content/images/matrixref.098.103.03.jpg] into an [img:../content/images/matrixref.098.103.04.jpg] orthogonal matrix [img:../content/images/matrixref.098.103.05.jpg] and an [img:../content/images/matrixref.098.103.06.jpg] upper triangular matrix [img:../content/images/matrixref.098.103.07.jpg] such that [img:../content/images/matrixref.098.103.08.jpg] , where [img:../content/images/matrixref.098.103.09.jpg] .\nIf permutation matrix [img:../content/images/matrixref.098.103.10.jpg] is provided, the decomposition produces [img:../content/images/matrixref.098.103.11.jpg] and [img:../content/images/matrixref.098.103.12.jpg] such that [img:../content/images/matrixref.098.103.13.jpg] ."}, "@qtdist": {"uri": "mathapp_cpr", "anchor": "ww200502", "usage": "@qtdist(p,v)", "description": "Student\u2019s t -distribution quantile function (inverse CDF)"}, "@quantile": {"uri": "mathapp_cpr", "anchor": "ww200509", "usage": "@quantile(x,q[,m,s])", "description": "quantile"}, "@qunif": {"uri": "mathapp_cpr", "anchor": "ww200524", "usage": "@qunif(p,a,b)", "description": "uniform quantile function (inverse CDF)"}, "@qweib": {"uri": "mathapp_cpr", "anchor": "ww200529", "usage": "@qweib(p,m,a)", "description": "Weibull quantile function (inverse CDF)"}, "@range": {"uri": "matrixref-@range", "anchor": "", "usage": "Syntax: @range ( n1, n2 )\nn1 :\tinteger\nn2 :\tinteger\nReturn:\t\tvector", "description": "Vector of sequential integers.", "long_description": "Returns a vector holding the sequential integers staring at n1 and ending at n2."}, "@rank": {"uri": "matrixref-@rank", "anchor": "", "usage": "Syntax: @rank ( m[ , n] )\nm :\tmatrix, sym, vector, series\nn: (optional) number\nReturn:\t\tinteger", "description": "Rank of the matrix.", "long_description": "The rank of m is calculated by counting the number of singular values of the matrix which are smaller in absolute value than the tolerance, n .\nIf n is not provided, EViews uses the value given by the largest dimension of the matrix multiplied by the norm of the matrix multiplied by machine epsilon (the smallest representable number)."}, "@ranks": {"uri": "matrixref-@ranks", "anchor": "", "usage": "Syntax: @ranks ( m , [o, t] )\nm :\tmatrix, vector\no :\t(optional) string\nt:\t( optional) string\nReturn:\t\tmatrix, vector", "description": "Ranks of the elements of a matrix or vector", "long_description": "Return the ranks of the elements of a matrix object m . The optional arguments control the behavior of the ranking.\nNote that ranking a matrix ranks every element of the matrix and arranges the results to match the elements of the original matrix, from upper left to lower right.\nThe o option controls the direction of the ranking:\n\u2022 \u201ca\u201d (ascending - default) or \u201cd\u201d (descending)\nThe t option controls tie-handling:\n\u2022 Ties are broken according to the setting of t : \u201ci\u201d (ignore), \u201cf\u201d (first), \u201cl\u201d (last), \u201ca\u201d (average - default), \u201cr\u201d randomize.\nIf you wish to specify tie-handling options, you must also specify the order option ( e.g. , @ranks(x, \"a\", \"i\") )."}, "@rapplyranks": {"uri": "matrixref-@rapplyranks", "anchor": "", "usage": "Syntax: @rapplyranks ( m , v [, n] )\nm :\tmatrix, vector\nv :\tvector\nn: (optional) integer\nReturn:\t\tmatrix, vector", "description": "Reorder the columns of a matrix using a vector of ranks.", "long_description": "Apply (a row of) column ranks in the vector v to reorder the columns of a matrix m using the ranks.\n\u2022 v should contain unique integers from 1 to the number of columns of m.\n\u2022 If the optional argument n is specified, only the columns in row n will be reordered."}, "@rbeta": {"uri": "mathapp_cpr", "anchor": "ww200544", "usage": "@rbeta(a,b)", "description": "beta random number generator"}, "@rbinom": {"uri": "mathapp_cpr", "anchor": "ww200549", "usage": "@rbinom(a,b)", "description": "binomial random number generator"}, "@rchisq": {"uri": "mathapp_cpr", "anchor": "ww200554", "usage": "@rchisq(v)", "description": "chi-square random number generator"}, "@recode": {"uri": "mathapp_cpr", "anchor": "ww200559", "usage": "@recode(s,x,y)", "description": "recode by condition"}, "@regress": {"uri": "matrixref-@regress", "anchor": "", "description": "Regression on columns of matrix.", "long_description": "Syntax: @regress ( m[, v] )\nm :\tmatrix\nv :\t(optional) vector\nReturn:\t\tmatrix\nReturns the results of an OLS regression on the first column of matrix m versus the remaining columns of m .\nThe returned matrix contains four columns of information: (1) regression coefficient values, (2) standard errors, (3) t-test statistics, and (4) associated p-values.\nIf an optional vector v is supplied, the regression residuals are stored in v ."}, "@replace": {"uri": "stringref-@replace", "anchor": "", "usage": "Syntax: @replace ( str1 , str2 , str3[ , n] )\nstr1 :\tstring\nstr2 :\tstring\nstr3 :\tstring\nn :\t(optional) integer\nReturn:\t\tstring", "description": "Replace substring in string.", "long_description": "Returns the base string str1 , with the str3 substituted for the target string str2 . By default, all occurrences of str2 will be replaced, but you may provide an optional integer n to specify the maximum number of occurrences to be replaced."}, "@resample": {"uri": "matrixref-@resample", "anchor": "", "usage": "Syntax: @resample ( m[ , n1 , n2 , v] )\nm: matrix, vector\nn1 : \t(optional) integer\nn2 : \t(optional) positive integer\nv :\t(optional) vector\nOutput: \t\tmatrix, vector", "description": "Resample matrix.", "long_description": "Returns a matrix or vector whose rows are randomly drawn with replacement from rows of the input matrix or vector.\nBy default, the output matrix will be the same size as the source m .\n\u2022 [img:../content/images/matrixref.098.110.01.jpg] represents the number of \u201cextra\u201d rows to be drawn from the matrix. If the input matrix has r rows and c columns, the output matrix will have [img:../content/images/matrixref.098.110.02.jpg] rows and [img:../content/images/matrixref.098.110.03.jpg] columns. By default, [img:../content/images/matrixref.098.110.04.jpg] .\n\u2022 [img:../content/images/matrixref.098.110.05.jpg] represents the block size for the resample procedure. If you specify [img:../content/images/matrixref.098.110.06.jpg] , then blocks of consecutive rows of length [img:../content/images/matrixref.098.110.07.jpg] will be drawn with replacement from the first [img:../content/images/matrixref.098.110.08.jpg] rows of the input matrix.\n\u2022 You may provide a name for the vector [img:../content/images/matrixref.098.110.09.jpg] to be used for weighted resampling. The weighting vector must have length [img:../content/images/matrixref.098.110.10.jpg] and all elements must be non-missing and non-negative. If you provide a weighting vector, each row of the input matrix will be drawn with probability proportional to the weights in the corresponding row of the weighting vector. (The weights need not sum to 1. EViews will automatically normalize the weights).\nTo draw without replacement from rows of a matrix, use @permute ."}, "@rexp": {"uri": "mathapp_cpr", "anchor": "ww200568", "usage": "@rexp(m)", "description": "exponential random number generator"}, "@rextreme": {"uri": "mathapp_cpr", "anchor": "ww200573", "usage": "@rextreme(p)", "description": "extreme value random number generator"}, "@rfdist": {"uri": "mathapp_cpr", "anchor": "ww200578", "usage": "@rfdist(v1,v2)", "description": "F -distribution random number generator"}, "@rgamma": {"uri": "mathapp_cpr", "anchor": "ww200596", "usage": "@rgamma(b,r)", "description": "gamma random number generator"}, "@rgbadj": {"uri": "mathapp_cpr", "anchor": ""}, "@rged": {"uri": "mathapp_cpr", "anchor": "ww200601", "usage": "@rged(r)", "description": "generalised error random number generator"}, "@right": {"uri": "stringref-@right", "anchor": "", "usage": "Syntax: @right ( str , n )\nstr :\tstring\nn :\tinteger\nReturn:\t\tstring", "description": "Returns a string containing n characters from the right end of str . If the source is shorter than n , the entire string is returned."}, "@rinstr": {"uri": "stringref-@rinstr", "anchor": "", "usage": "Syntax: @rinstr ( str1 , str2[ , n] )\nstr1 :\tstring\nstr2 :\tstring\nn :\t(optional) integer\nReturn:\t\tinteger", "description": "Find substring position.", "long_description": "Starting at the end of the string and searching in reverse, finds the starting position of the target string str2 in the string str1 . By default, the function returns the location of the last (first from the end) instance of str2 in str1 , but you may provide the optional integer n to change the occurrence.\nIf the target string is not found, @rinstr will return a 0."}, "@riwish": {"uri": "mathapp_cpr", "anchor": "ww205354", "usage": "@riwish([v,]s)", "description": "Inverse Wishart random number generator with sym covariance"}, "@riwishc": {"uri": "mathapp_cpr", "anchor": "ww205348", "usage": "@riwishc([v,]s)", "description": "Inverse Wishart random number generator with sym Choesky of covariance"}, "@riwishi": {"uri": "mathapp_cpr", "anchor": "ww205343", "usage": "@riwishi([v,]s)i", "description": "Inverse Wishart random number generator with sym inverse covariance"}, "@riwishic": {"uri": "mathapp_cpr", "anchor": "ww205338", "usage": "@riwishic([v,]s)", "description": "Inverse Wishart andom number generator with sym Cholesky of inverse covariance"}, "@rlaplace": {"uri": "mathapp_cpr", "anchor": "ww200610", "usage": "@rlaplace", "description": "Laplace random number generator"}, "@rlogistic": {"uri": "mathapp_cpr", "anchor": "ww200625", "usage": "@rlogistic", "description": "logistic random number generator"}, "@rlognorm": {"uri": "mathapp_cpr", "anchor": "ww200630", "usage": "@rlognorm(m,s)", "description": "log normal random number generator"}, "@rmse": {"uri": "mathapp_cpr", "anchor": ""}, "@rmvnorm": {"uri": "mathapp_cpr", "anchor": "ww204561", "usage": "@rmvnorm([v,]s)", "description": "multivariate normal random number generator with sym covariance"}, "@rmvnormc": {"uri": "mathapp_cpr", "anchor": "ww204580", "usage": "@rmvnormc([v,]s)", "description": "multivariate normal random number generator with sym Choesky of covariance"}, "@rmvnormi": {"uri": "mathapp_cpr", "anchor": "ww204576", "usage": "@rmvnormi([v,]s)i", "description": "multivariate normal random number generator with sym inverse covariance"}, "@rmvnormic": {"uri": "mathapp_cpr", "anchor": "ww204572", "usage": "@rmvnormic([v,]s)", "description": "multivariate normal random number generator with sym Cholesky of inverse covariance"}, "@rnegbin": {"uri": "mathapp_cpr", "anchor": "ww200665", "usage": "@rnegbin(n,p)", "description": "negative binomial random number generator"}, "@rnorm": {"uri": "mathapp_cpr", "anchor": "ww200670", "usage": "@rnorm", "description": "normal random number generator"}, "@round": {"uri": "mathapp_cpr", "anchor": "ww200680", "usage": "@round(x[,n])", "description": "round to the nearest integer"}, "@rowextract": {"uri": "matrixref-@rowextract", "anchor": "", "usage": "Syntax: @rowextract ( m , n )\nm: matrix, sym\nn :\tinteger\nReturn:\t\tvector", "description": "Extract rowvector from matrix object.", "long_description": "Extract a vector from row n of the matrix object m , where m is a matrix object.\nNote that we recommend that extraction be performed using the newer \u201c.row\u201d object data member functions. See \u201cMatrix Data Members\u201d \u201cSym Data Members\u201d and the examples below."}, "@rowranks": {"uri": "matrixref-@rowranks", "anchor": "", "usage": "Syntax: @rowranks ( m [, o] )\nm :\tmatrix, vector\no :\t(optional) o\nReturn:\t\tmatrix, vector", "description": "Matrix where each row contains ranks of the column values.", "long_description": "Returns a matrix where each row contains the rankings of the values of the corresponding row of m .\nThe option o controls the direction of the ranking: \u201ca\u201d (ascending - default) or \u201cd\u201d (descending)."}, "@rows": {"uri": "matrixref-@rows", "anchor": "", "usage": "Syntax: @rows ( m )\nm :\tmatrix, vector, sym, series, group\nReturn:\t\tinteger", "description": "Number of rows in matrix object.", "long_description": "For series and groups @rows returns the number of observations in the workfile range."}, "@rowsort": {"uri": "matrixref-@rowsort", "anchor": "", "usage": "Syntax: @rowsort ( m [, o] )\nm :\tmatrix, vector\no :\t(optional) o\nReturn:\t\tmatrix, vector", "description": "Matrix where each row contains sorted column values.", "long_description": "Returns a matrix where each row contains the sorted values of the corresponding row of m .\nThe option o controls the direction of the ranking: \u201ca\u201d (ascending - default) or \u201cd\u201d (descending)."}, "@rpareto": {"uri": "mathapp_cpr", "anchor": "ww200685", "usage": "@rpareto(a,k)", "description": "Pareto random number generator"}, "@rpoisson": {"uri": "mathapp_cpr", "anchor": "ww200690", "usage": "@rpoisson(m)", "description": "Poisson random number generator"}, "@rsweep": {"uri": "matrixref-@rsweep", "anchor": "", "usage": "Syntax: @rsweep ( s[ , n] )\ns :\tsym\nk :\tinteger\nk2 :\t(optional) integer\nReturn:\t\tmatrix\nSyntax: @rsweep ( m, r, c )\nm :\tmatrix, sym\nr :\tinteger\nc :\tinteger\nReturn:\t\tmatrix", "description": "Reverse sweep operator.", "long_description": "There are two forms for @rsweep, one for the symmetric, and the other for then non-symmetric operator.\nReturns the result of applying the symmetric sweep operator to symmetric matrix S at diagonal element k . If k2 is specified, sweeps on all diagonal elements between k and k2 , inclusive.\nThis is merely an alias for @sweep( s, k[, k2] ), since the symmetric sweep operator is its own reverse/inverse.\nReturns the result of applying the reverse non-symmetric sweep operator to general matrix M at element ( r , c ).\nLet [img:../content/images/matrixref.098.119.01.jpg] be an application of the symmetric sweep operator. Then, [img:../content/images/matrixref.098.119.02.jpg] , [img:../content/images/matrixref.098.119.03.jpg] where [img:../content/images/matrixref.098.119.04.jpg] , [img:../content/images/matrixref.098.119.05.jpg] where [img:../content/images/matrixref.098.119.06.jpg] , and\n[img:../content/images/matrixref.098.119.07.jpg]\nwhere [img:../content/images/matrixref.098.119.08.jpg] and [img:../content/images/matrixref.098.119.09.jpg] .\nLet [img:../content/images/matrixref.098.119.10.jpg] be an application of the non-symmetric sweep operator. Then, [img:../content/images/matrixref.098.119.11.jpg] , [img:../content/images/matrixref.098.119.12.jpg] where [img:../content/images/matrixref.098.119.13.jpg] , [img:../content/images/matrixref.098.119.14.jpg] where [img:../content/images/matrixref.098.119.15.jpg] , and\n[img:../content/images/matrixref.098.119.16.jpg]\nwhere [img:../content/images/matrixref.098.119.17.jpg] and [img:../content/images/matrixref.098.119.18.jpg] ."}, "@rtdist": {"uri": "mathapp_cpr", "anchor": "ww200720", "usage": "@rtdist(v)", "description": "Student\u2019s t -distribution random number generator"}, "@rtrim": {"uri": "stringref-@rtrim", "anchor": "", "usage": "Syntax: @rtrim ( str )\nstr :\tstring\nReturn:\t\tstring", "description": "Trim right whitespace.", "long_description": "Returns the string str with spaces trimmed from the right."}, "@runif": {"uri": "mathapp_cpr", "anchor": "ww200732", "usage": "@runif(a,b)", "description": "uniform random number generator"}, "@runpath": {"uri": "progref-@runpath", "anchor": "", "usage": "Syntax: @runpath\nReturn:\tstring", "description": "Returns a string containing the location of the program currently being executed. If @runpath is being executed as a child program from a parent as part of an include or exec statement, the string will return the location of the parent program."}, "@rweib": {"uri": "mathapp_cpr", "anchor": "ww200757", "usage": "@rweib(m,a)", "description": "Weibull random number generator"}, "@rwish": {"uri": "mathapp_cpr", "anchor": "ww204948", "usage": "@rwish([v,]s)", "description": "Wishart random number generator with sym covariance"}, "@rwishc": {"uri": "mathapp_cpr", "anchor": "ww204942", "usage": "@rwishc([v,]s)", "description": "Wishart random number generator with sym Choesky of covariance"}, "@rwishi": {"uri": "mathapp_cpr", "anchor": "ww204937", "usage": "@rwishi([v,]s)i", "description": "Wishart random number generator with sym inverse covariance"}, "@rwishic": {"uri": "mathapp_cpr", "anchor": "ww204932", "usage": "@rwishic([v,]s)", "description": "Wishart andom number generator with sym Cholesky of inverse covariance"}, "@scale": {"uri": "matrixref-@scale", "anchor": "", "usage": "Syntax: @scale ( m, v[,p] )\nm :\tmatrix, sym\nv :\tvector\np:\t(optional) number\nReturn:\t\tmatrix, sym", "description": "Scale rows or columns of matrix.", "long_description": "Scale the rows or columns of a matrix, or the rows and columns of a sym matrix.\n\u2022 If m is a matrix and v is a vector, the i -th row of m will be scaled by the i -th element of v , optionally raised to the power p (row scaling). The length v must equal the number of rows of m .\n\u2022 If m is a matrix and v is a rowvector, the i -th column of m will be scaled by the i -th element of v , optionally raised to the power p (column scaling). The length v must equal the number of columns of m .\n\u2022 If m is a sym object, then v may either be a vector or a rowvector. The ( i , j )-th element of m will be scaled by both the i -th and j -th elements of v (row and column scaling). The length v must equal the number of rows (and columns) of m .\nLet M be the matrix object, V be the vector or rowvector, and [img:../content/images/matrixref.098.120.1.jpg] be the diagonal matrix formed from the elements of V. Then @scale(m, v, p) returns:\n\u2022 [img:../content/images/matrixref.098.120.2.jpg] , if M is a matrix and V is a vector.\n\u2022 [img:../content/images/matrixref.098.120.3.jpg] , if M is a matrix and V is a rowvector.\n\u2022 [img:../content/images/matrixref.098.120.4.jpg] , if M is a sym matrix."}, "@seq": {"uri": "matrixref-@seq", "anchor": "", "usage": "Syntax: @seq ( d1, d2, n )\nd1 :\tnumber\nd 2:\tnumber\nn :\tinteger\nReturn:\t\tvector", "description": "Vector containing arithmetic sequence.", "long_description": "Returns a vector holding an arithmetic sequence of n elements. The initial element has value d1 , and the difference between each element and its predecessor is d2 ."}, "@seqm": {"uri": "matrixref-@seqm", "anchor": "", "usage": "Syntax: @seqm ( d1, d2, n )\nd1 :\tnumber\nd 2:\tnumber\nn :\tinteger\nReturn:\t\tvector", "description": "Vector containing geometric sequence.", "long_description": "Returns a vector holding a geometric sequence of n elements. The initial element has value d1 , and the ratio between each subsequent element and its predecessor is d2 ."}, "@sfill": {"uri": "stringref-@sfill", "anchor": "", "usage": "Syntax: @sfill ( str1[, str2, str3, ...] )\nstr1 :\tstring\nstrs :\tstring str2, str3, ...\nReturn:\t\tsvector", "description": "Create a string vector.", "long_description": "Returns an svector containing strings specified in a comma separated list of strings."}, "@shuffle": {"uri": "mathapp_cpr", "anchor": ""}, "@sin": {"uri": "mathapp_cpr", "anchor": "ww200769", "usage": "@sin(x)", "description": "sine (argument in radians)"}, "@skew": {"uri": "mathapp_cpr", "anchor": "ww200774", "usage": "@skew(x[,s])", "description": "skewness"}, "@smape": {"uri": "mathapp_cpr", "anchor": "ww202200", "usage": "@smape(x,y[,s])", "description": "symmetric mean absolute percentage error"}, "@solvesystem": {"uri": "matrixref-@solvesystem", "anchor": "", "usage": "Syntax: @solvesystem ( o , v )\nm :\tmatrix, sym\nv :\tvector\nReturn:\t\tvector", "description": "Solve system of linear equations.", "long_description": "Returns the vector x that solves the linear system [img:../content/images/matrixref.098.124.1.jpg] where the matrix or sym [img:../content/images/matrixref.098.124.2.jpg] is given by the argument m , and the vector is given by the argument v."}, "@sort": {"uri": "matrixref-@sort", "anchor": "", "usage": "Syntax: @sort ( m[, o, t] )\nm :\tmatrix or vector\no :\t(optional) string\nt :\t(optional) string\nReturn:\t\tmatrix, vector", "description": "Sort elements of matrix or vector.", "long_description": "Returns a matrix or vector containing the sorted elements of the matrix or vector object m.\nNote that sorting a matrix ranks every element of the matrix and arranges the results to match the elements of the original matrix, from upper left to lower right.\nThe o option controls the direction of the ranking:\n\u2022 \u201ca\u201d (ascending - default) or \u201cd\u201d (descending)\nThe t option controls tie-handling:\n\u2022 Ties are broken according to the setting of t : \u201ci\u201d (ignore), \u201cf\u201d (first), \u201cl\u201d (last), \u201ca\u201d (average - default), \u201cr\u201d randomize.\nIf you wish to specify tie-handling options, you must also specify the order option ( e.g. \u2018@sort(x, \u201ca\u201d, \u201ci\u201d)\u2019)."}, "@sqrt": {"uri": "mathapp_cpr", "anchor": "ww200785", "usage": "@sqrt(x), sqr(x)", "description": "square root"}, "@stdev": {"uri": "mathapp_cpr", "anchor": "ww200789", "usage": "@stdev(x[,s])", "description": "standard deviation"}, "@stdevp": {"uri": "mathapp_cpr", "anchor": "ww200794", "usage": "@stdevp(x[,s])", "description": "population standard deviation"}, "@stdevs": {"uri": "mathapp_cpr", "anchor": "ww200799", "usage": "@stdevs(x[,s])", "description": "sample standard deviation"}, "@str": {"uri": "stringref-@str", "anchor": "", "usage": "Syntax:\t@str( d[ , fmt] )\nArgument 1:\tscalar, d\nArgument 2:\tnumeric format string, fmt\nReturn:\tstring", "description": "Returns a string representing the given number. You may provide an optional format string. (See also @val to convert a string into a number.)", "long_description": "EViews offers a variety of ways to write your number as a string. By default, EViews will format the number string using 10 significant digits, with no leading or trailing characters, no thousands separators, and an explicit decimal point.\n(The default conversion is equivalent to using @str with the format \u201cg.10\u201d as described below.)\nIf you wish to write your number in a different fashion, you must provide an explicit format string. A numeric format string has the format:\n[type][t][+][(][$][#][<|=|>][0][width][[.|..]precision][%][)]\nThere are a large number of syntax elements in this format but we may simplify matters greatly by dividing them into four basic categories:\n\u2022 format: [type]\n\u2022 width: [<|=|>][width]\n\u2022 precision: [precision]\n\u2022 advanced modifiers: the remaining elements (leading and trailing characters, padding and truncation modifiers, separators, display of negative numbers)\nThe type , width , and precision components are the basic components of the format so we will focus on them first. We describe the advanced modifiers in \u201cModified Formats\u201d .\nBasic Formats\nEViews offers formats designed for both real-valued and integer data.\nBasic Real-Value Formats\nThe basic real-value format is:\n[type][<|=|>][width][.][precision]\nThe type component is a single character indicating the basic type and the width and precision arguments are numbers indicating the number of output characters and the precision at which the numbers should be written. If specified, the precision should be separated from the type and width portion of the format by a \u201c.\u201d character (or \u201c..\u201d as we will see in \u201cModified Formats\u201d ).\nIf you specify a format with neither width nor precision , EViews will format the number at full precision with matching string width.\nThe following types are for use with real-valued data:\n\ng significant digits z significant digits with trailing zeros c fixed characters with single leading space for positive numbers f fixed decimal places e scientific/float p percentage (same as \u201cf\u201d but values are multiplied by 100) s suppressed decimal point format r ratio, e.g., \u201c30 1/5\u201d\nThe type character may be followed by a width specification, consisting of a width indicating the number of output characters, optionally preceded by a \u201c>\u201d, \u201c=\u201d or \u201c<\u201d modifier.\n\u2022 If no width is provided, the number will be rendered in a string of the exact length required to represent the value (e.g., the number 1.23450 will return \u201c1.2345\u201d, a string of length 6).\n\u2022 If an unmodified width or one with the \u201c>\u201d modifier is provided, the specified number places a lower-bound on the width of the string: the output will be left-padded to the specified width, if necessary, otherwise the string will be lengthened to accommodate the full output. By default, padding will use spaces, but you may elect to use 0\u2019s by providing an advanced modifier ( \u201cModified Formats\u201d ).\n\u2022 If the\u201c<\u201d modifier is provided along with width , the width places an upper-bound on the width of the string: the output will not be padded to the specified width. If the number of output characters exceeds the width, EViews will return a width -length string filled with the \u201c#\u201d character.\n\u2022 If the\u201c=\u201d modifier is provided along with width , the width provides an exact-bound for the width of the string: the output will be padded to specified width, if necessary. If the number of characters exceeds the width, EViews will return a width- length string filled with the \u201c#\u201d character.\nIf you specify a precision , the interpretation of the value will vary depending on the format type. For example, precision represents the number of significant digits in the \u201cg\u201d and \u201cz\u201d formats, the number of characters in the \u201cc\u201d format, and the number of digits to the right of the decimal in the \u201cf\u201d, \u201ce\u201d, \u201cp\u201d, and \u201cs\u201d formats. For the \u201cr\u201d format, the precision determines maximum denominator for the fractional portion (as a power-of-10).\nThe following guidelines are used to determine the precision implied by a number format:\n\u2022 If you specify a format with only a precision specification, the precision will implicitly determine the width at which your numbers are written.\n\u2022 If you specify a format with only a width specification, the width will implicitly determine the precision at which your numbers are written. Bear in mind that only the modified width specifications \u201c= width \u201d and \u201c< width \u201d impose binding restrictions on the precision.\n\u2022 If you specify a format using both width and precision, the precision at which your numbers are written will be determined by whichever setting is most restrictive ( i.e ., \u201cf=4.8\u201d and \u201cf=4.2\u201d both imply a formatted number with two digits to the right of the decimal).)\nBasic Integer Formats\nThe basic integer format is:\n[type][<|=|>][width]\nThe type component is a single character indicating the basic type. The following types are for use with integer data:\n\ni integer h hexidecimal o octal b binary\nIf one of the integer formats is used with real-valued data, the non-integer portion of the number will be ignored. You may specify a width using the syntax and rules described in \u201cBasic Real-Value Formats\u201d .\nModified Formats\nRecall that the syntax of a numeric format string is given by:\n[type][t][+][(][$][#][<|=|>][0][width][[.|..]precision][%][)]\nIn addition to the basic type , width , and precision specifiers, the formats take a set of modifiers which provide you with additional control over the appearance of your output string:\n\u2022 You may combine any of the real-value format characters (\u201cg\u201d, \u201ce\u201d, \u201cf\u201d, etc. ) with the letter \u201ct\u201d (\u201cgt\u201d, \u201cet\u201d, \u201cft\u201d, etc. ) to display a thousands separator (\u201c1,234.56\u201d). By default, the separator will be a comma \u201c,\u201d, but the character may be changed to a \u201c.\u201d using the \u201c..\u201d format as described below.\n\u2022 You may add a \u201c+\u201d symbol after the format character (\u201cg+\u201d, \u201cet+\u201d, \u201ci+\u201d) to display positive numbers with a leading \u201c+\u201d.\n\u2022 To display negative numbers within parentheses, you should enclose the remaining portion of the format in parentheses \u201cft+($8.2)\u201d.\n\u2022 Add \u201c$\u201d to the format to display a leading \u201c$\u201d currency character.\n\u2022 You should include a \u201c#\u201d to display a trailing point in scientific notation ( e.g., \u201c3.e+34\u201d).\n\u2022 The width argument should include a leading zero (\u201c0\u201d) if you wish padded numbers to display leading zeros instead of spaces (\u201cg08.2\u201d, \u201ci05\u201d).\n\u2022 If you added a \u201ct\u201d character to your real-value format type , you may replace the usual \u201c.\u201d width - precision separator with \u201c..\u201d (\u201cft<08..2\u201d, \u201ce=7..\u201d, \u201cg..9\u201d, etc. ) to reverse the thousands and decimal separators so that thousands will be separated by a \u201c.\u201d and decimal portion by a \u201c,\u201d (\u201c1.234,56\u201d).\n\u2022 Adding a \u201c%\u201d character to the end of the format adds the \u201c%\u201d character to the end of the resulting string.\nExamples\nstring num = @str(1.23)\nassigns to the string NUM the text \u201c1.23\u201d.\nalpha alpha1 = @str(-123.88)\nassigns the string \u201c-123.88\u201d to the alpha series ALPHA1.\nstring num = @str(123456,\u201dz.9\u201d)\nreturns a string formatted to 9 significant digits with trailing zeros: \u201c123456.000\u201d.\nstring num = @str(123456,\u201dz.4\u201d)\nreturns a string formatted to 4 significant digits with trailing zeros: \u201c1.235e+05\u201d. Note that since the input number has more than 4 significant digits, no trailing zeros are added and the resulting string is identical to one that would have been produced with a \u201cg.4\u201d format.\nstring num = @str(126.543,\u201dc.7%\u201d)\nreturns a string with exactly 7 characters, including a leading space, and a trailing percent sign: \u201c 126.5%\u201d.\nstring num = @str(126.543,\"p.7\")\nconverts the number 126.543 into a percentage with 7 decimal places and returns \u201c12654.3000000\u201d. Note no percent sign is included in the string.\nstring num = @str(1.83542,\"f$5.4\")\nreturns \u201c$1.8354\u201d. The width selection of \u201c5\u201d with an implicit \u201c>\u201d modifier is irrelevant, since the precision setting of \u201c4\u201d, coupled with the insertion of the \u201c$\u201d symbol yields a string with more characters than \u201c5\u201d.\nstring num = @str(1.83542,\"f$8.4\")\nreturns \u201c $1.8354\u201d. Here the width selection is binding, and a leading space has been added to the string.\nstring num = @str(1.83542,\"f$=5.4\")\nreturns \u201c $1.84\u201d. The explicit \u201c=\u201d width modifier causes the width setting of \u201c5\u201d to be binding.\nstring num = @str(524.784,\"r\")\nconverts the number 524.784 into a ratio representation: \u201c524 98/125\u201d.\nstring num = @str(1784.321,\"r=3\")\nwill return \u201c###\u201d, since there is no way to represent 1784.321 as a string with only 3 characters.\nstring num = @str(543,\"b\")\nconverts the number 543 into a binary representation: \u201c1000011111\u201d.\nSee also @val to convert a string into a number."}, "@stripcommas": {"uri": "stringref-@stripcommas", "anchor": "", "usage": "Syntax: @stripcommas ( str )\nstr :\tstring\nReturn:\t\tstring", "description": "Remove leading and trailing commas surrounding string.", "long_description": "Returns the contents of the string str with leading and trailing commas (ignoring whitespace) stripped.\nLeading and trailing commas are always removed, even if unpaired. All whitespace characters up to the leading comma and whitespace characters after the trailing comma are also removed."}, "@stripparens": {"uri": "stringref-@stripparens", "anchor": "", "usage": "Syntax: @stripparens ( str )\nstr :\tstring\nReturn:\t\tstring", "description": "Remove paired leading and trailing parentheses surrounding string.", "long_description": "Returns the contents of the string str with parentheses (\u201c(\u00a0)\u201d) stripped from both the left and the right ends. If a parenthesis is present on only the left or right end, the parenthesis will be retained."}, "@stripquotes": {"uri": "stringref-@stripquotes", "anchor": "", "usage": "Syntax: @stripquotes ( str )\nstr :\tstring\nReturn:\t\tstring", "description": "Remove paired double-quotation marks surrounding string.", "long_description": "Returns the contents of the string str with double-quotation marks stripped from both the left and the right ends with leading and trailing whitespace ignored. If a double-quote is present on only the left or right end, the double-quote will be retained."}, "@strlen": {"uri": "stringref-@strlen", "anchor": "", "usage": "Syntax: @strlen ( str )\nstr :\tstring\nReturn:\t\tinteger", "description": "Length of string.", "long_description": "Returns the length of the string str ."}, "@strnow": {"uri": "stringref-@strnow", "anchor": "", "usage": "Syntax: @strnow ( fmt )\nfmt :\tdate format string\nReturn:\t\tstring", "description": "String representation of the current date and time.", "long_description": "Returns a string representation of the current date number (at the moment the function is evaluated) using the date format string, fmt .\nDate format syntax is outlined in \u201cDate Formats\u201d ."}, "@subextract": {"uri": "matrixref-@subextract", "anchor": "", "usage": "Syntax: @subextract ( m , n1, n2[, n3, n4] )\nm: matrix, vector, sym\nn1 :\tinteger\nn2 :\tinteger\nn3 :\t(optional) integer\nn4 :\t(optional) integer\nReturn:\t\tmatrix", "description": "Extract submatrix from matrix object.", "long_description": "Returns a submatrix of a specified matrix, m .\n\u2022 The required arguments n1 and n2 are the row and column of the upper left corner of the region to be extracted.\n\u2022 The optional arguments n3 and n4 provide the row and column of the lower right corner of the region to be extracted.\n\u2022 If n3 or n4 are not provided, the corresponding element will be the last row or column of the source matrix.\nNote that in some circumstances, you may find it easier to use the newer \u201c.sub\u201d, \u201c.row\u201d, and \u201c.col\u201d object data member functions. See \u201cMatrix Data Members\u201d \u201cSym Data Members\u201d and the examples below."}, "@sum": {"uri": "mathapp_cpr", "anchor": "ww200848", "usage": "@sum(x[,s])", "description": "sum"}, "@sumsq": {"uri": "mathapp_cpr", "anchor": "ww200858", "usage": "@sumsq(x[,s])", "description": "sum-of-squares"}, "@svd": {"uri": "matrixref-@svd", "anchor": "", "usage": "Syntax: @svd ( m1 , v1 , m2 )\nm1 :\tmatrix, sym", "description": "Singular value decomposition (economy) of matrix", "long_description": "v1 :\tvector [img:../content/images/matrixref.098.129.01.jpg]\nm2: matrix, sym [img:../content/images/matrixref.098.129.02.jpg]\nReturn:\t\tmatrix [img:../content/images/matrixref.098.129.03.jpg]\nPerforms an \u201ceconomy\u201d or \u201cthin\u201d singular value decomposition of the matrix m1 , generating truncated results when m1 is not square (exploiting the reduced maximum rank of a non-square matrix).\nThe matrix [img:../content/images/matrixref.098.129.04.jpg] is returned by the function, the vector v1 will be filled (resized if necessary) with the singular values and the matrix m2 will be assigned (resized if necessary) the other matrix, [img:../content/images/matrixref.098.129.05.jpg] , of the decomposition. The singular value decomposition satisfies:\n[img:../content/images/matrixref.098.129.06.jpg]\nwhere [img:../content/images/matrixref.098.129.07.jpg] is a diagonal matrix with the singular values along the diagonal. Singular values close to zero indicate that the matrix may not be of full rank. See the @rank function for a related discussion.\nLet r be the number of rows of m1 and s be the number of columns of m1 so that m1 has at most t = min(r, s) distinct singular values. Then\n\u2022 m2 will be s -by- t\n\u2022 v1 will be t -by- 1\n\u2022 [img:../content/images/matrixref.098.129.08.jpg] will have dimensions r -by- t"}, "@svdfull": {"uri": "matrixref-@svdfull", "anchor": "", "usage": "Syntax: @svdfull ( m1 , m2 , m3 )\nm1 :\tmatrix, sym\nm2 :\tmatrix\nm3: matrix, sym\nReturn:\t\tmatrix", "description": "Singular value decomposition (full) of matrix", "long_description": "Performs a singular value decomposition of the matrix m1 .\nThe matrix [img:../content/images/matrixref.098.130.01.jpg] is returned by the function, the matrix m2 will be assigned (resized if necessary) the matrix [img:../content/images/matrixref.098.130.02.jpg] , and the matrix m3 will be assigned (resized if necessary) the other matrix, [img:../content/images/matrixref.098.130.03.jpg] , of the decomposition. The singular value decomposition satisfies:\n[img:../content/images/matrixref.098.130.04.jpg]\nwhere [img:../content/images/matrixref.098.130.05.jpg] is a diagonal matrix with the singular values along the diagonal. Singular values close to zero indicate that the matrix may not be of full rank. See the @rank function for a related discussion."}, "@sweep": {"uri": "matrixref-@sweep", "anchor": "", "usage": "Syntax: @sweep ( s[ , n] )\ns :\tsym\nk :\tinteger\nk2 :\t(optional) integer\nReturn:\t\tmatrix\nSyntax: @sweep ( m, r, c )\nm :\tmatrix, sym\nr :\tinteger\nc :\tinteger\nReturn:\t\tmatrix", "description": "Sweep operator.", "long_description": "There are two syntaxes for @sweep, one for the symmetric, and the other for then non-symmetric operator.\nReturns the result of applying the symmetric sweep operator to symmetric matrix S at diagonal element k . If k2 is specified, sweeps on all diagonal elements between k and k2 , inclusive.\nReturns the result of applying the non-symmetric sweep operator to general matrix m at element ( r , c ).\nThe sweep operator is an elementary matrix row operation with particularly useful properties when applied to uncorrected sum of squares and cross-products (USSCP) matrices. Among these properties is the ability to calculate the coefficients for one or more regressions over a common set of regressors.\nLet [img:../content/images/matrixref.098.131.01.jpg] be an application of the symmetric sweep operator. Then, [img:../content/images/matrixref.098.131.02.jpg] , [img:../content/images/matrixref.098.131.03.jpg] where [img:../content/images/matrixref.098.131.04.jpg] , [img:../content/images/matrixref.098.131.05.jpg] where [img:../content/images/matrixref.098.131.06.jpg] , and\n[img:../content/images/matrixref.098.131.07.jpg]\nwhere [img:../content/images/matrixref.098.131.08.jpg] and [img:../content/images/matrixref.098.131.09.jpg] .\nLet [img:../content/images/matrixref.098.131.10.jpg] be an application of the non-symmetric sweep operator. Then, [img:../content/images/matrixref.098.131.11.jpg] , [img:../content/images/matrixref.098.131.12.jpg] where [img:../content/images/matrixref.098.131.13.jpg] , [img:../content/images/matrixref.098.131.14.jpg] where [img:../content/images/matrixref.098.131.15.jpg] , and\n[img:../content/images/matrixref.098.131.16.jpg]\nwhere [img:../content/images/matrixref.098.131.17.jpg] and [img:../content/images/matrixref.098.131.18.jpg] ."}, "@tablenames": {"uri": "progref-@tablenames", "anchor": "", "usage": "Syntax: @tablenames (\" str\" )\nArgument:\tstring, str\nReturn:\tstring, names", "description": "Returns a space delimited string containing the names of the table names of a foreign file. The name (and path) of the foreign file should be specified in str , enclosed in quotes. For an Excel file, the names of the Excel sheets will be returned."}, "@tan": {"uri": "mathapp_cpr", "anchor": "ww200872", "usage": "@tan(x)", "description": "tangent (argument in radians)"}, "@tdist": {"uri": "mathapp_cpr", "anchor": "ww200877", "usage": "@tdist(x,v)", "description": "t -distribution p -value"}, "@temppath": {"uri": "progref-@temppath", "anchor": "", "usage": "Syntax: @temppath\nReturn:\tstring", "description": "Returns a string containing the directory path for the EViews temporary files as specified in the global options File Locations.... menu ."}, "@theil": {"uri": "mathapp_cpr", "anchor": ""}, "@theil2": {"uri": "mathapp_cpr", "anchor": ""}, "@time": {"uri": "progref-@time", "anchor": "", "usage": "Syntax: @time\nReturn:\tstring", "description": "Returns a string containing the current time in \u201chh:mm\u201d format."}, "@toc": {"uri": "progref-@toc", "anchor": "", "usage": "Syntax: @toc\nReturn:\tinteger", "description": "Compute elapsed time (since timer reset) in seconds."}, "@trace": {"uri": "matrixref-@trace", "anchor": "", "usage": "Syntax: @trace ( m )\nm :\tmatrix, sym\nReturn:\t\tscalar", "description": "Returns the trace (the sum of the diagonal elements) of a square matrix or sym, m ."}, "@transpose": {"uri": "matrixref-@transpose", "anchor": "", "usage": "Syntax: @transpose ( m )\nm:\tmatrix, vector, rowvector, sym\nReturn:\t\tmatrix, rowvector, vector, sym", "description": "Transpose of a matrix object.", "long_description": "The result is a matrix object with the number of rows and columns and the element indices reversed from the original matrix. This function is an identity function for a sym, since a sym by definition is equal to its transpose."}, "@trendcoef": {"uri": "mathapp_cpr", "anchor": "ww204414", "usage": "@trendcoef(x[,s])", "description": "coefficient from OLS regression on a trend"}, "@trigamma": {"uri": "mathapp_cpr", "anchor": "ww200903", "usage": "@trigamma(x)", "description": "second derivative of the log gamma function"}, "@trim": {"uri": "stringref-@trim", "anchor": "", "usage": "Syntax: @trim ( str )\nstr :\tstring\nReturn:\t\tstring", "description": "Trim left and right whitespace.", "long_description": "Returns the string str with spaces trimmed from the left and the right."}, "@trmean": {"uri": "mathapp_cpr", "anchor": "ww204404", "usage": "@trmean(x,p[, s])", "description": "trimmed mean"}, "@trunc": {"uri": "mathapp_cpr", "anchor": ""}, "@tz": {"uri": "stringref-@tz", "anchor": "", "usage": "Syntax: @tz (( srctime, srctzone, destzone )\nsrctime :\tdate number\nsrctzone :\tstring\ndestzone :\tstring\nReturn:\t\tdate number", "description": "Convert time in source time zone to destination time.", "long_description": "Converts a point in time srctime from the source time zone srctzone into the corresponding time in the destination time zone destzone .\n\u2022 The srctzone and destzone strings can either contain raw time zone information in the format returned by @tzspec or they can contain search text (such as a city name) found within one of the time zone descriptions returned by the function @tzlist .\nExamples\nseries localtime = @tz(utctime, \"London\", \"Sydney\")\nconverts a series containing time values in London local time into equivalent local time values in Sydney."}, "@tzlist": {"uri": "stringref-@tzlist", "anchor": "", "usage": "Syntax: @tzlist\nReturn:\t\tstring", "description": "Available time zone specifications.", "long_description": "Returns a space delimited list of descriptions of all the time zones for which information is available on the current machine."}, "@tzspec": {"uri": "stringref-@tzspec", "anchor": "", "usage": "Syntax: @tzspec ( str )\nstr :\tstring\nReturn:\t\tstring\nstandard_utc_bias [daylight_offset daylight_start_rule daylight_end_rule]", "description": "Time zone specification.", "long_description": "Returns time zone information for the first time zone whose description contains the piece of text passed in as str .\ntr can be a city name such as \u201cLondon\u201d or \u201cTokyo\u201d or any other word from the time zone description such as \u201cEastern\u201d for the U.S. Eastern Time Zone.\nTime zone information specifications have the format:\nwhere:\n\u2022 standard_utc_bias is the offset (in +/\u2013 hh:mi format) of local time from UTC when daylight time is not in effect.\n\u2022 daylight_offset is the additional adjustment (in +/\u2013 hi:mi format) to the standard UTC bias when daylight time is in effect.\n\u2022 daylight_start_rule is the day/time when the daylight time adjustment begins. This can be an explicit date or a date rule.\n\u2022 daylight_end_rule is the day/time when the daylight time adjustment ends. This can be an explicit date or a date rule.\nIf there have been historical changes to the time zone rule, each era is returned beginning with an \u201c@\u201d symbol followed by the year in which the new rule took effect. The year may be dropped to indicate that the rule should be applied to all earlier dates.\nFor example, a historical description of the Pacific Time Zone (PT) description for parts of western Canada, the western United States, and western Mexico (valid from 1987 onwards) has the specification:\n@2007 -08:00 +01:00 Mar2Sun 2AM to Nov1Sun 2AM\n@ -08:00 +01:00 Apr1Sun 2AM to Oct-1Sun 2AM\nThe standard offset of the Pacific Time Zone from UTC is -8 hours. The daylight rule after 2007 has been to move clocks forward by one hour at 2AM on the second Sunday of March and move them back at 2AM on the first Sunday in November. Before 2007 the rule was to move clocks forward by one hour at 2AM on the first Sunday of April, and move them back at 2AM on the last Sunday in October."}, "@uidialog": {"uri": "progref-@uidialog", "anchor": "", "usage": "Syntax: @uidialog (control1_info[, control2_info, control3_info, ...])\nArguments:\tstring or scalar parameters, based on control type\nReturn:\tinteger", "description": "Displays a dialog with any number of controls that you define, including edit fields, listboxes, radio buttons, checkboxes, text, and captions. You may specify an combination of controls, and they will be arranged in the order they are entered. EViews attempts to lay the controls out in a visually pleasing manner, and will do its best to size and arrange the dialog accordingly.", "long_description": "Each control_info item is a specification of the control type in quotes (\u201cEdit\u201d), followed by the appropriate parameters. You may specify any combination of controls, where each should follow one of the following forms:\n\nEdit field \u201cEdit\u201d, IO_String, prompt_string[, max_edit_length] Listbox \u201cList\u201d, IO_StringOrScalar, prompt_string, list_string Radio buttons \u201cRadio\u201d, IO_Scalar, prompt_string, list_string Checkbox \u201cCheck\u201d, IO_Scalar, prompt_string Text \u201cText\u201d, text_string Caption \u201cCaption\u201d, caption_string Column break \u201cColbreak\u201d OK Button \u201cButton\u201d, button_string Cancel Button \u201cButtonc\u201d, button_string\nIn the above table, the parameters can be described as:\n\nIO_String string used to initialize an edit field and hold the final edit field text. IO_Scalar scalar used to initialize a radio or checkbox selection, and hold the final selection. IO_StringOrScalar string or scalar used to initialize a listbox selection, and hold the final selection. prompt_string string used as the label for the control, or the groupbox label for radio buttons. max_edit_length scalar for the maximum characters allowed in an edit field. list_string space delimited list of entries for a listbox or radio buttons. text_string text to be used in a text control. caption_string text to be used as the caption of the dialog in its titlebar. button_string text to be used on the button.\nNote that parameters whose names begin with \u201c IO_ \u201d, e.g. \u201c IO_String \u201d must be passed into the function using program variables or objects in the workfile, as they are used to return results.\nThe \u201cbutton\u201d and \u201cbuttonc\u201d controls add a custom button to the dialog. The dialog will close after a button has been pressed. The behavior of the button will depend on the type of button \u2014buttons of type \u201cbutton\u201d will behave in the same way as the \u201cOK\u201d button ( i.e. , all variables passed into the dialog will be updated to reflect changes made to their corresponding controls). Buttons of type \u201cbuttonc\u201d will behave in the same way as the \u201cCancel\u201d button ( i.e., all variables will be reset to the values that were passed into the dialog).\nThe return value of the dialog will correspond to the order in which buttons are placed in the dialog. If only one button (apart from the standard \u201cOK\u201d and \u201cCancel\u201d) is included in the dialog, the return value for that button will be \u201c1\u201d. If there is more than one button, then the first button will return a value of \u201c1\u201d, the second will return a value of \u201c2\u201d and so on. Note that the return value is independent of whether the button was of type \u201cbutton\u201d or \u201cbuttonc\u201d. The specification for the button controls is (\u201cbutton[c]\u201d, \u201c text \u201d) where text specifies the text that will be on the button."}, "@uiedit": {"uri": "progref-@uiedit", "anchor": "", "usage": "Syntax: @uiedit (IO_Editstring, prompt_string[, max_edit_len])\nArgument 1:\tstring, IO_Editstring\nArgument 2:\tstring, prompt_string\nArgument 3:\tinteger, max_edit_len\nReturn:\tinteger", "description": "Displays a dialog with an edit field and prompt string. IO_Editstring is used to initialize the edit field and will return the value after editing. Specify an IO_Editstring and prompt_string and optionally the maximum character length of the edit field. The default maximum length is 32 characters.", "long_description": "prompt_string may be specified using in-line text, but IO_Editstring must be either a program variable or an object in your workfile as it is used to return results.\nThe dialog shows an OK and Cancel button, and will return an integer representing the button clicked: Cancel (-1), OK (0)."}, "@uilist": {"uri": "progref-@uilist", "anchor": "", "usage": "Syntax: @uilist (IO_Selectitem, prompt_string, listbox_items)\nArgument 1:\tstring or scalar select_item\nArgument 2:\tstring, prompt_string\nArgument 3:\tstring, listbox_items\nReturn:\tinteger", "description": "Displays a dialog with a listbox and prompt string. Fill the listbox by specifying listbox_items , a space delimited list of items. prompt_string specifies the text to be used as a label for the listbox. Initialize the listbox selection with IO_Selectitem, which may be either a string or scalar, and which will return the selection value on exit of the dialog.", "long_description": "Both prompt_string and listbox_items may be specified using in-line text, but IO_Selectitem must be either a program variable or an object in your workfile as it is used to return results.\nThe dialog shows an OK and Cancel button, and will return an integer representing the button clicked: Cancel (-1), OK (0)."}, "@uimlist": {"uri": "progref-@uimlist", "anchor": "", "usage": "Syntax: @uimlist (IO_Selectitem, prompt_string, listbox_items)\nArgument 1:\tvector IO_ Select_item\nArgument 2:\tstring, prompt_string\nArgument 3:\tstring, listbox_items\nReturn:\tinteger", "description": "Displays a dialog with a multiple-select listbox and prompt string. Fill the listbox by specifying listbox_items , a space delimited list of items. prompt_string specifies the text to be used as a label for the listbox. Initialize the listbox selection with workfile vector object IO_Selectitem, which will return the selection values on exit of the dialog.", "long_description": "Both prompt_string and listbox_items may be specified using in-line text, but IO_Selectitem must be either a program variable or an object in your workfile as it is used to return results.\nThe dialog shows an OK and Cancel button, and will return an integer representing the button clicked: Cancel (-1), OK (0)."}, "@uiprompt": {"uri": "progref-@uiprompt", "anchor": "", "usage": "Syntax: @uiprompt (msg_string[, button_type, beep_type])\nArgument 1:\tstring, msg_string\nArgument 2:\tstring, button_type\nArgument 3:\tstring, beep_type\nReturn:\tinteger", "description": "Displays a prompt dialog with OK, Cancel, or Yes and No buttons. You must specify a message string for the prompt dialog, and optionally the type of icon and buttons the dialog should display. You may also instruct the message box to issue a beep when displayed.", "long_description": "The dialog will return an integer representing the button clicked: Cancel (-1), OK (0), Yes (1), or No (2).\nbutton_type can be one of the following keywords:\n\n\u201cO\u201d Exclamation icon with OK button (default). \u201cOC\u201d Exclamation icon with OK and Cancel buttons. \u201cYN\u201d Question icon with Yes and No buttons. \u201cYNC\u201d Question icon with Yes, No, and Cancel buttons.\nbeep_type can be one of the following keywords. The keywords change the type of beep that is omitted, where those beeps are defined by the Windows operating system definitions. If beep_type is omitted, no beep will be issued.\n\n\u201cB\u201d Base type of beep on button_type \u201cAB\u201d Asterisk beep \u201cCB\u201d Critical stop / error beep \u201cQB\u201d Question beep \u201cEB\u201d Exclamation beep \u201cDB\u201d Default beep"}, "@uiradio": {"uri": "progref-@uiradio", "anchor": "", "usage": "Syntax: @uiradio (IO_Selectitem, groupbox_label, radio_items)\nArgument 1:\tscalar, select_item\nArgument 2:\tstring, groupbox_label\nArgument 3:\tstring, radio_items\nReturn:\tinteger", "description": "Displays a dialog with a series of radio buttons. Create the radio buttons by specifying radio_items , a space delimited list of items. You should initialize the selection and retrieve the result with IO_Selectitem . The groupbox_label specifies the label for the groupbox that will appear around the radio buttons.", "long_description": "Both prompt_string and listbox_items may be specified using in-line text, but IO_Selectitem must be either a program variable or an object in your workfile as it is used to return results.\nThe dialog shows an OK and Cancel button, and will return an integer representing the button clicked: Cancel (-1), OK (0)."}, "@uniquevals": {"uri": "matrixref-@uniquevals", "anchor": "", "usage": "Syntax: @uniquevals ( m )\nm :\tmatrix, vector, svector\nReturn:\t\tvector, svector", "description": "Vector or svector of unique values of object.", "long_description": "Returns a vector or svector containing the list of unique values in the object specified by m .\n\u2022 If m is a vector or matrix, @uniquevals will return a vector object containing the unique elements of the svector or matrix.\n\u2022 If m is an svector, @uniquevals will return an svector of the unique values in m ."}, "@unitvector": {"uri": "matrixref-@unitvector", "anchor": "", "usage": "Syntax: @unitvector ( n1 , n2 )\nn1 :\tinteger\nn2 :\tinteger\nReturn:\t\tvector", "description": "Creates an n1 element vector with a 1 in the n2 -th element, and 0 elsewhere."}, "@unvec": {"uri": "matrixref-@unvec", "anchor": "", "usage": "Syntax:\t\t@unvec( v, n )\nv :\tvector\nn :\tinteger\nReturn:\t\tmatrix", "description": "Unstack vector into a matrix.", "long_description": "Creates an n -row matrix filled with the unstacked elements of the vector v . EViews will report a size mismatch if the number of elements of v is not evenly divisible by n.\nNote that @unvec is the inverse of the @vec function."}, "@unvech": {"uri": "matrixref-@unvech", "anchor": "", "usage": "Syntax: @unvech ( v )\nv :\tvector\nReturn:\t\tsym", "description": "Unstack vector into lower triangle of sym.", "long_description": "Creates a sym matrix with lower triangle filled using the unstacked elements of the vector v . The sym will be sized automatically. EViews will report a size mismatch if the number of elements of v does not correspond to a valid sym matrix size (is not a triangular number).\nNote that @unvech is the inverse of the @vech function."}, "@upper": {"uri": "stringref-@upper", "anchor": "", "usage": "Syntax: @upper ( str )\nstr :\tstring\nReturn:\t\tstring", "description": "Uppercase string.", "long_description": "Returns the upper representation of the string str ."}, "@utc": {"uri": "stringref-@utc", "anchor": "", "usage": "Syntax: @utc ( localtime[, timezone ] )\nlocaltime :\tdate number\ntimezone :\t(optional) string\nReturn:\t\tdate number", "description": "Convert local time to UTC (Coordinated Universal Time).", "long_description": "Returns the Coordinated Universal Time (UTC) value for a point in time input using a local time zone value.\n\u2022 If timezone is not provided, the current Windows time zone setting is used as the local time zone target.\n\u2022 If timezone is provided, the timezone string can either contain raw time zone information in the format returned by @tzspec or it can contain search text (such as a city name) found within one of the time zone descriptions returned by the function @tzlist ."}, "@val": {"uri": "stringref-@val", "anchor": "", "usage": "Syntax: @val ( arg[, fmt] )\narg :\tstring\nfmt :\t(optional) numeric format string\nReturn:\t\tscalar", "description": "Number from a string.", "long_description": "Returns the number that string arg represents. You may provide an optional numeric format string fmt .\nIn most cases, EViews will be able to convert your string into the corresponding numeric value without additional input. If EViews is unable to perform a conversion, it will return a missing (NA) value.\nThere are a few important conventions used in the conversion process:\n\u2022 A leading \u201c$\u201d in the string will be ignored.\n\u2022 Strings enclosed in \u201c(\u00a0)\u201d or with a leading \u201c\u2013\u201d will be treated as negative numbers. All other numeric strings, including those with a leading \u201c+\u201d will be treated as positive numbers. You may not have a leading \u201c+\u201d or \u201c\u2013\u201d inside of the parentheses.\n\u2022 A trailing \u201c%\u201d sign instructs EViews to treat the input string as a percentage\u2014the resulting value will be divided by 100.\nThere are some situations where you must provide a numeric format string so that EViews can properly interpret your input. The syntax for the format string depends on the type of number the string represents.\nReal-Value Formats\nEViews will properly interpret non-delimited decimal and scientific notation numeric input strings as numbers.\nIf your string uses \u201c,\u201d to separate thousands, you should specify the \u201ct\u201d format string to remove \u201c,\u201d delimiters prior to conversion. If the string uses \u201c.\u201d to separate thousands, you should use \u201ct..\u201d to instruct EViews to remove \u201c.\u201d delimiters.\nIf your input string represents a number with suppressed decimal format, you should include a format string beginning with the letter \u201cs\u201d:\n\ns .precision suppressed decimal point format (precision determines the number of digits to the right of the decimal)\nEViews will divide the resulting number by 10 raised to the power of the specified precision . The \u201cs\u201d format specification may be followed by a \u201ct.\u201d or a \u201ct..\u201d specification if necessary.\nInteger Formats\n\nr ratio ( e.g., \u201c30 1/5\u201d). i integer h hexadecimal o octal b binary\nYou should use the \u201cr\u201d, \u201ch\u201d, \u201co\u201d, or \u201cb\u201d formats to indicate that your input is in the specified format. The \u201ci\u201d format is generally not necessary unless you wish to produce a missing value for a non-integer input string."}, "@var": {"uri": "mathapp_cpr", "anchor": "ww200927", "usage": "@var(x[,s])", "description": "population variance"}, "@varp": {"uri": "mathapp_cpr", "anchor": "ww200932", "usage": "@varp(x[,s])", "description": "population variance"}, "@vars": {"uri": "mathapp_cpr", "anchor": "ww200945", "usage": "@vars(x[,s])", "description": "sample variance"}, "@vcat": {"uri": "matrixref-@vcat", "anchor": "", "usage": "Syntax: @vcat ( m1 , m2[, m3, ...] )\nm# :\tmatrix, vector, svector or sym\nReturn:\t\tmatrix", "description": "Vertically concatenate matrices.", "long_description": "Performs vertical concatenation of two matrix objects. Each of the m# must have the same number of columns.\nThe result will have the sum of the number of rows and the same number of columns as the m#.\nFor example, if m1 is a matrix with m rows and k columns, and m2 is a matrix with n rows and k columns, then @vcat will return a matrix with ( m + n ) rows and k columns."}, "@vec": {"uri": "matrixref-@vec", "anchor": "", "usage": "Syntax: @vec ( m )\nm :\tmatrix, sym\nReturn:\t\tvector", "description": "Vectorize (stack columns of) matrix.", "long_description": "Creates a vector from the columns of the given matrix stacked one on top of each other. The vector will have the same number of elements as the source matrix."}, "@vech": {"uri": "matrixref-@vech", "anchor": "", "usage": "Syntax: @vech ( m )\nm :\tmatrix, sym\nReturn:\t\tvector", "description": "Vectorize (stack columns of) lower triangle of matrix.", "long_description": "Creates a vector from the columns of the lower triangle of the source square matrix m stacked on top of each another.\nThe vector has the same number of elements as the source matrix has in its lower triangle."}, "@vernum": {"uri": "progref-@vernum", "anchor": "", "usage": "Syntax: @vernum\nReturn:\tscalar", "description": "returns a scalar containing the EViews version number."}, "@verstr": {"uri": "progref-@verstr", "anchor": "", "usage": "Syntax: @verstr\nReturn:\tstring", "description": "returns a string containing the EViews product name string (e.g. \u201cEViews Enterprise Edition\u201d)."}, "@wcount": {"uri": "stringref-@wcount", "anchor": "", "usage": "Syntax: @wcount ( str_list )\nstr_list :\tstring\nReturn:\t\tinteger", "description": "Number of word elements.", "long_description": "Returns the number of word elements in the string list.\nExample:\nThe commands\nstring s1 = \"I did not do it\"\n@wcount(\"I did not do it\")\n@wcount(s1)\nreturn the number 5.\nIf ALPHA1 is an alpha series,\nscalar alphalwr = @wcount(alpha1)\nreturns the number of words in the strings in ALPHA1 for each observation in the workfile sample.\nIf SVEC1 is an string vector,\nvector sveclen = @wcount(svec1)\nreturns a the number of elements in each of the strings in SVEC1."}, "@wcross": {"uri": "stringref-@wcross", "anchor": "", "usage": "Syntax: @wcross ( str_list1 , str_list2[ , pattern] )\nstr_list1 :\tstring\nstr_list2 :\tstring\npattern :\tstring\nReturn:\t\tstring list", "description": "Returns str_list1 crossed with str_list2, using the string pattern. The default pattern is \u201c??\u201d, which indicates that each element of str_list1 should be crossed individually with each element of str_list2."}, "@wdelim": {"uri": "stringref-@wdelim", "anchor": "", "usage": "Syntax: @wdelim ( str_list, src_delim , dest_delim )\nstr_list :\tstring\nsrc_delim string\ndst_delim string\nReturn:\t\tstring", "description": "Replace delimiters.", "long_description": "Returns a string list, replacing every appearance of the src_delim delimiter in str_list with a dst_delim delimiter. Delimiters must be single characters.\nNote that most other string list functions (those beginning with \u201c@w\u201d) require that the delimiter be a space (\u201c\u00a0\u201d). Use this function to convert strings with other delimiters into those which can be used with the string list functions."}, "@wdir": {"uri": "progref-@wdir", "anchor": "", "usage": "Syntax:\t@wdir( directory_str , return_type )\nArgument 1:\tstring list, directory_str\nArgument 2:\tstring, return_type (optional)\nReturn:\tstring list", "description": "The return_type may be one of the following:", "long_description": "\n\u201cf\u201d (default=\u201df\u201d) Return the list of files in the directory_str directory. \u201cd\u201d Return the list of directories in the directory_str directory. \u201cfd\u201d Return the list of files and directories in the directory_str directory. Note: directories will be denoted with a trailing \\.\nReturns a string list of all files/directories in the directory directory_str."}, "@wdrop": {"uri": "stringref-@wdrop", "anchor": "", "usage": "Syntax: @wdrop ( str_list , pat_list )\nstr_list :\tstring\npat_list :\tstring\nReturn:\t\tstring", "description": "Drop words from string list.", "long_description": "Returns a string list, dropping elements in str_list that match the string pattern pat_list . The pat_list is space delimited and may be made up of any number of \u201c?\u201d (indicates any single character) or \u201c*\u201d (indicates any number of characters).\nThe pattern is case-sensitive and must exactly match the str_list characters to be dropped."}, "@wexpand": {"uri": "expression-@wexpand", "anchor": "", "usage": "@wexpand ( ser1[, ser2, ser3, ...][, \u201csample string\u201d] ))", "description": "", "long_description": "String list containing automatic dummy variable expressions.\nReturn the string list associated with automatically created dummy variables from numeric or alpha series.\nreturns the string corresponding to the set of dummy variables that span the unique values of the input series ser1 , ser2 , etc. These may be numerical series with integer only values, alpha series or links."}, "@wfattrnames": {"uri": "progref-@wfattrnames", "anchor": "", "usage": "Syntax: @wfattrnames ( attribute_pattern_list[, name_pattern_list, page_name_list, attribute_search_options ])\nArgument1:\tpattern string list, attribute_pattern_list\nArgument2:\tpattern string list, name_pattern_list\nArgument3:\tstring list, page_name_list\nArgument4:\tint, attribute_search_options\nReturn:\tstring list", "description": "The attribute_search_options is an integer value indicating how a \u201c*\u201d in the attribute_pattern should be treated when matching. Use \u201c0\u201d to treat \u201c*\u201d as a wildcard and \u201c1\u201d to treat \u201c*\u201d as a literal. The default is \u201c0\u201d.", "long_description": "Returns a string list of all attribute names that satisfy the attribute_pattern_list and, optionally, the object name_pattern_list and page_name_list . The attribute_pattern_list may be made up of any number of \u201c?\u201d (indicates any single character) or \u201c*\u201d (indicates any number of characters). If a page_name_list is not specified the current workfile page is used."}, "@wfattrvals": {"uri": "progref-@wfattrvals", "anchor": "", "usage": "Syntax: @wfattrvals ( attribute_pattern_list[, name_pattern_list, page_name_list, attribute_search_options ])\nArgument1:\tpattern string list, attribute_pattern_list\nArgument2:\tpattern string list, name_pattern_list\nArgument3:\tstring list, page_name_list\nArgument4:\tint, attribute_search_options\nReturn:\tstring list", "description": "The attribute_search_options is an integer value indicating how a \u201c*\u201d in the attribute_pattern should be treated when matching. Use \u201c0\u201d to treat \u201c*\u201d as a wildcard and \u201c1\u201d to treat \u201c*\u201d as a literal. The default is \u201c0\u201d.", "long_description": "Returns a string list of all attribute values that satisfy the attribute_pattern_list and, optionally, the object name_pattern_list and page_name_list . The attribute_pattern_list may be made up of any number of \u201c?\u201d (indicates any single character) or \u201c*\u201d (indicates any number of characters). If a page_name_list is not specified the current workfile page is used."}, "@wfind": {"uri": "stringref-@wfind", "anchor": "", "usage": "Syntax: @wfind ( str_list , str_cmp )\nstr_list :\tstring\nstr_cmp: string\nReturn:\t\tinteger", "description": "Find word (case-sensitive) in string list.", "long_description": "Looks for the string str_cmp in the string list str_list, and returns the position in the list or 0 if the string is not in the list.\n\u2022 This function is case-sensitive; use the @wfindnc function to ignore case.\n\u2022 Note that this function works only on single words; for multiple or parts of words, use @instr ."}, "@wfindnc": {"uri": "stringref-@wfindnc", "anchor": "", "usage": "Syntax: @wfindnc ( str_list , str_cmp )\nstr_list :\tstring\nstr_cmp: string\nReturn:\t\tinteger", "description": "Find word (case-insensitive) in string list.", "long_description": "Looks for the string str_cmp in the string list str_list, and returns the position in the list or 0 if the string is not in the list.\n\u2022 This function is similar to the @wfind function, but is not case-sensitive\n\u2022 Note that this function works only on single words; for multiple or parts of words, use @instr ."}, "@wfname": {"uri": "mathapp_cpr", "anchor": "ww200982", "usage": "@wfname", "description": "returns a string containing the current default workfile name."}, "@wfpath": {"uri": "mathapp_cpr", "anchor": "ww200986", "usage": "@wfpath", "description": "returns a string containing the current default workfile path."}, "@winterleave": {"uri": "stringref-@winterleave", "anchor": "", "usage": "Syntax: @winterleave ( str_list1 , str_list2[ , n1 , n2] )\nstr_list1 :\tstring\nstr_list2 :\tstring\nn1 :\t(optional) integer\nn2 :\t(optional) integer\nReturn:\t\tstring", "description": "Interleave words in two string lists.", "long_description": "Interleaves str_list1 with str_list2, according to the pattern specified by n1 and n2. The default uses counts of one."}, "@wintersect": {"uri": "stringref-@wintersect", "anchor": "", "usage": "Syntax: @wintersect ( str_list1 , str_list2 )\nstr_list1 :\tstring\nstr_list :2\tstring\nReturn:\t\tstring", "description": "Intersection of words in two string lists.", "long_description": "Returns the elements that are in both str_list1 and str_list2 . This function is case-sensitive.\n"}, "@wjoin": {"uri": "stringref-@wjoin", "anchor": "", "usage": "Syntax: @wjoin ( svec )\nsvec :\tsvector\nReturn:\t\tstring", "description": "Svector to string.", "long_description": "Returns a space delimited list containing the elements of svec ."}, "@wkeep": {"uri": "stringref-@wkeep", "anchor": "", "usage": "Syntax: @wkeep ( str_list , pat_list )\nstr_list :\tstring\npat_list :\tstring\nReturn:\t\tstring", "description": "Keep words in string list.", "long_description": "Returns the list of elements in str_list that match the string pattern pat_list . The pat_list is space delimited and may be made up of any number of \u201c?\u201d (indicates any single character) or \u201c*\u201d (indicates any number of characters).\nThe pattern is case-sensitive and must exactly match the str_list characters to be kept."}, "@wleft": {"uri": "stringref-@wleft", "anchor": "", "usage": "Syntax: @wleft ( str_list , n )\nstr_list :\tstring\nn :\tinteger\nReturn:\t\tstring", "description": "Left-most words of string list.", "long_description": "Returns a string list containing the left n word elements of string list str_list . If the string list str_list is shorter than n elements, this function returns all of the elements in the source string."}, "@wlookup": {"uri": "progref-@wlookup", "anchor": "", "usage": "Syntax:\t@wlookup( name_pattern_list[ , object_type_list, attribute_pattern, attribute_search_options] )\nArgument 1:\tstring list, name_pattern_list\nArgument 2:\tstring list, object_type_list\nArgument 3:\tstring list, attribute_pattern\nArgument 4:\tint, attribute_search_options\nReturn:\tstring list", "description": "Returns a string list of all objects in the workfile or database that satisfy the pattern_list and, optionally, the object_type_list , attribute_pattern, or attribute_search_options .", "long_description": "The name_ pattern_list may be made up of any number of \u201c?\u201d (indicates any single character) or \u201c*\u201d (indicates any number of characters) name patterns separated by spaces. The pattern must exactly match the object name in the workfile or database.\nThe object_type_list is a space delimited list containing one or more object types. The default is \u201c*\u201d. Object types are \"*\", \"SAMPLE\", \"SVECTOR\", \"EQUATION\", \"GRAPH\", \"TABLE\", \"TEXT\", \"PROGRAM\", \"MODEL\", \"SYSTEM\", \"VAR\", \"STRING\", \"POOL\", \"SSPACE\", \"LOGL\", \"ALPHA\", \"VALMAP\", \"FACTOR\", \"SPOOL\", \"GRAPH\", \"USEROBJ\", \"GROUP+DATA\", \"GROUP\", \"SCALAR\", \"MAT/VEC/SYM\", \"COEFLIST\",\"GROUP\", \"MATVECLIST\", \"SYM\", \"MATRIX\", \"VECTOR\", \"COEF\", \"SERIES\", \"LINK\", \"DIGRAPH\", \"GEOMAP\", \"STRING\", \"FORMULA\", \"DATABASE\", and \"WORKFILE\".\nThe attribute_pattern is a space delimited list of attribute=attribute_value patterns. The default is \u201c\u201d.\nThe attribute_search_options is an integer value indicating how a \u201c*\u201d in the attribute_pattern should be treated when matching. Use \u201c0\u201d to treat \u201c*\u201d as a wildcard and \u201c1\u201d to treat \u201c*\u201d as a literal. The default is \u201c0\u201d.\nNOTE: when specifying an optional argument, the preceeding optional argument(s) must also be specified. For example, if an attribute_search_option is specified, object_type_list and attribute_pattern must also be specified."}, "@wmid": {"uri": "stringref-@wmid", "anchor": "", "usage": "Syntax: @wmid ( str_list , n1[, n2] )\nstr_list :\tstring\nn1 :\tinteger\nn2 :\t(optional) integer\nReturn:\t\tstring", "description": "Middle words of a string list.", "long_description": "Returns n2 elements from str_list , starting at element n1 and continuing to the right for n2 elements. If you omit n2 , the function will return all of the remaining elements in the string."}, "@wnotin": {"uri": "stringref-@wnotin", "anchor": "", "usage": "Syntax: @wnotin ( str_list1 , str_list2 )\nstr_list1 :\tstring\nstr_list2 :\tstring\nReturn:\t\tstring", "description": "Remove words from string list.", "long_description": "Returns elements of str_list1 that are not in str_list2 . This function is case-sensitive."}, "@word": {"uri": "stringref-@word", "anchor": "", "usage": "Syntax: @word ( str_list , n )\nstr_list :\tstring\nn :\tinteger\nReturn:\t\tstring", "description": "Word from string list.", "long_description": "Returns the n -th element from the string list str_list , not including surrounding double-quotes. This function is the same as the @wordq function, but removes quotes."}, "@wordq": {"uri": "stringref-@wordq", "anchor": "", "usage": "Syntax: @wordq ( str_list , n )\nstr_list :\tstring\nn :\tinteger\nReturn:\t\tstring", "description": "Word from string list, preserving quotes.", "long_description": "Returns the n -th element from the string list str_list , retaining surrounding double-quotes. This function is the same as the @word function, but preserving quotes."}, "@wquery": {"uri": "progref-@wquery", "anchor": "", "usage": "Syntax:\t@wquery( database, search_expression\u00ad, [attribute_list] )\nArgument 1:\tdatabase name, pattern_list\nArgument 2:\tdatabase query expression, search_expression\nArgument 3:\tobject attribute list, attribute_list\nReturn:\tstring list", "description": "Returns a string list of object attributes for all objects in the database that satisfy the query specified by search_expression . The search_expression should be a standard database query .", "long_description": "By default @wquery will return the names of the objects in the database that match the search criteria. However you may specify other object attributes to be returned, by listing them (comma delimited) in attribute_list ."}, "@wread": {"uri": "progref-@wread", "anchor": "", "usage": "Syntax:\t@wread( \u201cfile\u201d )\nArgument 1:\tfile name of a text file on disk.\nReturn:\tstring", "description": "Returns a string containing the contents of the specified text file on disk. Note that any line breaks in the text file will be removed."}, "@wreplace": {"uri": "stringref-@wreplace", "anchor": "", "usage": "Syntax: @wreplace ( str1 , src_pat , rep_pat[, \" all \" ])\nstr_list :\tstring\nsrc_pat: string\nrep_pat: string\n\" all \":\t(optional) string literal\nReturn:\t\tstring", "description": "Replace characters in each word in a string list.", "long_description": "Replaces instances of str_list in str_list with rep_pat . The patterns may be made up of any number of \u201c?\u201d (indicates any single character) or \u201c*\u201d (indicates any number of characters).\nThe pattern is case-sensitive and must exactly match the src_pat characters to be replaced.\nOnly the first instance of src_pat within each word of str_list is replaced unless the optional flag \u201call\u201d is specified (enclosed in quotes), in which case all instances within each word are replaced."}, "@wright": {"uri": "stringref-@wright", "anchor": "", "usage": "Syntax: @wright ( str_list , n )\nstr_list :\tstring\nn :\tinteger\nReturn:\t\tstring", "description": "Right-most words of a string list.", "long_description": "Returns a string list containing the right n word elements of string list str_list . If the string list str_list is shorter than n elements, this function returns all of the elements in the source string."}, "@wsort": {"uri": "stringref-@wsort", "anchor": "", "usage": "Syntax: @wsort ( str_list[ , \u201cd\u201d ] )\nstr_list :\tstring\n\u201cd\u201d :\t(optional) string literal\nReturn:\t\tstring", "description": "Sorted list of words in string.", "long_description": "Returns sorted elements of str_list . Use the \u201cd\u201d flag to sort in descending order."}, "@wsplit": {"uri": "stringref-@wsplit", "anchor": "", "usage": "Syntax: @wsplit ( str_list )\nstr_list :\tstring\nReturn:\t\tsvector", "description": "Create string vector from words of string list.", "long_description": "Returns an svector containing the elements of str_list ."}, "@wunion": {"uri": "stringref-@wunion", "anchor": "", "usage": "Syntax: @wunion ( str_list1 , str_list2 )\nstr_list1 :\tstring\nstr_list 2:\tstring\nReturn:\t\tstring", "description": "Union of words in two string lists.", "long_description": "Returns the elements that are in either str_list1 and str_list2 . This function is case-sensitive."}, "@wunique": {"uri": "stringref-@wunique", "anchor": "", "usage": "Syntax: @wunique ( str_list )\nstr_list :\tstring\nReturn:\t\tstring", "description": "Remove duplicate words in string list.", "long_description": "Returns str_list with duplicate elements removed from the list. This function is case-sensitive."}, "@xgetnum": {"uri": "progref-@xgetnum", "anchor": "", "usage": "Syntax:\t@xgetnum( string )\nArgument 1:\tstring\nReturn:\tscalar", "description": "Returns a scalar from the external application. Similar to XGET but does not require a workfile object to store the value."}, "@xgetstr": {"uri": "progref-@xgetstr", "anchor": "", "usage": "Syntax:\t@xgetstr( string )\nArgument 1:\tstring\nReturn:\tstring", "description": "Returns a string from the external application. Similar to XGET but does not require a workfile object to store the value."}, "@xtype": {"uri": "progref-@xtype", "anchor": "", "usage": "Syntax: @xtype\nReturn:\t\tstring", "description": "Type of external connection.", "long_description": "Returns the string describing the type of the active external application:\n\u2022 R connections return \u201crconn\u201d.\n\u2022 Matlab returns \u201cm\u201d.\n\u2022 Python returns \u201cpyconn\u201d.\nReturns an empty string if no external connection is active."}, "@xvernum": {"uri": "progref-@xvernum", "anchor": "", "usage": "Syntax:\t@xgetstr( string )\nReturn:\tscalar", "description": "Returns the external application version number as a number."}, "@xverstr": {"uri": "progref-@xverstr", "anchor": "", "usage": "Syntax:\t@xverstr\nReturn:\tstring", "description": "Returns the external application version number as a string."}, "abs": {"uri": "mathapp_cpr", "anchor": "ww199198", "usage": "@abs( x ), abs( x )", "description": "absolute value"}, "and": {"uri": "mathapp_cpr", "anchor": "ww199212", "usage": "and", "description": "logical and"}, "nrnd": {"uri": "mathapp_cpr", "anchor": "ww200307", "usage": "nrnd", "description": "normal random number generator"}, "or": {"uri": "mathapp_cpr", "anchor": "ww200334", "usage": "or", "description": "logical or"}, "then": {"uri": "mathapp_cpr", "anchor": ""}}, "Operators": {"[Operators]": {"uri": "mathapp-Operator_and_Function_Reference", "anchor": ""}, "@abs": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww131108", "usage": "@abs(x) , abs(x)", "description": "absolute value", "long_description": "@abs(-3)=3."}, "@acos": {"uri": "mathapp-Trigonometric_Functions", "anchor": "ww145703", "usage": "@acos(x)", "description": "arc cosine (real results in radians)", "long_description": "[img:../content/images/mathapp.093.13.1.jpg]"}, "@asin": {"uri": "mathapp-Trigonometric_Functions", "anchor": "ww132896", "usage": "@asin(x)", "description": "arc sine (real results in radians)", "long_description": "[img:../content/images/mathapp.093.13.2.jpg]"}, "@atan": {"uri": "mathapp-Trigonometric_Functions", "anchor": "ww132906", "usage": "@atan(x)", "description": "arc tangent (results in radians)", "long_description": "[img:../content/images/mathapp.093.13.3.jpg]"}, "@beta": {"uri": "mathapp-Special_Functions", "anchor": "ww132611", "usage": "@beta(a,b)", "description": "beta integral (Euler integral of the second kind): [img:../content/images/mathapp.093.12.01.jpg] for [img:../content/images/mathapp.093.12.02.jpg] ."}, "@betainc": {"uri": "mathapp-Special_Functions", "anchor": "ww132624", "usage": "@betainc(x,a,b[,n])", "description": "incomplete beta integral: [img:../content/images/mathapp.093.12.03.jpg] for [img:../content/images/mathapp.093.12.04.jpg] and [img:../content/images/mathapp.093.12.05.jpg] ."}, "@betaincder": {"uri": "mathapp-Special_Functions", "anchor": "ww132642", "usage": "@betaincder(x,a,b,s)", "description": "derivative of the incomplete beta integral: evaluates the derivatives of the incomplete beta integral [img:../content/images/mathapp.093.12.06.jpg] , where [img:../content/images/mathapp.093.12.07.jpg] is an integer from 1 to 9 corresponding to the desired derivative: [img:../content/images/mathapp.093.12.08.jpg]"}, "@betaincinv": {"uri": "mathapp-Special_Functions", "anchor": "ww132658", "usage": "@betaincinv(p,a,b)", "description": "inverse of the incomplete beta integral: returns an [img:../content/images/mathapp.093.12.09.jpg] satisfying: [img:../content/images/mathapp.093.12.10.jpg] for [img:../content/images/mathapp.093.12.11.jpg] and [img:../content/images/mathapp.093.12.12.jpg] ."}, "@betalog": {"uri": "mathapp-Special_Functions", "anchor": "ww132677", "usage": "@betalog(a,b)", "description": "natural logarithm of the beta integral: [img:../content/images/mathapp.093.12.13.jpg] ."}, "@binom": {"uri": "mathapp-Special_Functions", "anchor": "ww132686", "usage": "@binom(n,x)", "description": "binomial coefficient: [img:../content/images/mathapp.093.12.14.jpg] for [img:../content/images/mathapp.093.12.15.jpg] and [img:../content/images/mathapp.093.12.16.jpg] positive integers, [img:../content/images/mathapp.093.12.17.jpg] ."}, "@binomlog": {"uri": "mathapp-Special_Functions", "anchor": "ww132705", "usage": "@binomlog(n,x)", "description": "natural logarithm of the binomial coefficient: [img:../content/images/mathapp.093.12.18.jpg]"}, "@bounds": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww154327", "usage": "@bounds(x,y,z)", "description": "boundary values", "long_description": "returns [img:../content/images/mathapp.093.04.01.jpg] if [img:../content/images/mathapp.093.04.02.jpg] is between [img:../content/images/mathapp.093.04.03.jpg] and [img:../content/images/mathapp.093.04.04.jpg] and the boundary values [img:../content/images/mathapp.093.04.05.jpg] and [img:../content/images/mathapp.093.04.06.jpg] otherwise"}, "@bridge": {"uri": "mathapp-Time_Series_Functions", "anchor": "ww156033", "usage": "@bridge(s)", "description": "imputes NAs in s .", "long_description": "Returns a copy of series s with NAs replaced by the nearest preceding non-NA value. This function is panel aware."}, "@cbeta": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww132999", "description": "Beta", "usage": "@cbeta(x,a,b[,n]) , @dbeta(x,a,b) , @qbeta(p,a,b) , @rbeta(a,b)", "long_description": "[img:../content/images/mathapp.093.14.04.jpg] for [img:../content/images/mathapp.093.14.05.jpg] and for [img:../content/images/mathapp.093.14.06.jpg] , where [img:../content/images/mathapp.093.14.07.jpg] is the @beta function."}, "@cbinom": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133019", "description": "Binomial", "usage": "@cbinom(x,n,p) , @dbinom(x,n,p) , @qbinom(s,n,p) , @rbinom(n,p)", "long_description": "[img:../content/images/mathapp.093.14.08.jpg] if [img:../content/images/mathapp.093.14.09.jpg] , and 0 otherwise, for [img:../content/images/mathapp.093.14.10.jpg] ."}, "@cchisq": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133036", "description": "Chi-square", "usage": "@cchisq(x,v[,n]) , @dchisq(x,v) , @qchisq(p,v) , @rchisq(v)", "long_description": "[img:../content/images/mathapp.093.14.11.jpg] where [img:../content/images/mathapp.093.14.12.jpg] , and [img:../content/images/mathapp.093.14.13.jpg] . Note that the degrees of freedom parameter [img:../content/images/mathapp.093.14.14.jpg] need not be an integer. In addition, the @chisq(x,v) function may be used to obtain the p -values directly."}, "@ceiling": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww131118", "usage": "@ceiling(x[,n])", "description": "smallest integer not less than", "long_description": "@ceiling(2.34)=3, @ceiling(4)=4."}, "@cexp": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133056", "description": "Exponential", "usage": "@cexp(x,m[,n]), @dexp(x,m) , @qexp(p,m) , @rexp(m)", "long_description": "[img:../content/images/mathapp.093.14.15.jpg] for [img:../content/images/mathapp.093.14.16.jpg] , and [img:../content/images/mathapp.093.14.17.jpg] ."}, "@cextreme": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133075", "description": "Extreme Value (Type I-minimum)", "usage": "@cextreme(x[,n]) , @dextreme(x) , @qextreme(p) , @cloglog(p) , @rextreme", "long_description": "[img:../content/images/mathapp.093.14.18.jpg] for [img:../content/images/mathapp.093.14.19.jpg] ."}, "@cfdist": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133089", "description": "F -distribution", "usage": "@cfdist(x,v1,v2[,n]) , @dfdist(x,v1,v2) , @qfdist(p,v1,v2) , @rfdist(v1,v1)", "long_description": "[img:../content/images/mathapp.093.14.20.jpg] where [img:../content/images/mathapp.093.14.21.jpg] , and [img:../content/images/mathapp.093.14.22.jpg] . Note that the functions allow for fractional degrees of freedom parameters [img:../content/images/mathapp.093.14.23.jpg] and [img:../content/images/mathapp.093.14.24.jpg] ."}, "@cgamma": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133112", "description": "Gamma", "usage": "@cgamma(x,b,r[,n]) , @dgamma(x,b,r) , @qgamma(p,b,r) , @rgamma(b,r)", "long_description": "[img:../content/images/mathapp.093.14.25.jpg] where [img:../content/images/mathapp.093.14.26.jpg] , and [img:../content/images/mathapp.093.14.27.jpg] ."}, "@cged": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133130", "description": "Generalized Error", "usage": "@cged(x,r[,n]) , @dged(x,r) , @qged(p,r) , @rged(r)", "long_description": "[img:../content/images/mathapp.093.14.28.jpg] where [img:../content/images/mathapp.093.14.29.jpg] , and [img:../content/images/mathapp.093.14.30.jpg] ."}, "@chisq": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133866", "description": "@chisq(x,v)", "usage": "Chi-square", "long_description": "Returns the probability that a Chi-squared statistic with [img:../content/images/mathapp.093.14.90.jpg] degrees of freedom exceeds [img:../content/images/mathapp.093.14.91.jpg] : @chisq(x,v)=1\u2013@cchisq(x,d)"}, "@claplace": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133147", "description": "Laplace", "usage": "@claplace(x[,n]) , @dlaplace(x) , @qlaplace(x), @rlaplace", "long_description": "[img:../content/images/mathapp.093.14.31.jpg] for [img:../content/images/mathapp.093.14.32.jpg] ."}, "@clogistic": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133161", "description": "Logistic", "usage": "@clogistic(x[,n]) , @dlogistic(x) , @qlogistic(p) , @rlogistic", "long_description": "[img:../content/images/mathapp.093.14.33.jpg] for [img:../content/images/mathapp.093.14.34.jpg] ."}, "@cloglog": {"uri": "mathapp-Special_Functions", "anchor": "ww132714", "usage": "@cloglog(x)", "description": "complementary log-log function: [img:../content/images/mathapp.093.12.19.jpg] See also @qextreme ."}, "@clognorm": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133175", "description": "Log-normal", "usage": "@clognorm(x,m,s[,n]) , @dlognorm(x,m,s) , @qlognorm(p,m,s) , @rlognorm(m,s)", "long_description": "[img:../content/images/mathapp.093.14.35.jpg] [img:../content/images/mathapp.093.14.36.jpg] , [img:../content/images/mathapp.093.14.37.jpg] , and [img:../content/images/mathapp.093.14.38.jpg] ."}, "@cnegbin": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133195", "description": "Negative Binomial", "usage": "@cnegbin(x,n,p) , @dnegbin(x,n,p) , @qnegbin(s,n,p) , @rnegbin(n,p)", "long_description": "[img:../content/images/mathapp.093.14.39.jpg] if [img:../content/images/mathapp.093.14.40.jpg] , and 0 otherwise, for [img:../content/images/mathapp.093.14.41.jpg] ."}, "@cnorm": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133213", "description": "Normal (Gaussian)", "usage": "@cnorm(x[,n]) , @dnorm(x) , @qnorm(p) , @rnorm,\u00a0nrnd, @logcnorm", "long_description": "[img:../content/images/mathapp.093.14.42.jpg] for [img:../content/images/mathapp.093.14.43.jpg] . @logcnorm is a more numerically stable function for the computation of @log(@cnorm(x))"}, "@columns": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148475", "usage": "@columns(g)", "description": "number of columns.", "long_description": "returns the number of columns in G. Note this is the same as \u201cG.@count\u201d, and will return the same number for every row."}, "@cor": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145148", "usage": "@cor(x,y[,s])", "description": "correlation", "long_description": "the correlation between X and Y."}, "@cos": {"uri": "mathapp-Trigonometric_Functions", "anchor": "ww132916", "usage": "@cos(x)", "description": "cosine (argument in radians)", "long_description": "[img:../content/images/mathapp.093.13.4.jpg]"}, "@cov": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145138", "usage": "@cov(x,y[,s])", "description": "covariance", "long_description": "the covariance between X and Y (division by [img:../content/images/mathapp.093.07.1.jpg] )."}, "@covp": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145128", "usage": "@covp(x,y[,s])", "description": "population covariance", "long_description": "the covariance between X and Y (division by [img:../content/images/mathapp.093.07.2.jpg] )."}, "@covs": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145118", "usage": "@covs(x,y[,s])", "description": "sample covariance", "long_description": "the covariance between X and Y (division by [img:../content/images/mathapp.093.07.3.jpg] )."}, "@cpareto": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133244", "description": "Pareto", "usage": "@cpareto(x,k,a[,n]) , @dpareto(x,k,a) , @qpareto(p,k,a) , @rpareto(k,a)", "long_description": "[img:../content/images/mathapp.093.14.47.jpg] for location parameter [img:../content/images/mathapp.093.14.48.jpg] and shape parameter [img:../content/images/mathapp.093.14.49.jpg] ."}, "@cpoisson": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133227", "description": "Poisson", "usage": "@cpoisson(x,m) , @dpoisson(x,m) , @qpoisson(p,m) , @rpoisson(m)", "long_description": "[img:../content/images/mathapp.093.14.44.jpg] if [img:../content/images/mathapp.093.14.45.jpg] , and 0 otherwise, for [img:../content/images/mathapp.093.14.46.jpg] ."}, "@ctdist": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133261", "description": "Student's [img:../content/images/mathapp.093.14.50.jpg] \u2011distribution", "usage": "@ctdist(x,v[,n]) , @dtdist(x,v) , @qtdist(p,v) , @rtdist(v)", "long_description": "[img:../content/images/mathapp.093.14.51.jpg] for [img:../content/images/mathapp.093.14.52.jpg] , and [img:../content/images/mathapp.093.14.53.jpg] . Note that [img:../content/images/mathapp.093.14.54.jpg] , yields the Cauchy distribution."}, "@cumbmax": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145521", "usage": "@cumbmax(x[,s])", "description": "backwards cumulative maximum", "long_description": "maximum of the values in X from the end of the workfile/sample to the current observation."}, "@cumbmean": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145460", "usage": "@cumbmean(x[,s])", "description": "backwards cumulative mean", "long_description": "mean of the values in X from the end of the workfile/sample to the current observation."}, "@cumbmedian": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww149435", "usage": "@cumbmedian(x[,s])", "description": "backwards cumulative median", "long_description": "the median of X computed from the end of the workfile/sample to the current observation."}, "@cumbmin": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145528", "usage": "@cumbmin(x[,s])", "description": "backwards cumulative minimum", "long_description": "minimum of the values in X from the end of the workfile/sample to the current observation."}, "@cumbnas": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145549", "usage": "@cumbnas(x[,s])", "description": "backwards cumulative nmber of NA observations", "long_description": "the number of missing observations in X from the end of the workfile/sample to the current observation."}, "@cumbobs": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145542", "usage": "@cumbobs(x[,s])", "description": "backwards cumulative nmber of non-NA observations", "long_description": "the number of non-missing observations in X from the end of the workfile/sample to the current observation."}, "@cumbprod": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145453", "usage": "@cumbprod(x[,s])", "description": "backwards cumulative product", "long_description": "cumulative product of the values in X from the end of the workfile/sample (note this function could be subject to numerical overflows)."}, "@cumbquantile": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww149160", "usage": "@cumbquantile(x,q[,s])", "description": "backwards cumulative quantile", "long_description": "the qth quantile in X computed from the end of the workfile/sample to the current observation. Quantiles are computed using the Cleveland definition."}, "@cumbstdev": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145467", "usage": "@cumbstdev(x[,s])", "description": "backwards cumulative standard deviation", "long_description": "sample standard deviation of the values in X from the end of the workfile/sample to the current observation. Note this calculation involves division by [img:../content/images/mathapp.093.08.5.jpg] ."}, "@cumbstdevp": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145477", "usage": "@cumbstdevp(x[,s])", "description": "backwards cumulative population standard deviation", "long_description": "population standard deviation of the values in X from the end of the workfile/sample to the current observation. Note this calculation involves division by [img:../content/images/mathapp.093.08.6.jpg] ."}, "@cumbstdevs": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145487", "usage": "@cumbstdevs(x[,s])", "description": "backwards cumulative sample standard deviation", "long_description": "sample standard deviation of the values in X from the end of the workfile/sample. Note this performs the same calculation as @cumstdev ."}, "@cumbsum": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145446", "usage": "@cumbsum(x[,s])", "description": "backwards cumulative sum", "long_description": "cumulative sum of the values in X from the end of the workfile/sample."}, "@cumbsumsq": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145535", "usage": "@cumbsumsq(x[,s])", "description": "backwards cumulative sum-of-squares", "long_description": "sum of squares of the values in X from the start of the workfile/sample to the current observation."}, "@cumbvar": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145494", "usage": "@cumbvar(x[,s])", "description": "backwards cumulative variance", "long_description": "population variance of the values in X from the end of the workfile/sample to the current observation. Note this calculation involves division by [img:../content/images/mathapp.093.08.7.jpg]"}, "@cumbvarp": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145504", "usage": "@cumbvarp(x[,s])", "description": "backwards cumulative population variance", "long_description": "population variance of the values in X from the end of the workfile/sample to the current observation. Note this performs the same calculation as @cumvar ."}, "@cumbvars": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145511", "usage": "@cumbvars(x[,s])", "description": "backwards cumulative sample variance", "long_description": "sample variance of the values in X from the end of the workfile/sample to the current observation. Note this calculation involves division by [img:../content/images/mathapp.093.08.8.jpg] ."}, "@cummax": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145411", "usage": "@cummax(x[,s])", "description": "cumulative maximum", "long_description": "maximum of the values in X from the start of the workfile/sample to the current observation."}, "@cummean": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145350", "usage": "@cummean(x[,s])", "description": "cumulative mean", "long_description": "mean of the values in X from the start of the workfile/sample to the current observation."}, "@cummedian": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww149593", "usage": "@cummedian(x[,s])", "description": "cumulative median", "long_description": "the median of X computed from the end of the workfile/sample to the current observation."}, "@cummin": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145418", "usage": "@cummin(x[,s])", "description": "cumulative minimum", "long_description": "minimum of the values in X from the start of the workfile/sample to the current observation."}, "@cumnas": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145439", "usage": "@cumnas(x[,s])", "description": "cumulative number of NA observations", "long_description": "the number of missing observations in X from the start of the workfile/sample to the current observation."}, "@cumobs": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145432", "usage": "@cumobs(x[,s])", "description": "cumulative nmber of non-NA observations", "long_description": "the number of non-missing observations in X from the start of the workfile/sample to the current observation."}, "@cumprod": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145343", "usage": "@cumprod(x[,s])", "description": "cumulative product", "long_description": "cumulative product of the values in X from the start of the workfile/sample (note this function could be subject to numerical overflows)."}, "@cumquantile": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww149409", "usage": "@cumquantile(x,q[,s])", "description": "cumulative quantile", "long_description": "the qth quantile in X computed from the start of the workfile/sample to the current observation. Quantiles are computed using the Cleveland definition."}, "@cumstdev": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145357", "usage": "@cumstdev(x[,s])", "description": "cumulative standard deviation", "long_description": "sample standard deviation of the values in X from the start of the workfile/sample to the current observation. Note this calculation involves division by [img:../content/images/mathapp.093.08.1.jpg] ."}, "@cumstdevp": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145367", "usage": "@cumstdevp(x[,s])", "description": "cumulative population standard deviation", "long_description": "population standard deviation of the values in X from the start of the workfile/sample to the current observation. Note this calculation involves division by [img:../content/images/mathapp.093.08.2.jpg] ."}, "@cumstdevs": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145377", "usage": "@cumstdevs(x[,s])", "description": "cumulative sample standard deviation", "long_description": "sample standard deviation of the values in X from the start of the workfile/sample. Note this performs the same calculation as @cumstdev ."}, "@cumsum": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145336", "usage": "@cumsum(x[,s])", "description": "cumulative sum", "long_description": "cumulative sum of the values in X from the start of the workfile/sample."}, "@cumsumsq": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145425", "usage": "@cumsumsq(x[,s])", "description": "cumulative sum-of-squares", "long_description": "sum of squares of the values in X from the start of the workfile/sample to the current observation."}, "@cumvar": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145384", "usage": "@cumvar(x[,s])", "description": "cumulative variance", "long_description": "population variance of the values in X from the start of the workfile/sample to the current observation. Note this calculation involves division by [img:../content/images/mathapp.093.08.3.jpg] ."}, "@cumvarp": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145394", "usage": "@cumvarp(x[,s])", "description": "cumulative population variance", "long_description": "population variance of the values in X from the start of the workfile/sample to the current observation. Note this performs the same calculation as @cumvar ."}, "@cumvars": {"uri": "mathapp-Cumulative_Statistic_Functions", "anchor": "ww145401", "usage": "@cumvars(x[,s])", "description": "cumulative sample variance", "long_description": "sample variance of the values in X from the start of the workfile/sample to the current observation. Note this calculation involves division by [img:../content/images/mathapp.093.08.4.jpg] ."}, "@cunif": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133281", "description": "Uniform", "usage": "@cunif(x,a,b) , @dunif(x,a,b) , @qunif(p,a,b) , @runif(a,b) , rnd", "long_description": "[img:../content/images/mathapp.093.14.55.jpg] for [img:../content/images/mathapp.093.14.56.jpg] and [img:../content/images/mathapp.093.14.57.jpg] ."}, "@cweib": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133298", "description": "Weibull", "usage": "@cweib(x,m,a[,n]) , @dweib(x,m,a) , @qweib(p,m,a) , @rweib(m,a)", "long_description": "[img:../content/images/mathapp.093.14.58.jpg] where [img:../content/images/mathapp.093.14.59.jpg] , and [img:../content/images/mathapp.093.14.60.jpg] ."}, "@dbeta": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww132999", "description": "Beta", "usage": "@cbeta(x,a,b[,n]) , @dbeta(x,a,b) , @qbeta(p,a,b) , @rbeta(a,b)", "long_description": "[img:../content/images/mathapp.093.14.04.jpg] for [img:../content/images/mathapp.093.14.05.jpg] and for [img:../content/images/mathapp.093.14.06.jpg] , where [img:../content/images/mathapp.093.14.07.jpg] is the @beta function."}, "@dbinom": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133019", "description": "Binomial", "usage": "@cbinom(x,n,p) , @dbinom(x,n,p) , @qbinom(s,n,p) , @rbinom(n,p)", "long_description": "[img:../content/images/mathapp.093.14.08.jpg] if [img:../content/images/mathapp.093.14.09.jpg] , and 0 otherwise, for [img:../content/images/mathapp.093.14.10.jpg] ."}, "@dchisq": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133036", "description": "Chi-square", "usage": "@cchisq(x,v[,n]) , @dchisq(x,v) , @qchisq(p,v) , @rchisq(v)", "long_description": "[img:../content/images/mathapp.093.14.11.jpg] where [img:../content/images/mathapp.093.14.12.jpg] , and [img:../content/images/mathapp.093.14.13.jpg] . Note that the degrees of freedom parameter [img:../content/images/mathapp.093.14.14.jpg] need not be an integer. In addition, the @chisq(x,v) function may be used to obtain the p -values directly."}, "@demean": {"uri": "mathapp-Time_Series_Functions", "anchor": "ww156198", "usage": "@demean(s[, smpl])", "description": "demean", "long_description": "Returns a copy of series s translated to have a mean of zero."}, "@detrend": {"uri": "mathapp-Time_Series_Functions", "anchor": "ww156184", "usage": "@detrend(s[, smpl])", "description": "detrend", "long_description": "Returns the residuals of an OLS regression on series s versus an implicit time trend. This function is panel aware."}, "@dexp": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww138618", "description": "Exponential", "usage": "@cexp(x,m[,n]), @dexp(x,m) , @qexp(p,m) , @rexp(m)", "long_description": "[img:../content/images/mathapp.093.14.15.jpg] for [img:../content/images/mathapp.093.14.16.jpg] , and [img:../content/images/mathapp.093.14.17.jpg] ."}, "@dextreme": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133075", "description": "Extreme Value (Type I-minimum)", "usage": "@cextreme(x[,n]) , @dextreme(x) , @qextreme(p) , @cloglog(p) , @rextreme", "long_description": "[img:../content/images/mathapp.093.14.18.jpg] for [img:../content/images/mathapp.093.14.19.jpg] ."}, "@dfdist": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133089", "description": "F -distribution", "usage": "@cfdist(x,v1,v2[,n]) , @dfdist(x,v1,v2) , @qfdist(p,v1,v2) , @rfdist(v1,v1)", "long_description": "[img:../content/images/mathapp.093.14.20.jpg] where [img:../content/images/mathapp.093.14.21.jpg] , and [img:../content/images/mathapp.093.14.22.jpg] . Note that the functions allow for fractional degrees of freedom parameters [img:../content/images/mathapp.093.14.23.jpg] and [img:../content/images/mathapp.093.14.24.jpg] ."}, "@dgamma": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133112", "description": "Gamma", "usage": "@cgamma(x,b,r[,n]) , @dgamma(x,b,r) , @qgamma(p,b,r) , @rgamma(b,r)", "long_description": "[img:../content/images/mathapp.093.14.25.jpg] where [img:../content/images/mathapp.093.14.26.jpg] , and [img:../content/images/mathapp.093.14.27.jpg] ."}, "@dged": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww138622", "description": "Generalized Error", "usage": "@cged(x,r[,n]) , @dged(x,r) , @qged(p,r) , @rged(r)", "long_description": "[img:../content/images/mathapp.093.14.28.jpg] where [img:../content/images/mathapp.093.14.29.jpg] , and [img:../content/images/mathapp.093.14.30.jpg] ."}, "@digamma": {"uri": "mathapp-Special_Functions", "anchor": "ww132725", "usage": "@digamma(x), @psi(x)", "description": "first derivative of the log gamma function: [img:../content/images/mathapp.093.12.20.jpg]"}, "@diwish": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155786", "description": "Inverse Wishart Distribution", "usage": "@riwish(S, n), @riwish(X, S, n), @riwishc(S, n), @riwishc(X, S, n), @riwishi(S, n), @riwishi(X, S, n), @riwishic(S, n), @riwishic(X, S, n), @diwish(X, S, n), @diwishc(X, S, n), @diwishi(X, S, n), @diwishic(X, S, n)", "long_description": "[img:../content/images/mathapp.093.14.83.jpg] , where [img:../content/images/mathapp.093.14.84.jpg] , X and [img:../content/images/mathapp.093.14.85.jpg] are [img:../content/images/mathapp.093.14.86.jpg] positive definite matrices, and the degrees-of-freedom parameter [img:../content/images/mathapp.093.14.87.jpg] and [img:../content/images/mathapp.093.14.88.jpg] . [img:../content/images/mathapp.093.14.89.jpg] , so there are many relations among the Wishart and inverse Wishart functions, e.g., @riwish(S, n) and @inverse(@rwish(@inverse(S), n)) draw from the same distribution. X and S are sym objects, n is a scalar. @riwish* returns a sym object. @diwish* returns a scalar."}, "@diwishc": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155787", "description": "Inverse Wishart Distribution", "usage": "@riwish(S, n), @riwish(X, S, n), @riwishc(S, n), @riwishc(X, S, n), @riwishi(S, n), @riwishi(X, S, n), @riwishic(S, n), @riwishic(X, S, n), @diwish(X, S, n), @diwishc(X, S, n), @diwishi(X, S, n), @diwishic(X, S, n)", "long_description": "[img:../content/images/mathapp.093.14.83.jpg] , where [img:../content/images/mathapp.093.14.84.jpg] , X and [img:../content/images/mathapp.093.14.85.jpg] are [img:../content/images/mathapp.093.14.86.jpg] positive definite matrices, and the degrees-of-freedom parameter [img:../content/images/mathapp.093.14.87.jpg] and [img:../content/images/mathapp.093.14.88.jpg] . [img:../content/images/mathapp.093.14.89.jpg] , so there are many relations among the Wishart and inverse Wishart functions, e.g., @riwish(S, n) and @inverse(@rwish(@inverse(S), n)) draw from the same distribution. X and S are sym objects, n is a scalar. @riwish* returns a sym object. @diwish* returns a scalar."}, "@diwishi": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155788", "description": "Inverse Wishart Distribution", "usage": "@riwish(S, n), @riwish(X, S, n), @riwishc(S, n), @riwishc(X, S, n), @riwishi(S, n), @riwishi(X, S, n), @riwishic(S, n), @riwishic(X, S, n), @diwish(X, S, n), @diwishc(X, S, n), @diwishi(X, S, n), @diwishic(X, S, n)", "long_description": "[img:../content/images/mathapp.093.14.83.jpg] , where [img:../content/images/mathapp.093.14.84.jpg] , X and [img:../content/images/mathapp.093.14.85.jpg] are [img:../content/images/mathapp.093.14.86.jpg] positive definite matrices, and the degrees-of-freedom parameter [img:../content/images/mathapp.093.14.87.jpg] and [img:../content/images/mathapp.093.14.88.jpg] . [img:../content/images/mathapp.093.14.89.jpg] , so there are many relations among the Wishart and inverse Wishart functions, e.g., @riwish(S, n) and @inverse(@rwish(@inverse(S), n)) draw from the same distribution. X and S are sym objects, n is a scalar. @riwish* returns a sym object. @diwish* returns a scalar."}, "@diwishic": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155789", "description": "Inverse Wishart Distribution", "usage": "@riwish(S, n), @riwish(X, S, n), @riwishc(S, n), @riwishc(X, S, n), @riwishi(S, n), @riwishi(X, S, n), @riwishic(S, n), @riwishic(X, S, n), @diwish(X, S, n), @diwishc(X, S, n), @diwishi(X, S, n), @diwishic(X, S, n)", "long_description": "[img:../content/images/mathapp.093.14.83.jpg] , where [img:../content/images/mathapp.093.14.84.jpg] , X and [img:../content/images/mathapp.093.14.85.jpg] are [img:../content/images/mathapp.093.14.86.jpg] positive definite matrices, and the degrees-of-freedom parameter [img:../content/images/mathapp.093.14.87.jpg] and [img:../content/images/mathapp.093.14.88.jpg] . [img:../content/images/mathapp.093.14.89.jpg] , so there are many relations among the Wishart and inverse Wishart functions, e.g., @riwish(S, n) and @inverse(@rwish(@inverse(S), n)) draw from the same distribution. X and S are sym objects, n is a scalar. @riwish* returns a sym object. @diwish* returns a scalar."}, "@dlaplace": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133147", "description": "Laplace", "usage": "@claplace(x[,n]) , @dlaplace(x) , @qlaplace(x), @rlaplace", "long_description": "[img:../content/images/mathapp.093.14.31.jpg] for [img:../content/images/mathapp.093.14.32.jpg] ."}, "@dlogistic": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133161", "description": "Logistic", "usage": "@clogistic(x[,n]) , @dlogistic(x) , @qlogistic(p) , @rlogistic", "long_description": "[img:../content/images/mathapp.093.14.33.jpg] for [img:../content/images/mathapp.093.14.34.jpg] ."}, "@dlognorm": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133175", "description": "Log-normal", "usage": "@clognorm(x,m,s[,n]) , @dlognorm(x,m,s) , @qlognorm(p,m,s) , @rlognorm(m,s)", "long_description": "[img:../content/images/mathapp.093.14.35.jpg] [img:../content/images/mathapp.093.14.36.jpg] , [img:../content/images/mathapp.093.14.37.jpg] , and [img:../content/images/mathapp.093.14.38.jpg] ."}, "@dmvnorm": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155703", "description": "Multivariate Normal Distribution", "usage": "@dmvnorm(x, S), @dmvnormc(x, S), @dmvnormi(x, S), @dmvnormic(x, S), @rmvnorm(S [, n] ), @rmvnormc(S [, n] ), @rmvnormi(S [, n] ), @rmvnormic(S [, n] )", "long_description": "[img:../content/images/mathapp.093.14.71.jpg] , where [img:../content/images/mathapp.093.14.72.jpg] and covariance matrix [img:../content/images/mathapp.093.14.73.jpg] is positive semi-definite. x is a vector, S is a sym object. @dmvnorm* returns a scalar. @rmvnorm* returns a vector or matrix. If the optional argument n is omitted, the function returns a vector containing a single draw from the distribution. If n is provided, n is the number of rows of the returned matrix, with each row representing a draw from the distribution."}, "@dmvnormc": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155704", "description": "Multivariate Normal Distribution", "usage": "@dmvnorm(x, S), @dmvnormc(x, S), @dmvnormi(x, S), @dmvnormic(x, S), @rmvnorm(S [, n] ), @rmvnormc(S [, n] ), @rmvnormi(S [, n] ), @rmvnormic(S [, n] )", "long_description": "[img:../content/images/mathapp.093.14.71.jpg] , where [img:../content/images/mathapp.093.14.72.jpg] and covariance matrix [img:../content/images/mathapp.093.14.73.jpg] is positive semi-definite. x is a vector, S is a sym object. @dmvnorm* returns a scalar. @rmvnorm* returns a vector or matrix. If the optional argument n is omitted, the function returns a vector containing a single draw from the distribution. If n is provided, n is the number of rows of the returned matrix, with each row representing a draw from the distribution."}, "@dmvnormi": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155705", "description": "Multivariate Normal Distribution", "usage": "@dmvnorm(x, S), @dmvnormc(x, S), @dmvnormi(x, S), @dmvnormic(x, S), @rmvnorm(S [, n] ), @rmvnormc(S [, n] ), @rmvnormi(S [, n] ), @rmvnormic(S [, n] )", "long_description": "[img:../content/images/mathapp.093.14.71.jpg] , where [img:../content/images/mathapp.093.14.72.jpg] and covariance matrix [img:../content/images/mathapp.093.14.73.jpg] is positive semi-definite. x is a vector, S is a sym object. @dmvnorm* returns a scalar. @rmvnorm* returns a vector or matrix. If the optional argument n is omitted, the function returns a vector containing a single draw from the distribution. If n is provided, n is the number of rows of the returned matrix, with each row representing a draw from the distribution."}, "@dmvnormic": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155706"}, "@dnegbin": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133195", "description": "Negative Binomial", "usage": "@cnegbin(x,n,p) , @dnegbin(x,n,p) , @qnegbin(s,n,p) , @rnegbin(n,p)", "long_description": "[img:../content/images/mathapp.093.14.39.jpg] if [img:../content/images/mathapp.093.14.40.jpg] , and 0 otherwise, for [img:../content/images/mathapp.093.14.41.jpg] ."}, "@dnorm": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww138633", "description": "Normal (Gaussian)", "usage": "@cnorm(x[,n]) , @dnorm(x) , @qnorm(p) , @rnorm,\u00a0nrnd, @logcnorm", "long_description": "[img:../content/images/mathapp.093.14.42.jpg] for [img:../content/images/mathapp.093.14.43.jpg] . @logcnorm is a more numerically stable function for the computation of @log(@cnorm(x))"}, "@dpareto": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133244", "description": "Pareto", "usage": "@cpareto(x,k,a[,n]) , @dpareto(x,k,a) , @qpareto(p,k,a) , @rpareto(k,a)", "long_description": "[img:../content/images/mathapp.093.14.47.jpg] for location parameter [img:../content/images/mathapp.093.14.48.jpg] and shape parameter [img:../content/images/mathapp.093.14.49.jpg] ."}, "@dpoisson": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133227", "description": "Poisson", "usage": "@cpoisson(x,m) , @dpoisson(x,m) , @qpoisson(p,m) , @rpoisson(m)", "long_description": "[img:../content/images/mathapp.093.14.44.jpg] if [img:../content/images/mathapp.093.14.45.jpg] , and 0 otherwise, for [img:../content/images/mathapp.093.14.46.jpg] ."}, "@dtdist": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133261", "description": "Student's [img:../content/images/mathapp.093.14.50.jpg] \u2011distribution", "usage": "@ctdist(x,v[,n]) , @dtdist(x,v) , @qtdist(p,v) , @rtdist(v)", "long_description": "[img:../content/images/mathapp.093.14.51.jpg] for [img:../content/images/mathapp.093.14.52.jpg] , and [img:../content/images/mathapp.093.14.53.jpg] . Note that [img:../content/images/mathapp.093.14.54.jpg] , yields the Cauchy distribution."}, "@dunif": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww138641", "description": "Uniform", "usage": "@cunif(x,a,b) , @dunif(x,a,b) , @qunif(p,a,b) , @runif(a,b) , rnd", "long_description": "[img:../content/images/mathapp.093.14.55.jpg] for [img:../content/images/mathapp.093.14.56.jpg] and [img:../content/images/mathapp.093.14.57.jpg] ."}, "@dupselem": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww160472", "usage": "@dupselem(x1[, x2,..., smpl])", "description": "duplicate identification", "long_description": "element IDs enumerating the observations within a duplicate group, as determined by @dupsid. The element IDs for any two observations with the same group ID are distinct."}, "@dupsid": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww156074", "usage": "@dupsid(x1[, x2,..., smpl])", "description": "duplicate identification", "long_description": "group IDs identifying unique/duplicated observation data, similar to @groupid . The IDs for two observations are identical if and only if the values of series, alphas, or groups s1 , s2 , etc., are identical for both observations."}, "@dupsobs": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww156066", "usage": "@dupsobs(x1[, x2,..., smpl])", "description": "duplicate identification", "long_description": "number of occurrences of each observation's group ID as would be assigned by @dupsid . An observation containing a unique combination of values among series, alphas, or groups s1 , s2 , etc., will therefore have the value one, while any duplicated observation will have a value larger than one."}, "@dweib": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133298", "description": "Weibull", "usage": "@cweib(x,m,a[,n]) , @dweib(x,m,a) , @qweib(p,m,a) , @rweib(m,a)", "long_description": "[img:../content/images/mathapp.093.14.58.jpg] where [img:../content/images/mathapp.093.14.59.jpg] , and [img:../content/images/mathapp.093.14.60.jpg] ."}, "@dwish": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155734", "description": "Wishart Distribution", "usage": "@dwish(X, S, n), @dwishc(X, S, n), @dwishi(X, S, n), @dwishic(X, S, n), @rwish(S, n), @rwishc(S, n), @rwishi(S, n), @rwishic(S, n)", "long_description": "[img:../content/images/mathapp.093.14.74.jpg] , where [img:../content/images/mathapp.093.14.75.jpg] , X and [img:../content/images/mathapp.093.14.76.jpg] are [img:../content/images/mathapp.093.14.77.jpg] positive definite matrices, and the degrees-of-freedom parameter [img:../content/images/mathapp.093.14.78.jpg] and [img:../content/images/mathapp.093.14.79.jpg] . Conceptually, X is the accumulated scatter matrix of n random draws from [img:../content/images/mathapp.093.14.80.jpg] , i.e., [img:../content/images/mathapp.093.14.81.jpg] , [img:../content/images/mathapp.093.14.82.jpg] , though the mathematical definition has been extended to cover real-valued n . X and S are sym objects, n is a scalar. @rwish* returns a sym object. @dwish* returns a scalar."}, "@dwishc": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155735", "description": "Wishart Distribution", "usage": "@dwish(X, S, n), @dwishc(X, S, n), @dwishi(X, S, n), @dwishic(X, S, n), @rwish(S, n), @rwishc(S, n), @rwishi(S, n), @rwishic(S, n)", "long_description": "[img:../content/images/mathapp.093.14.74.jpg] , where [img:../content/images/mathapp.093.14.75.jpg] , X and [img:../content/images/mathapp.093.14.76.jpg] are [img:../content/images/mathapp.093.14.77.jpg] positive definite matrices, and the degrees-of-freedom parameter [img:../content/images/mathapp.093.14.78.jpg] and [img:../content/images/mathapp.093.14.79.jpg] . Conceptually, X is the accumulated scatter matrix of n random draws from [img:../content/images/mathapp.093.14.80.jpg] , i.e., [img:../content/images/mathapp.093.14.81.jpg] , [img:../content/images/mathapp.093.14.82.jpg] , though the mathematical definition has been extended to cover real-valued n . X and S are sym objects, n is a scalar. @rwish* returns a sym object. @dwish* returns a scalar."}, "@dwishi": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155736", "description": "Wishart Distribution", "usage": "@dwish(X, S, n), @dwishc(X, S, n), @dwishi(X, S, n), @dwishic(X, S, n), @rwish(S, n), @rwishc(S, n), @rwishi(S, n), @rwishic(S, n)", "long_description": "[img:../content/images/mathapp.093.14.74.jpg] , where [img:../content/images/mathapp.093.14.75.jpg] , X and [img:../content/images/mathapp.093.14.76.jpg] are [img:../content/images/mathapp.093.14.77.jpg] positive definite matrices, and the degrees-of-freedom parameter [img:../content/images/mathapp.093.14.78.jpg] and [img:../content/images/mathapp.093.14.79.jpg] . Conceptually, X is the accumulated scatter matrix of n random draws from [img:../content/images/mathapp.093.14.80.jpg] , i.e., [img:../content/images/mathapp.093.14.81.jpg] , [img:../content/images/mathapp.093.14.82.jpg] , though the mathematical definition has been extended to cover real-valued n . X and S are sym objects, n is a scalar. @rwish* returns a sym object. @dwish* returns a scalar."}, "@dwishic": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155737", "description": "Wishart Distribution", "usage": "@dwish(X, S, n), @dwishc(X, S, n), @dwishi(X, S, n), @dwishic(X, S, n), @rwish(S, n), @rwishc(S, n), @rwishi(S, n), @rwishic(S, n)", "long_description": "[img:../content/images/mathapp.093.14.74.jpg] , where [img:../content/images/mathapp.093.14.75.jpg] , X and [img:../content/images/mathapp.093.14.76.jpg] are [img:../content/images/mathapp.093.14.77.jpg] positive definite matrices, and the degrees-of-freedom parameter [img:../content/images/mathapp.093.14.78.jpg] and [img:../content/images/mathapp.093.14.79.jpg] . Conceptually, X is the accumulated scatter matrix of n random draws from [img:../content/images/mathapp.093.14.80.jpg] , i.e., [img:../content/images/mathapp.093.14.81.jpg] , [img:../content/images/mathapp.093.14.82.jpg] , though the mathematical definition has been extended to cover real-valued n . X and S are sym objects, n is a scalar. @rwish* returns a sym object. @dwish* returns a scalar."}, "@eqna": {"uri": "mathapp-Operators", "anchor": "ww131074", "usage": "@eqna(x,y)", "description": "equal to", "long_description": "takes the value 1 if X and Y are equal, and 0 otherwise. NAs are treated as ordinary values for purposes of comparison."}, "@erf": {"uri": "mathapp-Special_Functions", "anchor": "ww132734", "usage": "@erf(x)", "description": "error function: [img:../content/images/mathapp.093.12.21.jpg] for [img:../content/images/mathapp.093.12.22.jpg] ."}, "@erfc": {"uri": "mathapp-Special_Functions", "anchor": "ww132747", "usage": "@erfc(x)", "description": "complementary error function: [img:../content/images/mathapp.093.12.23.jpg] . for [img:../content/images/mathapp.093.12.24.jpg] ."}, "@exp": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww131131", "usage": "@exp(x) , exp(x)", "description": "exponential, [img:../content/images/mathapp.093.04.07.jpg]", "long_description": "@exp(1)=2.71813."}, "@expm1": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww150847", "usage": "@expm1(x)", "description": "exponential, [img:../content/images/mathapp.093.04.08.jpg]", "long_description": "For x near zero."}, "@fact": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww131145", "usage": "@fact(x)", "description": "factorial, [img:../content/images/mathapp.093.04.09.jpg]", "long_description": "@fact(3)=6, @fact(0)=1."}, "@factlog": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww131162", "usage": "@factlog(x)", "description": "natural logarithm of the factorial, [img:../content/images/mathapp.093.04.10.jpg]", "long_description": "@factlog(3)=1.79176, @factlog(0)=0."}, "@fdist": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133879", "description": "@fdist(x,v1,v2)", "usage": "F -distribution", "long_description": "Probability that an F -statistic with [img:../content/images/mathapp.093.14.92.jpg] numerator degrees of freedom and [img:../content/images/mathapp.093.14.93.jpg] denominator degrees of freedom exceeds [img:../content/images/mathapp.093.14.94.jpg] : @fdist(x,v1,v2)=1\u2013@cfdist(x,v1,v2)"}, "@firstsby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww148033", "usage": "@firstsby( arg1 , arg2[, s] )", "description": "First non-missing value in arg1 for each arg2 group"}, "@floor": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww131178", "usage": "@floor(x[,n])", "description": "largest integer not greater than", "long_description": "@floor(1.23)=1, @floor(-3.1)=-4."}, "@fracdiff": {"uri": "mathapp-Time_Series_Functions", "anchor": "ww155967", "usage": "@fracdiff(s, n)", "description": "returns [img:../content/images/mathapp.093.05.10.jpg] for series s (see description). This function is panel aware.", "long_description": "Fractional difference operator: For [img:../content/images/mathapp.093.05.11.jpg] , [img:../content/images/mathapp.093.05.12.jpg]"}, "@fv": {"uri": "mathapp-Financial_Functions", "anchor": "ww145286", "usage": "@fv(r,n,x [ ,fv,t ] )", "description": "future value", "long_description": "future value of an [img:../content/images/mathapp.093.06.01.jpg] -period annuity with rate [img:../content/images/mathapp.093.06.02.jpg] , payments [img:../content/images/mathapp.093.06.03.jpg] , and optional final lump sum payment [img:../content/images/mathapp.093.06.04.jpg] . A non-zero value for the optional [img:../content/images/mathapp.093.06.05.jpg] indicates that the payments are made at the beginning of periods instead of ends."}, "@gamma": {"uri": "mathapp-Special_Functions", "anchor": "ww132760", "usage": "@gamma(x)", "description": "(complete) gamma function: [img:../content/images/mathapp.093.12.25.jpg] for [img:../content/images/mathapp.093.12.26.jpg] ."}, "@gammader": {"uri": "mathapp-Special_Functions", "anchor": "ww132773", "usage": "@gammader(x)", "description": "first derivative of the gamma function: [img:../content/images/mathapp.093.12.27.jpg] Note: Euler\u2019s constant, [img:../content/images/mathapp.093.12.28.jpg] , may be evaluated as [img:../content/images/mathapp.093.12.29.jpg] . See also @digamma and @trigamma ."}, "@gammainc": {"uri": "mathapp-Special_Functions", "anchor": "ww132790", "usage": "@gammainc(x,a[,n])", "description": "incomplete gamma function: [img:../content/images/mathapp.093.12.30.jpg] for [img:../content/images/mathapp.093.12.31.jpg] and [img:../content/images/mathapp.093.12.32.jpg] ."}, "@gammaincder": {"uri": "mathapp-Special_Functions", "anchor": "ww132806", "usage": "@gammaincder(x,a,n)", "description": "derivative of the incomplete gamma function: Evaluates the derivatives of the incomplete gamma integral [img:../content/images/mathapp.093.12.33.jpg] , where [img:../content/images/mathapp.093.12.34.jpg] is an integer from 1 to 5 corresponding to the desired derivative: [img:../content/images/mathapp.093.12.35.jpg]"}, "@gammaincinv": {"uri": "mathapp-Special_Functions", "anchor": "ww132822", "usage": "@gammaincinv(p,a)", "description": "inverse of the incomplete gamma function: find the value of [img:../content/images/mathapp.093.12.36.jpg] satisfying: [img:../content/images/mathapp.093.12.37.jpg] for [img:../content/images/mathapp.093.12.38.jpg] and [img:../content/images/mathapp.093.12.39.jpg] ."}, "@gammalog": {"uri": "mathapp-Special_Functions", "anchor": "ww132842", "usage": "@gammalog(x)", "description": "logarithm of the gamma function: [img:../content/images/mathapp.093.12.40.jpg] . For derivatives of this function see @digamma and @trigamma ."}, "@gmean": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145111", "usage": "@gmean(x[,s])", "description": "geometric mean", "long_description": "the geometric mean of X. The geometric mean is calculated as the exponential of the sum of the logs of X."}, "@hmean": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145104", "usage": "@hmean(x[,s])", "description": "harmonic mean", "long_description": "computes the harmonic mean of the values of X. The harmonic mean is calculated as the reciprocal of the mean of the reciprocals of X."}, "@iff": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww136032", "usage": "@iff(s,x,y)", "description": "recode by condition", "long_description": "returns [img:../content/images/mathapp.093.04.11.jpg] if condition [img:../content/images/mathapp.093.04.12.jpg] is true; otherwise returns [img:../content/images/mathapp.093.04.13.jpg] . Note this is the same as @recode ."}, "@imax": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145933", "usage": "@imax(x)", "description": "maximum index", "long_description": "workfile index of the maximum of the values in X for the current sample."}, "@imin": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145940", "usage": "@imin(x)", "description": "minimum index", "long_description": "workfile index of the maximum of the values in X for the current sample."}, "@inner": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145097", "usage": "@inner(x,y[,s])", "description": "inner product", "long_description": "the inner product of X and Y."}, "@intercept": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww156094", "usage": "@intercept(x[, s])", "description": "intercept", "long_description": "the intercept (or intercepts for panel data) of an OLS regression versus an implicit time trend, as would be used by @detrend . This function is panel aware."}, "@inv": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww131191", "usage": "@inv(x)", "description": "reciprocal, [img:../content/images/mathapp.093.04.14.jpg]", "long_description": "inv(2)=0.5 (For series only; you should use @einv to obtain the element inverse of a matrix)."}, "@isna": {"uri": "mathapp-Operators", "anchor": "ww131081", "usage": "@isna(x)", "description": "equal to NA", "long_description": "takes the value 1 if X is equal to NA and 0 otherwise."}, "@kurt": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145090", "usage": "@kurt(x[,s])", "description": "kurtosis", "long_description": "kurtosis of values in X."}, "@kurtsby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww148021", "usage": "@kurtsby( arg1 , arg2[, s] )", "description": "Kurtosis of arg1 observations for each arg2 group."}, "@lag": {"uri": "mathapp-Time_Series_Functions", "anchor": "ww148717", "usage": "@lag(x, n)", "description": "n -th order lag (equivalent to \u201cX(\u20114\u201d) for the series X)", "long_description": "[img:../content/images/mathapp.093.05.13.jpg]"}, "@lastsby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww148037", "usage": "@lastsby( arg1 , arg2[, s] )", "description": "Last non-missing value in arg1 for each arg2 group"}, "@log": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww131220", "usage": "@log(x) , log(x)", "description": "natural logarithm, [img:../content/images/mathapp.093.04.18.jpg]", "long_description": "@log(2)=0.693..., log(@exp(1))=1."}, "@log10": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww131236", "usage": "@log10(x)", "description": "base-10 logarithm, [img:../content/images/mathapp.093.04.23.jpg]", "long_description": "@log10(100)=2."}, "@log1mexp": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww150999", "usage": "@log1mexp(x)", "description": "[img:../content/images/mathapp.093.04.21.jpg]", "long_description": "For negative [img:../content/images/mathapp.093.04.22.jpg] near zero."}, "@log1p": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww150934", "usage": "@log1p(x)", "description": "[img:../content/images/mathapp.093.04.19.jpg]", "long_description": "For [img:../content/images/mathapp.093.04.20.jpg] near zero."}, "@log2pi": {"uri": "mathapp-Numerical_Constants", "anchor": "ww151883", "usage": "@log2pi", "description": "[img:../content/images/mathapp.093.03.1.jpg]"}, "@logcnorm": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww138635", "description": "Normal (Gaussian)", "usage": "@cnorm(x[,n]) , @dnorm(x) , @qnorm(p) , @rnorm,\u00a0nrnd, @logcnorm", "long_description": "[img:../content/images/mathapp.093.14.42.jpg] for [img:../content/images/mathapp.093.14.43.jpg] . @logcnorm is a more numerically stable function for the computation of @log(@cnorm(x))"}, "@logit": {"uri": "mathapp-Special_Functions", "anchor": "ww132849", "usage": "@logit(x)", "description": "logistic transform: [img:../content/images/mathapp.093.12.41.jpg]"}, "@logx": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww131249", "usage": "@logx(x,b)", "description": "base- b logarithm, [img:../content/images/mathapp.093.04.24.jpg]", "long_description": "@logx(256,2)=8."}, "@mae": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145083", "usage": "@mae(x,y[,s])", "description": "mean absolute error", "long_description": "the mean of the absolute value of the difference between X and Y."}, "@mape": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145076", "usage": "@mape(x,y[,s])", "description": "mean absolute percentage error", "long_description": "100 multiplied by the mean of the absolute difference between X and Y, divided by Y."}, "@mav": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132149", "usage": "@mav(x,n)", "description": "n -period backward moving average", "long_description": "[img:../content/images/mathapp.093.09.30.jpg] NAs are not propagated."}, "@mavc": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132159", "usage": "@mavc(x,n)", "description": "n -period centered moving average", "long_description": "centered moving average of X. Note if n is even then the window length is increased by one and the two endpoints are weighted by 0.5. NAs are not propagated."}, "@max": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145912", "usage": "@max(x[,s])", "description": "maximum", "long_description": "maximum of the values in X."}, "@maxes": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww149600", "usage": "@maxes(x,n[,s])", "description": "n-largest numbers", "long_description": "maximum n values in X, arranged largest to smallest, returned in a vector object. Note this function may not be used for series generation."}, "@maxsby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww147948", "usage": "@maxsby( arg1 , arg2[, s] )", "description": "Maximum value of arg1 observations for each arg2 group."}, "@mcor": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132256", "usage": "@mcor(x,y,n)", "description": "n -period backwards moving correlation", "long_description": "correlation between X and Y of the current and previous [img:../content/images/mathapp.093.09.49.jpg] observations. NAs are not propagated."}, "@mcov": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132226", "usage": "@mcov(x,y,n)", "description": "n -period backwards moving covariance", "long_description": "population covariance (division by [img:../content/images/mathapp.093.09.43.jpg] ) between X and Y of the current and previous [img:../content/images/mathapp.093.09.44.jpg] observations. NAs are not propagated."}, "@mcovp": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132246", "usage": "@mcovp(x,y,n)", "description": "n -period backwards moving population covariance", "long_description": "population covariance (division by [img:../content/images/mathapp.093.09.47.jpg] ) between X and Y of the current and previous [img:../content/images/mathapp.093.09.48.jpg] observations. Note this is the same calculation as @movcov . NAs are not propagated."}, "@mcovs": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132236", "usage": "@mcovs(x,y,n)", "description": "n -period backwards moving sample covariance", "long_description": "sample covariance (division by [img:../content/images/mathapp.093.09.45.jpg] ) between X and Y of the current and previous [img:../content/images/mathapp.093.09.46.jpg] observations. NAs are not propagated."}, "@mean": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145069", "usage": "@mean(x[,s])", "description": "mean", "long_description": "average of the values in X."}, "@meansby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww147938", "usage": "@meansby( arg1 , arg2[, s] )", "description": "Mean of arg1 observations for each arg2 group."}, "@median": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145062", "usage": "@median(x[,s])", "description": "median", "long_description": "computes the median of the X (uses the average of middle two observations if the number of observations is even)."}, "@mediansby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww147953", "usage": "@mediansby( arg1 , arg2[, s] )", "description": "Median of arg1 observations for each arg2 group."}, "@min": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145055", "usage": "@min(x[,s])", "description": "minimum", "long_description": "minimum of the values in X."}, "@minner": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132312", "usage": "@minner(x,y,n)", "description": "n -period backwards inner product of X and Y", "long_description": "inner product of X and Y for the current and previous [img:../content/images/mathapp.093.09.58.jpg] observations. NAs are not propagated."}, "@mins": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww149822", "usage": "@mins(x,n[,s])", "description": "n-smallest numbers", "long_description": "minimum n values in X, arranged smallest to largest, returned in a vector object. Note this function may not be used for series generation."}, "@minsby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww147943", "usage": "@minsby( arg1 , arg2[, s] )", "description": "Minimum value of arg1 observations for each arg2 group."}, "@mkurt": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132291", "usage": "@mkurt(x,n)", "description": "n -period backwards kurtosis", "long_description": "the kurtosis of X for the current and previous [img:../content/images/mathapp.093.09.55.jpg] observations. NAs are not propagated."}, "@mmax": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132263", "usage": "@mmax(x,n)", "description": "n -period backwards moving maximum", "long_description": "the maximum of X for the current and previous [img:../content/images/mathapp.093.09.50.jpg] observations. NAs are not propagated."}, "@mmin": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132270", "usage": "@mmin(x,n)", "description": "n -period backwards moving minimum", "long_description": "the minimum of X for the current and previous [img:../content/images/mathapp.093.09.52.jpg] observations. NAs are not propagated."}, "@mnas": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132305", "usage": "@mnas(x,n)", "description": "n -period backwards number of NA observations", "long_description": "the number of missing observations in X for the current and previous [img:../content/images/mathapp.093.09.57.jpg] observations. Note this function always returns the same value as @movnas ."}, "@mobs": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132298", "usage": "@mobs(x,n)", "description": "n -period backwards number of non-NA observations", "long_description": "the number of non-missing observations in X for the current and previous [img:../content/images/mathapp.093.09.56.jpg] observations. Note this function always returns the same value as @movobs ."}, "@mod": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww131204", "usage": "@mod(x,y)", "description": "floating point remainder", "long_description": "returns the remainder of [img:../content/images/mathapp.093.04.15.jpg] with the same sign as [img:../content/images/mathapp.093.04.16.jpg] . If [img:../content/images/mathapp.093.04.17.jpg] the result is 0."}, "@movav": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww131967", "usage": "@movav(x,n)", "description": "n -period backward moving average", "long_description": "[img:../content/images/mathapp.093.09.02.jpg] NAs are propagated."}, "@movavc": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww131977", "usage": "@movavc(x,n)", "description": "n -period centered moving average", "long_description": "centered moving average of X. Note if n is even then the window length is increased by one and the two endpoints are weighted by 0.5. NAs are propagated."}, "@movcor": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132074", "usage": "@movcor(x,y,n)", "description": "n -period backwards moving correlation", "long_description": "correlation between X and Y of the current and previous [img:../content/images/mathapp.093.09.21.jpg] observations. NAs are propagated. NAs are propagated."}, "@movcov": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132044", "usage": "@movcov(x,y,n)", "description": "n -period backwards moving covariance", "long_description": "population covariance (division by [img:../content/images/mathapp.093.09.15.jpg] ) between X and Y of the current and previous [img:../content/images/mathapp.093.09.16.jpg] observations. NAs are propagated."}, "@movcovp": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132064", "usage": "@movcovp(x,y,n)", "description": "n -period backwards moving population covariance", "long_description": "population covariance (division by [img:../content/images/mathapp.093.09.19.jpg] ) between X and Y of the current and previous [img:../content/images/mathapp.093.09.20.jpg] observations. Note this is the same calculation as @movcov. NAs are propagated."}, "@movcovs": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132054", "usage": "@movcovs(x,y,n)", "description": "n -period backwards moving sample covariance", "long_description": "sample covariance (division by [img:../content/images/mathapp.093.09.17.jpg] ) between X and Y of the current and previous [img:../content/images/mathapp.093.09.18.jpg] observations. NAs are propagated."}, "@movinner": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132130", "usage": "@movinner(x,y,n)", "description": "n -period backwards inner product of X and Y", "long_description": "inner product of X and Y for the current and previous [img:../content/images/mathapp.093.09.28.jpg] observations. NAs are propagated."}, "@movkurt": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132109", "usage": "@movkurt(x,n)", "description": "n -period backwards kurtosis", "long_description": "the kurtosis of X for the current and previous [img:../content/images/mathapp.093.09.26.jpg] observations. NAs are propagated."}, "@movmax": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132081", "usage": "@movmax(x,n)", "description": "n -period backwards moving maximum", "long_description": "the maximum of X for the current and previous [img:../content/images/mathapp.093.09.22.jpg] observations. NAs are propagated."}, "@movmin": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132088", "usage": "@movmin(x,n)", "description": "n -period backwards moving minimum", "long_description": "the minimum of X for the current and previous [img:../content/images/mathapp.093.09.23.jpg] observations. NAs are propagated."}, "@movnas": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132123", "usage": "@movnas(x,n)", "description": "n -period backwards nmber of NA observations", "long_description": "the number of missing observations in X for the current and previous n-1 observations. Note this function always returns the same value as @mnas ."}, "@movobs": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132116", "usage": "@movobs(x,n)", "description": "n -period backwards nmber of non-NA observations", "long_description": "the number of non-missing observations in X for the current and previous [img:../content/images/mathapp.093.09.27.jpg] observations. Note this function always returns the same value as @mobs ."}, "@movskew": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132102", "usage": "@movskew(x,n)", "description": "n -period backwards skewness", "long_description": "the skewness of X for the current and previous [img:../content/images/mathapp.093.09.25.jpg] observations. NAs are propagated."}, "@movstdev": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww131984", "usage": "@movstdev(x,n)", "description": "n -period backwards moving standard deviation", "long_description": "sample standard deviation (division by [img:../content/images/mathapp.093.09.03.jpg] ) of X for the current and previous [img:../content/images/mathapp.093.09.04.jpg] observations. NAs are propagated."}, "@movstdevp": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132004", "usage": "@movstdevp(x,n)", "description": "n -period backwards moving population standard deviation", "long_description": "population standard deviation (division by [img:../content/images/mathapp.093.09.07.jpg] ) of X for the current and previous [img:../content/images/mathapp.093.09.08.jpg] observations. NAs are propagated."}, "@movstdevs": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww131994", "usage": "@movstdevs(x,n)", "description": "n -period backwards moving sample standard deviation", "long_description": "sample standard deviation (division by [img:../content/images/mathapp.093.09.05.jpg] ) of X for the current and previous [img:../content/images/mathapp.093.09.06.jpg] observations. Note this is the same calculation as @movstdev. NAs are propagated."}, "@movsum": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww131956", "usage": "@movsum(x,n)", "description": "n -period backward moving sum", "long_description": "[img:../content/images/mathapp.093.09.01.jpg] . NAs are propagated."}, "@movsumsq": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132095", "usage": "@movsumsq(x,n)", "description": "n -period backwards sum-of-squares", "long_description": "the sum-of-squares of X for the current and previous [img:../content/images/mathapp.093.09.24.jpg] observations. NAs are propagated."}, "@movvar": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132014", "usage": "@movvar(x,n)", "description": "n -period backwards moving variance", "long_description": "population variance (division by [img:../content/images/mathapp.093.09.09.jpg] ) of X for the for the current and previous [img:../content/images/mathapp.093.09.10.jpg] observations. NAs are propagated."}, "@movvarp": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132034", "usage": "@movvarp(x,n)", "description": "n -period backwards moving population variance", "long_description": "population variance (division by [img:../content/images/mathapp.093.09.13.jpg] ).of X for the current and previous [img:../content/images/mathapp.093.09.14.jpg] observations. Note this is the same calculation as @movvar . NAs are propagated."}, "@movvars": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132024", "usage": "@movvars(x,n)", "description": "n -period backwards moving sample variance", "long_description": "sample variance (division by [img:../content/images/mathapp.093.09.11.jpg] ) of X for the current and previous [img:../content/images/mathapp.093.09.12.jpg] observations. NAs are propagated."}, "@mskew": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132284", "usage": "@mskew(x,n)", "description": "n -period backwards skewness", "long_description": "the skewness of X for the current and previous [img:../content/images/mathapp.093.09.54.jpg] observations. NAs are not propagated."}, "@mstdev": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132166", "usage": "@mstdev(x,n)", "description": "n -period backwards moving standard deviation", "long_description": "sample standard deviation (division by [img:../content/images/mathapp.093.09.31.jpg] ) of X for the current and previous [img:../content/images/mathapp.093.09.32.jpg] observations. NAs are not propagated."}, "@mstdevp": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132186", "usage": "@mstdevp(x,n)", "description": "n -period backwards moving population standard deviation", "long_description": "population standard deviation (division by [img:../content/images/mathapp.093.09.35.jpg] ) of X for the current and previous [img:../content/images/mathapp.093.09.36.jpg] observations. NAs are not propagated."}, "@mstdevs": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132176", "usage": "@mstdevs(x,n)", "description": "n -period backwards moving sample standard deviation", "long_description": "sample standard deviation (division by [img:../content/images/mathapp.093.09.33.jpg] ) of X for the current and previous [img:../content/images/mathapp.093.09.34.jpg] observations. Note this is the same calculation as @movstdev . NAs are not propagated."}, "@msum": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132138", "usage": "@msum(x,n)", "description": "n -period backward moving sum", "long_description": "[img:../content/images/mathapp.093.09.29.jpg] NAs are not propagated."}, "@msumsq": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132277", "usage": "@msumsq(x,n)", "description": "n -period backwards sum-of-squares", "long_description": "the sum-of-squares of X for the current and previous [img:../content/images/mathapp.093.09.53.jpg] observations. NAs are not propagated."}, "@mvar": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132196", "usage": "@mvar(x,n)", "description": "n -period backwards moving variance", "long_description": "population variance (division by [img:../content/images/mathapp.093.09.37.jpg] ) of X for the for the current and previous [img:../content/images/mathapp.093.09.38.jpg] observations. NAs are not propagated."}, "@mvarp": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132216", "usage": "@mvarp(x,n)", "description": "n -period backwards moving population variance", "long_description": "population variance (division by [img:../content/images/mathapp.093.09.41.jpg] ) of X for the current and previous [img:../content/images/mathapp.093.09.42.jpg] observations. Note this is the same calculation as @movvar . NAs are not propagated."}, "@mvars": {"uri": "mathapp-Moving_Statistic_Functions", "anchor": "ww132206", "usage": "@mvars(x,n)", "description": "n -period backwards moving sample variance", "long_description": "sample variance (division by [img:../content/images/mathapp.093.09.39.jpg] ) of X for the current and previous [img:../content/images/mathapp.093.09.40.jpg] observations. NAs are not propagated."}, "@nan": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww131262", "usage": "@nan(x,y)", "description": "recode NAs in X to Y", "long_description": "returns [img:../content/images/mathapp.093.04.25.jpg] if [img:../content/images/mathapp.093.04.26.jpg] , and [img:../content/images/mathapp.093.04.27.jpg] if [img:../content/images/mathapp.093.04.28.jpg] ."}, "@nas": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145048", "usage": "@nas(x[,s])", "description": "number of NAs", "long_description": "the number of missing observations for X in the current sample."}, "@nasby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww147928", "usage": "@nasby( arg1 , arg2[, s] )", "description": "Number of arg1 NA values for each arg2 group."}, "@neqna": {"uri": "mathapp-Operators", "anchor": "ww131088", "usage": "@neqna(x,y)", "description": "not equal to", "long_description": "takes the value 1 if X and Y are not equal, and 0 if they are equal. NAs are treated as ordinary values for purposes of comparison."}, "@nper": {"uri": "mathapp-Financial_Functions", "anchor": "ww145263", "usage": "@nper(r,x,pv [ ,fv,t ] )", "description": "number of periods", "long_description": "number of annuity periods required to produce the present value [img:../content/images/mathapp.093.06.06.jpg] with rate [img:../content/images/mathapp.093.06.07.jpg] , payments [img:../content/images/mathapp.093.06.08.jpg] and optional final lump sum payment [img:../content/images/mathapp.093.06.09.jpg] . A non-zero value for the optional [img:../content/images/mathapp.093.06.10.jpg] indicates that the payments are made at the beginning of periods."}, "@obs": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145034", "usage": "@obs(x[,s])", "description": "number of observations", "long_description": "the number of non-missing observations for X in the current sample."}, "@obsby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww147923", "usage": "@obsby( arg1 , arg2[, s] )", "description": "Number of non-NA arg1 observations for each arg2 group."}, "@pc": {"uri": "mathapp-Time_Series_Functions", "anchor": "ww131418", "usage": "@pc(x)", "description": "one-period percentage change (in percent)", "long_description": "equals @pch(x)*100"}, "@pca": {"uri": "mathapp-Time_Series_Functions", "anchor": "ww131435", "usage": "@pca(x)", "description": "one-period percentage change\u2014annualized (in percent)", "long_description": "equals @pcha(x)*100"}, "@pch": {"uri": "mathapp-Time_Series_Functions", "anchor": "ww131425", "usage": "@pch(x)", "description": "one-period percentage change (in decimal)", "long_description": "[img:../content/images/mathapp.093.05.14.jpg] ."}, "@pcha": {"uri": "mathapp-Time_Series_Functions", "anchor": "ww131442", "usage": "@pcha(x)", "description": "one-period percentage change\u2014annualized (in decimal)", "long_description": "[img:../content/images/mathapp.093.05.15.jpg] where [img:../content/images/mathapp.093.05.16.jpg] is the lag associated with one-year ( [img:../content/images/mathapp.093.05.17.jpg] ) for quarterly data, etc.)."}, "@pchy": {"uri": "mathapp-Time_Series_Functions", "anchor": "ww131466", "usage": "@pchy(x)", "description": "one-year percentage change (in decimal)", "long_description": "[img:../content/images/mathapp.093.05.18.jpg] , where [img:../content/images/mathapp.093.05.19.jpg] is the lag associated with one-year ( [img:../content/images/mathapp.093.05.20.jpg] ) for annual data, etc.)."}, "@pctiles": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww156054", "usage": "@pctiles(x[, ties, s])", "description": "percentiles", "long_description": "Similar to @ranks , but returns the percentile of each observation within the series. Equivalent to 100 * @ranks(x, \u201da\u201d, ties) / @obs(x) ."}, "@pcy": {"uri": "mathapp-Time_Series_Functions", "anchor": "ww131459", "usage": "@pcy(x)", "description": "one-year percentage change (in percent)", "long_description": "equals @pchy(x)*100"}, "@periodtodate": {"uri": "mathapp-Time_Series_Functions", "anchor": "ww156012", "usage": "@periodtodate(s, p[, smpl])", "description": "period-to-date of series s .", "long_description": "Cumulative sum of series s within each period, where each period is defined by a contiguous block of identical values in series p ."}, "@pi": {"uri": "mathapp-Numerical_Constants", "anchor": "ww151888", "usage": "@pi", "description": "[img:../content/images/mathapp.093.03.2.jpg]"}, "@pmax": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww154912", "usage": "@pmax(x,y)", "description": "pairwise max", "long_description": "returns the pairwise max of [img:../content/images/mathapp.093.04.29.jpg] and [img:../content/images/mathapp.093.04.30.jpg] (for more than pairs, use @rmax)"}, "@pmin": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww154906", "usage": "@pmin(x,y)", "description": "pairwise min", "long_description": "returns the pairwise max of [img:../content/images/mathapp.093.04.31.jpg] and [img:../content/images/mathapp.093.04.32.jpg] (for more than pairs, use @rmin)"}, "@pmt": {"uri": "mathapp-Financial_Functions", "anchor": "ww145217", "usage": "@pmt(r,n,pv [ ,fv,t ] )", "description": "payment amount", "long_description": "payment amount for an [img:../content/images/mathapp.093.06.16.jpg] -period, [img:../content/images/mathapp.093.06.17.jpg] present value annuity with rate [img:../content/images/mathapp.093.06.18.jpg] and optional final lump sum payment [img:../content/images/mathapp.093.06.19.jpg] . A non-zero value for the optional [img:../content/images/mathapp.093.06.20.jpg] indicates that the payments are made at the beginning of periods."}, "@pow": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww151522", "usage": "@pow(x,a)", "description": "power, [img:../content/images/mathapp.093.04.33.jpg]", "long_description": "@pow(2,3) = 8."}, "@pow1pm1": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww151272", "usage": "@pow1pm1(x,a)", "description": "[img:../content/images/mathapp.093.04.36.jpg]", "long_description": "For [img:../content/images/mathapp.093.04.37.jpg] near zero. While similar to @powm1 , this function supports a full double-precision \u201cdelta\u201d from one. Among other things, this allows exponentiation of values extremely close to one that cannot be represented in double-precision, e.g., [img:../content/images/mathapp.093.04.38.jpg] . This function should only be used if the calculation of [img:../content/images/mathapp.093.04.39.jpg] naturally falls near zero. If the calculation of [img:../content/images/mathapp.093.04.40.jpg] naturally falls near one, @powm1 should be used instead. Supplying [img:../content/images/mathapp.093.04.41.jpg] to this function will produce less accurate results."}, "@powm1": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww151278", "usage": "@powm1(x,a)", "description": "[img:../content/images/mathapp.093.04.34.jpg]", "long_description": "For [img:../content/images/mathapp.093.04.35.jpg] near one."}, "@prod": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145041", "usage": "@prod(x[,s])", "description": "product", "long_description": "the product of the elements of X (note this function is prone to numerical overflows)."}, "@psi": {"uri": "mathapp-Special_Functions", "anchor": "ww132858", "usage": "@psi(x)", "description": "see @digamma ."}, "@pv": {"uri": "mathapp-Financial_Functions", "anchor": "ww145240", "usage": "@pv(r,n,x [ ,fv,t ] )", "description": "present value", "long_description": "present value of an [img:../content/images/mathapp.093.06.11.jpg] -period annuity with rate [img:../content/images/mathapp.093.06.12.jpg] , payments [img:../content/images/mathapp.093.06.13.jpg] , and optional final lump sum payment [img:../content/images/mathapp.093.06.14.jpg] . A non-zero value for the optional [img:../content/images/mathapp.093.06.15.jpg] indicates that the payments are made at the beginning of periods."}, "@qbeta": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww132999", "description": "Beta", "usage": "@cbeta(x,a,b[,n]) , @dbeta(x,a,b) , @qbeta(p,a,b) , @rbeta(a,b)", "long_description": "[img:../content/images/mathapp.093.14.04.jpg] for [img:../content/images/mathapp.093.14.05.jpg] and for [img:../content/images/mathapp.093.14.06.jpg] , where [img:../content/images/mathapp.093.14.07.jpg] is the @beta function."}, "@qbinom": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133019", "description": "Binomial", "usage": "@cbinom(x,n,p) , @dbinom(x,n,p) , @qbinom(s,n,p) , @rbinom(n,p)", "long_description": "[img:../content/images/mathapp.093.14.08.jpg] if [img:../content/images/mathapp.093.14.09.jpg] , and 0 otherwise, for [img:../content/images/mathapp.093.14.10.jpg] ."}, "@qchisq": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133036", "description": "Chi-square", "usage": "@cchisq(x,v[,n]) , @dchisq(x,v) , @qchisq(p,v) , @rchisq(v)", "long_description": "[img:../content/images/mathapp.093.14.11.jpg] where [img:../content/images/mathapp.093.14.12.jpg] , and [img:../content/images/mathapp.093.14.13.jpg] . Note that the degrees of freedom parameter [img:../content/images/mathapp.093.14.14.jpg] need not be an integer. In addition, the @chisq(x,v) function may be used to obtain the p -values directly."}, "@qexp": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww138620", "description": "Exponential", "usage": "@cexp(x,m[,n]), @dexp(x,m) , @qexp(p,m) , @rexp(m)", "long_description": "[img:../content/images/mathapp.093.14.15.jpg] for [img:../content/images/mathapp.093.14.16.jpg] , and [img:../content/images/mathapp.093.14.17.jpg] ."}, "@qextreme": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133075", "description": "Extreme Value (Type I-minimum)", "usage": "@cextreme(x[,n]) , @dextreme(x) , @qextreme(p) , @cloglog(p) , @rextreme", "long_description": "[img:../content/images/mathapp.093.14.18.jpg] for [img:../content/images/mathapp.093.14.19.jpg] ."}, "@qfdist": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133089", "description": "F -distribution", "usage": "@cfdist(x,v1,v2[,n]) , @dfdist(x,v1,v2) , @qfdist(p,v1,v2) , @rfdist(v1,v1)", "long_description": "[img:../content/images/mathapp.093.14.20.jpg] where [img:../content/images/mathapp.093.14.21.jpg] , and [img:../content/images/mathapp.093.14.22.jpg] . Note that the functions allow for fractional degrees of freedom parameters [img:../content/images/mathapp.093.14.23.jpg] and [img:../content/images/mathapp.093.14.24.jpg] ."}, "@qgamma": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133112", "description": "Gamma", "usage": "@cgamma(x,b,r[,n]) , @dgamma(x,b,r) , @qgamma(p,b,r) , @rgamma(b,r)", "long_description": "[img:../content/images/mathapp.093.14.25.jpg] where [img:../content/images/mathapp.093.14.26.jpg] , and [img:../content/images/mathapp.093.14.27.jpg] ."}, "@qged": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww138624", "description": "Generalized Error", "usage": "@cged(x,r[,n]) , @dged(x,r) , @qged(p,r) , @rged(r)", "long_description": "[img:../content/images/mathapp.093.14.28.jpg] where [img:../content/images/mathapp.093.14.29.jpg] , and [img:../content/images/mathapp.093.14.30.jpg] ."}, "@qlaplace": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133147", "description": "Laplace", "usage": "@claplace(x[,n]) , @dlaplace(x) , @qlaplace(x), @rlaplace", "long_description": "[img:../content/images/mathapp.093.14.31.jpg] for [img:../content/images/mathapp.093.14.32.jpg] ."}, "@qlogistic": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133161", "description": "Logistic", "usage": "@clogistic(x[,n]) , @dlogistic(x) , @qlogistic(p) , @rlogistic", "long_description": "[img:../content/images/mathapp.093.14.33.jpg] for [img:../content/images/mathapp.093.14.34.jpg] ."}, "@qlognorm": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133175", "description": "Log-normal", "usage": "@clognorm(x,m,s[,n]) , @dlognorm(x,m,s) , @qlognorm(p,m,s) , @rlognorm(m,s)", "long_description": "[img:../content/images/mathapp.093.14.35.jpg] [img:../content/images/mathapp.093.14.36.jpg] , [img:../content/images/mathapp.093.14.37.jpg] , and [img:../content/images/mathapp.093.14.38.jpg] ."}, "@qnegbin": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133195", "description": "Negative Binomial", "usage": "@cnegbin(x,n,p) , @dnegbin(x,n,p) , @qnegbin(s,n,p) , @rnegbin(n,p)", "long_description": "[img:../content/images/mathapp.093.14.39.jpg] if [img:../content/images/mathapp.093.14.40.jpg] , and 0 otherwise, for [img:../content/images/mathapp.093.14.41.jpg] ."}, "@qnorm": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww138637", "description": "Normal (Gaussian)", "usage": "@cnorm(x[,n]) , @dnorm(x) , @qnorm(p) , @rnorm,\u00a0nrnd, @logcnorm", "long_description": "[img:../content/images/mathapp.093.14.42.jpg] for [img:../content/images/mathapp.093.14.43.jpg] . @logcnorm is a more numerically stable function for the computation of @log(@cnorm(x))"}, "@qpareto": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133244", "description": "Pareto", "usage": "@cpareto(x,k,a[,n]) , @dpareto(x,k,a) , @qpareto(p,k,a) , @rpareto(k,a)", "long_description": "[img:../content/images/mathapp.093.14.47.jpg] for location parameter [img:../content/images/mathapp.093.14.48.jpg] and shape parameter [img:../content/images/mathapp.093.14.49.jpg] ."}, "@qpoisson": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133227", "description": "Poisson", "usage": "@cpoisson(x,m) , @dpoisson(x,m) , @qpoisson(p,m) , @rpoisson(m)", "long_description": "[img:../content/images/mathapp.093.14.44.jpg] if [img:../content/images/mathapp.093.14.45.jpg] , and 0 otherwise, for [img:../content/images/mathapp.093.14.46.jpg] ."}, "@qtdist": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133261", "description": "Student's [img:../content/images/mathapp.093.14.50.jpg] \u2011distribution", "usage": "@ctdist(x,v[,n]) , @dtdist(x,v) , @qtdist(p,v) , @rtdist(v)", "long_description": "[img:../content/images/mathapp.093.14.51.jpg] for [img:../content/images/mathapp.093.14.52.jpg] , and [img:../content/images/mathapp.093.14.53.jpg] . Note that [img:../content/images/mathapp.093.14.54.jpg] , yields the Cauchy distribution."}, "@quantile": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145027", "usage": "@quantile(x,q[,m,s])", "description": "quantile", "long_description": "the q -th quantile of the series X. m is an optional string argument for specifying the quantile method: \u201cb\u201d (Blom), \u201cr\u201d (Rankit-Cleveland), \u201co\u201d (Ordinary), \u201ct\u201d (Tukey), \u201cv\u201d (van der Waerden), \u201cg\u201d (Gumbel). The default value is \u201cr\u201d."}, "@quantilesby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww148010", "usage": "@quantilesby( arg1 , arg2, arg3[, s] )", "description": "Quantiles of arg1 observations for each arg2 group where arg1 is the desired quantile."}, "@qunif": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww138643", "description": "Uniform", "usage": "@cunif(x,a,b) , @dunif(x,a,b) , @qunif(p,a,b) , @runif(a,b) , rnd", "long_description": "[img:../content/images/mathapp.093.14.55.jpg] for [img:../content/images/mathapp.093.14.56.jpg] and [img:../content/images/mathapp.093.14.57.jpg] ."}, "@qweib": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133298", "description": "Weibull", "usage": "@cweib(x,m,a[,n]) , @dweib(x,m,a) , @qweib(p,m,a) , @rweib(m,a)", "long_description": "[img:../content/images/mathapp.093.14.58.jpg] where [img:../content/images/mathapp.093.14.59.jpg] , and [img:../content/images/mathapp.093.14.60.jpg] ."}, "@ranks": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145017", "usage": "@ranks(x[,o,t,s])", "description": "ranks", "long_description": "the ranking of each observation in X. The order of ranking is set using o : \u201ca\u201d (ascending - default) or \u201cd\u201d (descending). Ties are broken according to the setting of t: \u201c i\u201d (ignore), \u201cf\u201d (first), \u201cl\u201d (last), \u201ca\u201d (average - default), \u201cr\u201d randomize. If you wish to specify tie-handling options, you must also specify the order option ( e.g. \u2018@ranks(x, \u201ca\u201d, \u201ci\u201d)\u2019)."}, "@rate": {"uri": "mathapp-Financial_Functions", "anchor": "ww145194", "usage": "@rate(n,x,pv [ ,fv,t ] )", "description": "interest", "long_description": "interest rate for an [img:../content/images/mathapp.093.06.21.jpg] period annuity with payments [img:../content/images/mathapp.093.06.22.jpg] , present value [img:../content/images/mathapp.093.06.23.jpg] , and optional final lump sum payment [img:../content/images/mathapp.093.06.24.jpg] . A non-zero value for the optional [img:../content/images/mathapp.093.06.25.jpg] indicates that the payments are made at the beginning of periods."}, "@rbeta": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww132999", "description": "Beta", "usage": "@cbeta(x,a,b[,n]) , @dbeta(x,a,b) , @qbeta(p,a,b) , @rbeta(a,b)", "long_description": "[img:../content/images/mathapp.093.14.04.jpg] for [img:../content/images/mathapp.093.14.05.jpg] and for [img:../content/images/mathapp.093.14.06.jpg] , where [img:../content/images/mathapp.093.14.07.jpg] is the @beta function."}, "@rbinom": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133019", "description": "Binomial", "usage": "@cbinom(x,n,p) , @dbinom(x,n,p) , @qbinom(s,n,p) , @rbinom(n,p)", "long_description": "[img:../content/images/mathapp.093.14.08.jpg] if [img:../content/images/mathapp.093.14.09.jpg] , and 0 otherwise, for [img:../content/images/mathapp.093.14.10.jpg] ."}, "@rchisq": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133036", "description": "Chi-square", "usage": "@cchisq(x,v[,n]) , @dchisq(x,v) , @qchisq(p,v) , @rchisq(v)", "long_description": "[img:../content/images/mathapp.093.14.11.jpg] where [img:../content/images/mathapp.093.14.12.jpg] , and [img:../content/images/mathapp.093.14.13.jpg] . Note that the degrees of freedom parameter [img:../content/images/mathapp.093.14.14.jpg] need not be an integer. In addition, the @chisq(x,v) function may be used to obtain the p -values directly."}, "@recode": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww131283", "usage": "@recode(s,x,y)", "description": "recode by condition", "long_description": "returns [img:../content/images/mathapp.093.04.42.jpg] if condition [img:../content/images/mathapp.093.04.43.jpg] is true; otherwise returns [img:../content/images/mathapp.093.04.44.jpg] ."}, "@rexp": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww138647", "description": "Exponential", "usage": "@cexp(x,m[,n]), @dexp(x,m) , @qexp(p,m) , @rexp(m)", "long_description": "[img:../content/images/mathapp.093.14.15.jpg] for [img:../content/images/mathapp.093.14.16.jpg] , and [img:../content/images/mathapp.093.14.17.jpg] ."}, "@rextreme": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133075", "description": "Extreme Value (Type I-minimum)", "usage": "@cextreme(x[,n]) , @dextreme(x) , @qextreme(p) , @cloglog(p) , @rextreme", "long_description": "[img:../content/images/mathapp.093.14.18.jpg] for [img:../content/images/mathapp.093.14.19.jpg] ."}, "@rfdist": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133089", "description": "F -distribution", "usage": "@cfdist(x,v1,v2[,n]) , @dfdist(x,v1,v2) , @qfdist(p,v1,v2) , @rfdist(v1,v1)", "long_description": "[img:../content/images/mathapp.093.14.20.jpg] where [img:../content/images/mathapp.093.14.21.jpg] , and [img:../content/images/mathapp.093.14.22.jpg] . Note that the functions allow for fractional degrees of freedom parameters [img:../content/images/mathapp.093.14.23.jpg] and [img:../content/images/mathapp.093.14.24.jpg] ."}, "@rfirst": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148584", "usage": "@rfirst(g)", "description": "row-wise first non-NA value.", "long_description": "the value of the first non-missing observation in the rows of G."}, "@rgamma": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133112", "description": "Gamma", "usage": "@cgamma(x,b,r[,n]) , @dgamma(x,b,r) , @qgamma(p,b,r) , @rgamma(b,r)", "long_description": "[img:../content/images/mathapp.093.14.25.jpg] where [img:../content/images/mathapp.093.14.26.jpg] , and [img:../content/images/mathapp.093.14.27.jpg] ."}, "@rged": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww138626", "description": "Generalized Error", "usage": "@cged(x,r[,n]) , @dged(x,r) , @qged(p,r) , @rged(r)", "long_description": "[img:../content/images/mathapp.093.14.28.jpg] where [img:../content/images/mathapp.093.14.29.jpg] , and [img:../content/images/mathapp.093.14.30.jpg] ."}, "@rifirst": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148591", "usage": "@rifirst(g)", "description": "row-wise first non-NA index.", "long_description": "the index ( i.e. , column number) of the first non-missing observation in the rows of G."}, "@rilast": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148598", "usage": "@rilast(g)", "description": "row-wise last non-NA index.", "long_description": "the index ( i.e. , column number) of the last non-missing observation in the rows of G."}, "@rimax": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148605", "usage": "@rimax(g)", "description": "row-wise maximum index.", "long_description": "the index ( i.e. , column number) of the maximum observation in the rows of G. In the case of ties, the first matching index is given."}, "@rimin": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148640", "usage": "@rimin(g)", "description": "row-wise minimum index.", "long_description": "the index ( i.e. , column number) of the minimum observation in the rows of G. In the case of ties, the first matching index is given."}, "@riwish": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155778", "description": "Inverse Wishart Distribution", "usage": "@riwish(S, n), @riwish(X, S, n), @riwishc(S, n), @riwishc(X, S, n), @riwishi(S, n), @riwishi(X, S, n), @riwishic(S, n), @riwishic(X, S, n), @diwish(X, S, n), @diwishc(X, S, n), @diwishi(X, S, n), @diwishic(X, S, n)", "long_description": "[img:../content/images/mathapp.093.14.83.jpg] , where [img:../content/images/mathapp.093.14.84.jpg] , X and [img:../content/images/mathapp.093.14.85.jpg] are [img:../content/images/mathapp.093.14.86.jpg] positive definite matrices, and the degrees-of-freedom parameter [img:../content/images/mathapp.093.14.87.jpg] and [img:../content/images/mathapp.093.14.88.jpg] . [img:../content/images/mathapp.093.14.89.jpg] , so there are many relations among the Wishart and inverse Wishart functions, e.g., @riwish(S, n) and @inverse(@rwish(@inverse(S), n)) draw from the same distribution. X and S are sym objects, n is a scalar. @riwish* returns a sym object. @diwish* returns a scalar."}, "@riwishc": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155780", "description": "Inverse Wishart Distribution", "usage": "@riwish(S, n), @riwish(X, S, n), @riwishc(S, n), @riwishc(X, S, n), @riwishi(S, n), @riwishi(X, S, n), @riwishic(S, n), @riwishic(X, S, n), @diwish(X, S, n), @diwishc(X, S, n), @diwishi(X, S, n), @diwishic(X, S, n)", "long_description": "[img:../content/images/mathapp.093.14.83.jpg] , where [img:../content/images/mathapp.093.14.84.jpg] , X and [img:../content/images/mathapp.093.14.85.jpg] are [img:../content/images/mathapp.093.14.86.jpg] positive definite matrices, and the degrees-of-freedom parameter [img:../content/images/mathapp.093.14.87.jpg] and [img:../content/images/mathapp.093.14.88.jpg] . [img:../content/images/mathapp.093.14.89.jpg] , so there are many relations among the Wishart and inverse Wishart functions, e.g., @riwish(S, n) and @inverse(@rwish(@inverse(S), n)) draw from the same distribution. X and S are sym objects, n is a scalar. @riwish* returns a sym object. @diwish* returns a scalar."}, "@riwishi": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155782", "description": "Inverse Wishart Distribution", "usage": "@riwish(S, n), @riwish(X, S, n), @riwishc(S, n), @riwishc(X, S, n), @riwishi(S, n), @riwishi(X, S, n), @riwishic(S, n), @riwishic(X, S, n), @diwish(X, S, n), @diwishc(X, S, n), @diwishi(X, S, n), @diwishic(X, S, n)", "long_description": "[img:../content/images/mathapp.093.14.83.jpg] , where [img:../content/images/mathapp.093.14.84.jpg] , X and [img:../content/images/mathapp.093.14.85.jpg] are [img:../content/images/mathapp.093.14.86.jpg] positive definite matrices, and the degrees-of-freedom parameter [img:../content/images/mathapp.093.14.87.jpg] and [img:../content/images/mathapp.093.14.88.jpg] . [img:../content/images/mathapp.093.14.89.jpg] , so there are many relations among the Wishart and inverse Wishart functions, e.g., @riwish(S, n) and @inverse(@rwish(@inverse(S), n)) draw from the same distribution. X and S are sym objects, n is a scalar. @riwish* returns a sym object. @diwish* returns a scalar."}, "@riwishic": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155784", "description": "Inverse Wishart Distribution", "usage": "@riwish(S, n), @riwish(X, S, n), @riwishc(S, n), @riwishc(X, S, n), @riwishi(S, n), @riwishi(X, S, n), @riwishic(S, n), @riwishic(X, S, n), @diwish(X, S, n), @diwishc(X, S, n), @diwishi(X, S, n), @diwishic(X, S, n)", "long_description": "[img:../content/images/mathapp.093.14.83.jpg] , where [img:../content/images/mathapp.093.14.84.jpg] , X and [img:../content/images/mathapp.093.14.85.jpg] are [img:../content/images/mathapp.093.14.86.jpg] positive definite matrices, and the degrees-of-freedom parameter [img:../content/images/mathapp.093.14.87.jpg] and [img:../content/images/mathapp.093.14.88.jpg] . [img:../content/images/mathapp.093.14.89.jpg] , so there are many relations among the Wishart and inverse Wishart functions, e.g., @riwish(S, n) and @inverse(@rwish(@inverse(S), n)) draw from the same distribution. X and S are sym objects, n is a scalar. @riwish* returns a sym object. @diwish* returns a scalar."}, "@rlaplace": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133147", "description": "Laplace", "usage": "@claplace(x[,n]) , @dlaplace(x) , @qlaplace(x), @rlaplace", "long_description": "[img:../content/images/mathapp.093.14.31.jpg] for [img:../content/images/mathapp.093.14.32.jpg] ."}, "@rlast": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148612", "usage": "@rlast(g)", "description": "row-wise last non-NA value.", "long_description": "the value of the last non-missing observation in the rows of G"}, "@rlogistic": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133161", "description": "Logistic", "usage": "@clogistic(x[,n]) , @dlogistic(x) , @qlogistic(p) , @rlogistic", "long_description": "[img:../content/images/mathapp.093.14.33.jpg] for [img:../content/images/mathapp.093.14.34.jpg] ."}, "@rlognorm": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133175", "description": "Log-normal", "usage": "@clognorm(x,m,s[,n]) , @dlognorm(x,m,s) , @qlognorm(p,m,s) , @rlognorm(m,s)", "long_description": "[img:../content/images/mathapp.093.14.35.jpg] [img:../content/images/mathapp.093.14.36.jpg] , [img:../content/images/mathapp.093.14.37.jpg] , and [img:../content/images/mathapp.093.14.38.jpg] ."}, "@rmax": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148619", "usage": "@rmax(g)", "description": "row-wise maximum value.", "long_description": "the value of the maximum observation in the rows of G."}, "@rmean": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148510", "usage": "@rmean(g)", "description": "row-wise mean.", "long_description": "the mean of the rows of G."}, "@rmedian": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww152228", "usage": "@rmedian(g)", "description": "row-wise median", "long_description": "the median of the rows of G."}, "@rmin": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148626", "usage": "@rmin(g)", "description": "row-wise minimum value.", "long_description": "the value of the minimum observation in the rows of G."}, "@rmse": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145010", "usage": "@rmse(x,y[,s])", "description": "root mean square error", "long_description": "the square root of the mean of the squared difference between X and Y."}, "@rmvnorm": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155696", "description": "Multivariate Normal Distribution", "usage": "@dmvnorm(x, S), @dmvnormc(x, S), @dmvnormi(x, S), @dmvnormic(x, S), @rmvnorm(S [, n] ), @rmvnormc(S [, n] ), @rmvnormi(S [, n] ), @rmvnormic(S [, n] )", "long_description": "[img:../content/images/mathapp.093.14.71.jpg] , where [img:../content/images/mathapp.093.14.72.jpg] and covariance matrix [img:../content/images/mathapp.093.14.73.jpg] is positive semi-definite. x is a vector, S is a sym object. @dmvnorm* returns a scalar. @rmvnorm* returns a vector or matrix. If the optional argument n is omitted, the function returns a vector containing a single draw from the distribution. If n is provided, n is the number of rows of the returned matrix, with each row representing a draw from the distribution."}, "@rmvnormc": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155697", "description": "Multivariate Normal Distribution", "usage": "@dmvnorm(x, S), @dmvnormc(x, S), @dmvnormi(x, S), @dmvnormic(x, S), @rmvnorm(S [, n] ), @rmvnormc(S [, n] ), @rmvnormi(S [, n] ), @rmvnormic(S [, n] )", "long_description": "[img:../content/images/mathapp.093.14.71.jpg] , where [img:../content/images/mathapp.093.14.72.jpg] and covariance matrix [img:../content/images/mathapp.093.14.73.jpg] is positive semi-definite. x is a vector, S is a sym object. @dmvnorm* returns a scalar. @rmvnorm* returns a vector or matrix. If the optional argument n is omitted, the function returns a vector containing a single draw from the distribution. If n is provided, n is the number of rows of the returned matrix, with each row representing a draw from the distribution."}, "@rmvnormi": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155699", "description": "Multivariate Normal Distribution", "usage": "@dmvnorm(x, S), @dmvnormc(x, S), @dmvnormi(x, S), @dmvnormic(x, S), @rmvnorm(S [, n] ), @rmvnormc(S [, n] ), @rmvnormi(S [, n] ), @rmvnormic(S [, n] )", "long_description": "[img:../content/images/mathapp.093.14.71.jpg] , where [img:../content/images/mathapp.093.14.72.jpg] and covariance matrix [img:../content/images/mathapp.093.14.73.jpg] is positive semi-definite. x is a vector, S is a sym object. @dmvnorm* returns a scalar. @rmvnorm* returns a vector or matrix. If the optional argument n is omitted, the function returns a vector containing a single draw from the distribution. If n is provided, n is the number of rows of the returned matrix, with each row representing a draw from the distribution."}, "@rmvnormic": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155701", "description": "Multivariate Normal Distribution", "usage": "@dmvnorm(x, S), @dmvnormc(x, S), @dmvnormi(x, S), @dmvnormic(x, S), @rmvnorm(S [, n] ), @rmvnormc(S [, n] ), @rmvnormi(S [, n] ), @rmvnormic(S [, n] )", "long_description": "[img:../content/images/mathapp.093.14.71.jpg] , where [img:../content/images/mathapp.093.14.72.jpg] and covariance matrix [img:../content/images/mathapp.093.14.73.jpg] is positive semi-definite. x is a vector, S is a sym object. @dmvnorm* returns a scalar. @rmvnorm* returns a vector or matrix. If the optional argument n is omitted, the function returns a vector containing a single draw from the distribution. If n is provided, n is the number of rows of the returned matrix, with each row representing a draw from the distribution."}, "@rnas": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148482", "usage": "@rnas(g)", "description": "row-wise number of NAs.", "long_description": "the number of missing observations in the rows of G."}, "@rnegbin": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133195", "description": "Negative Binomial", "usage": "@cnegbin(x,n,p) , @dnegbin(x,n,p) , @qnegbin(s,n,p) , @rnegbin(n,p)", "long_description": "[img:../content/images/mathapp.093.14.39.jpg] if [img:../content/images/mathapp.093.14.40.jpg] , and 0 otherwise, for [img:../content/images/mathapp.093.14.41.jpg] ."}, "@rnorm": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww138635", "description": "Normal (Gaussian)", "usage": "@cnorm(x[,n]) , @dnorm(x) , @qnorm(p) , @rnorm,\u00a0nrnd, @logcnorm", "long_description": "[img:../content/images/mathapp.093.14.42.jpg] for [img:../content/images/mathapp.093.14.43.jpg] . @logcnorm is a more numerically stable function for the computation of @log(@cnorm(x))"}, "@robs": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148489", "usage": "@robs(g)", "description": "row-wise number of non-NAs.", "long_description": "the number of non-missing observations in the rows of G."}, "@round": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww131315", "usage": "@round(x[,n])", "description": "round to the nearest integer", "long_description": "@round(-97.5)=-98, @round(3.5)=4."}, "@rpareto": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133244", "description": "Pareto", "usage": "@cpareto(x,k,a[,n]) , @dpareto(x,k,a) , @qpareto(p,k,a) , @rpareto(k,a)", "long_description": "[img:../content/images/mathapp.093.14.47.jpg] for location parameter [img:../content/images/mathapp.093.14.48.jpg] and shape parameter [img:../content/images/mathapp.093.14.49.jpg] ."}, "@rpoisson": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133227", "description": "Poisson", "usage": "@cpoisson(x,m) , @dpoisson(x,m) , @qpoisson(p,m) , @rpoisson(m)", "long_description": "[img:../content/images/mathapp.093.14.44.jpg] if [img:../content/images/mathapp.093.14.45.jpg] , and 0 otherwise, for [img:../content/images/mathapp.093.14.46.jpg] ."}, "@rprod": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww152222", "usage": "@rprod(g)", "description": "row-wise product", "long_description": "the product of the rows of G. Beware overflow."}, "@rquantile": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww152216", "usage": "@rquantile(g,q)", "description": "row-wise quantile, where q is the quantile", "long_description": "the quantile of the rows of G. The Cleveland quantile definition is used."}, "@rstdev": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148517", "usage": "@rstdev(g)", "description": "row-wise standard deviation.", "long_description": "the sample standard deviation of the rows of G. Note division is by [img:../content/images/mathapp.093.10.1.jpg] ."}, "@rstdevp": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148527", "usage": "@rstdevp(g)", "description": "row-wise population standard deviation.", "long_description": "the population standard deviation of the rows of G. Note division is by [img:../content/images/mathapp.093.10.2.jpg] ."}, "@rstdevs": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148537", "usage": "@rstdevs(g)", "description": "row-wise sample standard deviation.", "long_description": "the sample standard deviation of the rows of G. Note division is by [img:../content/images/mathapp.093.10.3.jpg] , and this calculation is the same as @rstdev ."}, "@rsum": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148503", "usage": "@rsum(g)", "description": "row-wise sum.", "long_description": "the sum of the rows of G."}, "@rsumsq": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148577", "usage": "@rsumsq(g)", "description": "row-wise sum-of-squares.", "long_description": "the sum of the squares of the rows of G."}, "@rtdist": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133261", "description": "Student's [img:../content/images/mathapp.093.14.50.jpg] \u2011distribution", "usage": "@ctdist(x,v[,n]) , @dtdist(x,v) , @qtdist(p,v) , @rtdist(v)", "long_description": "[img:../content/images/mathapp.093.14.51.jpg] for [img:../content/images/mathapp.093.14.52.jpg] , and [img:../content/images/mathapp.093.14.53.jpg] . Note that [img:../content/images/mathapp.093.14.54.jpg] , yields the Cauchy distribution."}, "@runif": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww138645", "description": "Uniform", "usage": "@cunif(x,a,b) , @dunif(x,a,b) , @qunif(p,a,b) , @runif(a,b) , rnd", "long_description": "[img:../content/images/mathapp.093.14.55.jpg] for [img:../content/images/mathapp.093.14.56.jpg] and [img:../content/images/mathapp.093.14.57.jpg] ."}, "@rvalcount": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148496", "usage": "@rvalcount(g,v)", "description": "row-wise count of observations matching v.", "long_description": "the number of observations with a value equal to v in the rows of G. Note v can be a scalar or a series"}, "@rvar": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148547", "usage": "@rvar(g)", "description": "row-wise variance.", "long_description": "the population variance of the rows of G. Note division is by [img:../content/images/mathapp.093.10.4.jpg] ."}, "@rvarp": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148557", "usage": "@rvarp(g)", "description": "row-wise population variance", "long_description": "the population variance of the rows of G. Note division is by [img:../content/images/mathapp.093.10.5.jpg] , and this calculation is the same as @rvar ."}, "@rvars": {"uri": "mathapp-Group_Row_Functions", "anchor": "ww148567", "usage": "@rvars(g)", "description": "row-wise sample variance.", "long_description": "the sample variance of the rows of G. Note division is by [img:../content/images/mathapp.093.10.6.jpg] ."}, "@rweib": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133298", "description": "Weibull", "usage": "@cweib(x,m,a[,n]) , @dweib(x,m,a) , @qweib(p,m,a) , @rweib(m,a)", "long_description": "[img:../content/images/mathapp.093.14.58.jpg] where [img:../content/images/mathapp.093.14.59.jpg] , and [img:../content/images/mathapp.093.14.60.jpg] ."}, "@rwish": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155726", "description": "Wishart Distribution", "usage": "@dwish(X, S, n), @dwishc(X, S, n), @dwishi(X, S, n), @dwishic(X, S, n), @rwish(S, n), @rwishc(S, n), @rwishi(S, n), @rwishic(S, n)", "long_description": "[img:../content/images/mathapp.093.14.74.jpg] , where [img:../content/images/mathapp.093.14.75.jpg] , X and [img:../content/images/mathapp.093.14.76.jpg] are [img:../content/images/mathapp.093.14.77.jpg] positive definite matrices, and the degrees-of-freedom parameter [img:../content/images/mathapp.093.14.78.jpg] and [img:../content/images/mathapp.093.14.79.jpg] . Conceptually, X is the accumulated scatter matrix of n random draws from [img:../content/images/mathapp.093.14.80.jpg] , i.e., [img:../content/images/mathapp.093.14.81.jpg] , [img:../content/images/mathapp.093.14.82.jpg] , though the mathematical definition has been extended to cover real-valued n . X and S are sym objects, n is a scalar. @rwish* returns a sym object. @dwish* returns a scalar."}, "@rwishc": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155728", "description": "Wishart Distribution", "usage": "@dwish(X, S, n), @dwishc(X, S, n), @dwishi(X, S, n), @dwishic(X, S, n), @rwish(S, n), @rwishc(S, n), @rwishi(S, n), @rwishic(S, n)", "long_description": "[img:../content/images/mathapp.093.14.74.jpg] , where [img:../content/images/mathapp.093.14.75.jpg] , X and [img:../content/images/mathapp.093.14.76.jpg] are [img:../content/images/mathapp.093.14.77.jpg] positive definite matrices, and the degrees-of-freedom parameter [img:../content/images/mathapp.093.14.78.jpg] and [img:../content/images/mathapp.093.14.79.jpg] . Conceptually, X is the accumulated scatter matrix of n random draws from [img:../content/images/mathapp.093.14.80.jpg] , i.e., [img:../content/images/mathapp.093.14.81.jpg] , [img:../content/images/mathapp.093.14.82.jpg] , though the mathematical definition has been extended to cover real-valued n . X and S are sym objects, n is a scalar. @rwish* returns a sym object. @dwish* returns a scalar."}, "@rwishi": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155730", "description": "Wishart Distribution", "usage": "@dwish(X, S, n), @dwishc(X, S, n), @dwishi(X, S, n), @dwishic(X, S, n), @rwish(S, n), @rwishc(S, n), @rwishi(S, n), @rwishic(S, n)", "long_description": "[img:../content/images/mathapp.093.14.74.jpg] , where [img:../content/images/mathapp.093.14.75.jpg] , X and [img:../content/images/mathapp.093.14.76.jpg] are [img:../content/images/mathapp.093.14.77.jpg] positive definite matrices, and the degrees-of-freedom parameter [img:../content/images/mathapp.093.14.78.jpg] and [img:../content/images/mathapp.093.14.79.jpg] . Conceptually, X is the accumulated scatter matrix of n random draws from [img:../content/images/mathapp.093.14.80.jpg] , i.e., [img:../content/images/mathapp.093.14.81.jpg] , [img:../content/images/mathapp.093.14.82.jpg] , though the mathematical definition has been extended to cover real-valued n . X and S are sym objects, n is a scalar. @rwish* returns a sym object. @dwish* returns a scalar."}, "@rwishic": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww155732", "description": "Wishart Distribution", "usage": "@dwish(X, S, n), @dwishc(X, S, n), @dwishi(X, S, n), @dwishic(X, S, n), @rwish(S, n), @rwishc(S, n), @rwishi(S, n), @rwishic(S, n)", "long_description": "[img:../content/images/mathapp.093.14.74.jpg] , where [img:../content/images/mathapp.093.14.75.jpg] , X and [img:../content/images/mathapp.093.14.76.jpg] are [img:../content/images/mathapp.093.14.77.jpg] positive definite matrices, and the degrees-of-freedom parameter [img:../content/images/mathapp.093.14.78.jpg] and [img:../content/images/mathapp.093.14.79.jpg] . Conceptually, X is the accumulated scatter matrix of n random draws from [img:../content/images/mathapp.093.14.80.jpg] , i.e., [img:../content/images/mathapp.093.14.81.jpg] , [img:../content/images/mathapp.093.14.82.jpg] , though the mathematical definition has been extended to cover real-valued n . X and S are sym objects, n is a scalar. @rwish* returns a sym object. @dwish* returns a scalar."}, "@sign": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww154512", "usage": "@sign(x)", "description": "returns sign of [img:../content/images/mathapp.093.04.45.jpg]", "long_description": "returns -1, 0, 1 depending on the sign of the corresponding element of [img:../content/images/mathapp.093.04.46.jpg]"}, "@sin": {"uri": "mathapp-Trigonometric_Functions", "anchor": "ww132926", "usage": "@sin(x)", "description": "sine (argument in radians)", "long_description": "[img:../content/images/mathapp.093.13.5.jpg]"}, "@skew": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww145003", "usage": "@skew(x[,s])", "description": "skewness", "long_description": "skewness of values in X."}, "@skewsby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww148016", "usage": "@skewsby( arg1 , arg2[, s] )", "description": "Skewness of arg1 observations for each arg2 group."}, "@smape": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww150065", "usage": "@smape(x,y[,s])", "description": "symmetric mean absolute percentage error", "long_description": "200 multiplied by the mean of the absolute difference between X and Y divided by the sum of the absolute values of X and Y."}, "@sqrt": {"uri": "mathapp-Basic_Mathematical_Functions", "anchor": "ww131328", "usage": "@sqrt(x), sqr(x)", "description": "square root", "long_description": "@sqrt(9)=3."}, "@stdev": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww144993", "usage": "@stdev(x[,s])", "description": "standard deviation", "long_description": "square root of the unbiased sample variance (sum-of-squared residuals divided by [img:../content/images/mathapp.093.07.4.jpg] )."}, "@stdevp": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww144983", "usage": "@stdevp(x[,s])", "description": "population standard deviation", "long_description": "square root of the population variance (sum-of-squared residuals divided by [img:../content/images/mathapp.093.07.5.jpg] )."}, "@stdevpsby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww147998", "usage": "@stdevpsby( arg1 , arg2[, s] )", "description": "Standard deviation of arg1 observations for each arg2 group (division by [img:../content/images/mathapp.093.11.6.jpg] )."}, "@stdevs": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww144976", "usage": "@stdevs(x[,s])", "description": "sample standard deviation", "long_description": "square root of the unbiased sample variance. Note this is the same calculation as @stdev ."}, "@stdevsby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww147982", "usage": "@stdevsby( arg1 , arg2[, s] )", "description": "Sample standard deviation of arg1 observations for each arg2 group (division by [img:../content/images/mathapp.093.11.4.jpg] )."}, "@stdevssby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww147990", "usage": "@stdevssby( arg1 , arg2[, s] )", "description": "Sample standard deviation of arg1 observations for each arg2 group (division by [img:../content/images/mathapp.093.11.5.jpg] )."}, "@stdize": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww156624", "usage": "@stdize(x[, smpl])", "description": "standardize (for sample)", "long_description": "Returns a copy of series scaled and translated to have a mean of zero and a sample standard deviation of one."}, "@stdizep": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww156617", "usage": "@stdizep(x[, smpl])", "description": "standardize (for population)", "long_description": "Returns a copy of series scaled and translated to have a mean of zero and a population standard deviation of one."}, "@sum": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww144969", "usage": "@sum(x[,s])", "description": "sum", "long_description": "the sum of X."}, "@sumsby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww147933", "usage": "@sumsby( arg1 , arg2[, s] )", "description": "Sum of arg1 observations for each arg2 group."}, "@sumsq": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww144962", "usage": "@sumsq(x[,s])", "description": "sum-of-squares", "long_description": "sum of the squares of X."}, "@sumsqsby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww148006", "usage": "@sumsqsby( arg1 , arg2[, s] )", "description": "Sum of squares of arg1 observations for each arg2 group."}, "@tan": {"uri": "mathapp-Trigonometric_Functions", "anchor": "ww132936", "usage": "@tan(x)", "description": "tangent (argument in radians)", "long_description": "[img:../content/images/mathapp.093.13.6.jpg]"}, "@tdist": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww133901", "description": "@tdist(x,v)", "usage": "t -distribution", "long_description": "Probability that a t -statistic with [img:../content/images/mathapp.093.14.95.jpg] degrees of freedom exceeds [img:../content/images/mathapp.093.14.96.jpg] in absolute value (two-sided p -value): @tdist(x,v)=2*(1\u2013@ctdist(@abs(x),v))"}, "@theil": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww144955", "usage": "@theil(x,y[,s])", "description": "Theil inequality coefficient", "long_description": "the root mean square error divided by the sum of the square roots of the means of X squared and Y squared."}, "@trendcoef": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww156119", "usage": "@trendcoef(x[, s])", "description": "trend coefficient", "long_description": "the slope of an OLS regression versus an implicit time trend, as would be used by @detrend . This function is panel aware."}, "@trigamma": {"uri": "mathapp-Special_Functions", "anchor": "ww132862", "usage": "@trigamma(x)", "description": "second derivative of the log gamma function: [img:../content/images/mathapp.093.12.42.jpg]"}, "@trmean": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww156087", "usage": "@trmean(x, p[, s])", "description": "trimmed mean", "long_description": "Returns the p -percent trimmed mean, i.e. the mean of after the p -percent largest and smallest values have been removed."}, "@var": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww144945", "usage": "@var(x[,s])", "description": "variance", "long_description": "variance of the values in X (division by [img:../content/images/mathapp.093.07.6.jpg] )."}, "@varp": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww144938", "usage": "@varp(x[,s])", "description": "population variance", "long_description": "variance of the values in X. Note this is the same calculation as @var ."}, "@varpsby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww147974", "usage": "@varpsby( arg1 , arg2[, s] )", "description": "Variance of arg1 observations for each arg2 group (division by [img:../content/images/mathapp.093.11.3.jpg] )."}, "@vars": {"uri": "mathapp-Descriptive_Statistics", "anchor": "ww144928", "usage": "@vars(x[,s])", "description": "sample variance", "long_description": "sample variance of the values in X (division by [img:../content/images/mathapp.093.07.7.jpg] )."}, "@varsby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww147958", "usage": "@varsby( arg1 , arg2[, s] )", "description": "Variance of arg1 observations for each arg2 group (division by [img:../content/images/mathapp.093.11.1.jpg] )."}, "@varssby": {"uri": "mathapp-By-Group_Statistics", "anchor": "ww147966", "usage": "@varssby( arg1 , arg2[, s] )", "description": "Sample variance of arg1 observations for each arg2 group (division by [img:../content/images/mathapp.093.11.2.jpg] )."}, "@ytd": {"uri": "mathapp-Time_Series_Functions", "anchor": "ww155996", "usage": "@ytd(s[, smpl])", "description": "YTD of series s .", "long_description": "Provides the cumulative sum of a series within the year. Optionally, a sample may be provided to limit the observations included in the summation."}, "d": {"uri": "mathapp-Time_Series_Functions", "anchor": "ww131352", "usage": "d(x)", "description": "first difference", "long_description": "[img:../content/images/mathapp.093.05.01.jpg] where [img:../content/images/mathapp.093.05.02.jpg] is the lag operator."}, "dlog": {"uri": "mathapp-Time_Series_Functions", "anchor": "ww131387", "usage": "dlog(x)", "description": "first difference of the logarithm", "long_description": "[img:../content/images/mathapp.093.05.06.jpg] ."}, "nrnd": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww138635", "description": "Normal (Gaussian)", "usage": "@cnorm(x[,n]) , @dnorm(x) , @qnorm(p) , @rnorm,\u00a0nrnd, @logcnorm", "long_description": "[img:../content/images/mathapp.093.14.42.jpg] for [img:../content/images/mathapp.093.14.43.jpg] . @logcnorm is a more numerically stable function for the computation of @log(@cnorm(x))"}, "rnd": {"uri": "mathapp-Statistical_Distribution_Functions", "anchor": "ww138645", "description": "Uniform", "usage": "@cunif(x,a,b) , @dunif(x,a,b) , @qunif(p,a,b) , @runif(a,b) , rnd", "long_description": "[img:../content/images/mathapp.093.14.55.jpg] for [img:../content/images/mathapp.093.14.56.jpg] and [img:../content/images/mathapp.093.14.57.jpg] ."}}, "Programming": {"[Programming]": {"uri": "progref-Programming_Language_Reference", "anchor": "", "description": "Program Statements"}, "call": {"uri": "progref-call", "anchor": "", "description": "Call a subroutine within a program.", "long_description": "The call statement is used to call a subroutine within a program."}, "else": {"uri": "progref-else", "anchor": "", "usage": "if [condition] then\n[commands to be executed if condition is true]\nelse\n[commands to be executed if condition is false]\nendif", "description": "ELSE clause of IF statement in a program.", "long_description": "Starts a sequence of commands to be executed when the IF condition is false. The else keyword must be terminated with an endif ."}, "endif": {"uri": "progref-endif", "anchor": "", "usage": "if [condition] then\n[commands if condition true]\nendif", "description": "End of IF statement. Marks the end of an IF, or an IF-ELSE statement."}, "endsub": {"uri": "progref-endsub", "anchor": "", "usage": "subroutine name (arguments)\ncommands\nendsub", "description": "Mark the end of a subroutine."}, "exitloop": {"uri": "progref-exitloop", "anchor": "", "usage": "Command: exitloop", "description": "Exit from current loop in programs.", "long_description": "exitloop causes the program to break out of the current FOR or WHILE loop."}, "for": {"uri": "progref-for", "anchor": "", "usage": "for counter= start to end [ step stepsize]\n[commands]\nnext", "description": "FOR loop in a program.", "long_description": "The for statement is the beginning of a FOR...NEXT loop in a program."}, "if": {"uri": "progref-if", "anchor": "", "usage": "if [condition] then\n[commands if condition true]\nendif", "description": "IF statement in a program.", "long_description": "The if statement marks the beginning of a condition and commands to be executed if the statement is true. The statement must be terminated with the beginning of an ELSE clause, or an endif ."}, "include": {"uri": "progref-include", "anchor": "", "usage": "include filename", "description": "Include another file in a program.", "long_description": "The include statement is used to include the contents of another file in a program file.\nIf an include file is specified without an absolute path, the base location will be taken from the location of the program file, not from the default directory."}, "next": {"uri": "progref-next", "anchor": "", "usage": "for [conditions of the FOR loop]\n[commands]\nnext", "description": "End of FOR loop. next marks the end of a FOR loop in a program."}, "return": {"uri": "progref-return", "anchor": "", "usage": "if [condition] then\nreturn\nendif", "description": "Exit subroutine.", "long_description": "The return statement forces an exit from a subroutine within a program. A common use of return is to exit from the subroutine if an unanticipated error has occurred."}, "sleep": {"uri": "progref-sleep", "anchor": "", "usage": "sleep n", "description": "Pause program execution.", "long_description": "pauses a program by n milliseconds (default is 5000)."}, "step": {"uri": "progref-step", "anchor": "", "usage": "for !i= a to b step n\n[commands]\nnext", "description": "Step size of a FOR loop.", "long_description": "step may be used in a FOR loop to specify the size of the step in the looping variable. If no step is provided, for assumes a step of \u201c+1\u201d.\nIf a given step exceeds the end value b in the FOR loop specification, the contents of the loop will not be executed."}, "stop": {"uri": "progref-stop", "anchor": "", "usage": "Command: stop", "description": "Break out of program.", "long_description": "The stop command halts execution of a program. It has the same effect as hitting the F1 (break) key."}, "subroutine": {"uri": "progref-subroutine", "anchor": "", "usage": "subroutine name( arguments )\n[commands]\nendsub", "description": "Declare a subroutine within a program.", "long_description": "The subroutine statement marks the start of a subroutine."}, "then": {"uri": "progref-then", "anchor": "", "usage": "if [condition] then\n[commands if condition true]\nendif", "description": "Part of IF statement.", "long_description": "then marks the beginning of commands to be executed if the condition given in the IF statement is satisfied."}, "to": {"uri": "progref-to", "anchor": "", "usage": "for !i= n to m\n[commands]\nnext\nseries_name(n to m)", "description": "Upper limit of for loop OR lag range specifier.", "long_description": "to is required in the specification of a FOR loop to specify the upper limit of the control variable; see \u201cThe FOR Loop\u201d .\nWhen used as a lag specifier, to may be used to specify a range of lags to be used in estimation.\nUsed in a FOR loop:\nUsed as a Lag specifier:"}, "wend": {"uri": "progref-wend", "anchor": "", "usage": "while [condition]\n[commands while condition true ]\nwend", "description": "End of WHILE clause.", "long_description": "wend marks the end of a set of program commands that are executed under the control of a WHILE statement."}, "while": {"uri": "progref-while", "anchor": "", "usage": "while [condition]\n[commands while condition true]\nwend", "description": "Conditional control statement. The while statement marks the beginning of a WHILE loop.", "long_description": "The commands between the while keyword and the wend keyword will be executed repeatedly until the condition in the while statement is false."}, "addin": {"uri": "progref-addin", "anchor": "", "usage": "addin (options) [path\\]prog_name", "description": "Register a program file as an EViews Add-in.", "long_description": "registers the specified program file as an EViews Add-in. Note that the program file should have a \u201c.PRG\u201d extension, which you need not specify in the prog_name .\nIf you do not provide the optional path specification, EViews looks for the program file in the default EViews Add-ins directory.\nExplicit path specifications containing \u201c.\\\u201d and \u201c..\\\u201d (to indicate the current level and one directory level up) are evaluated relative the directory of the installer program in which the addin command is specified, or the EViews default directory if addin is run from the command line.\nYou may use the special \u201c<addins>\u201d directory keyword in your path specification."}, "clearerrs": {"uri": "progref-clearerrs", "anchor": "", "description": "Set the current error count to 0.", "long_description": "May only be used in programs.\nSee also @errorcount , seterrcount , seterr , and setmaxerrs ."}, "commandcap": {"uri": "commandcmd-commandcap", "anchor": "", "usage": "commandcap arg", "description": "Add comment to command capture window.", "long_description": "sends arg to the command capture window. Of particular use to add-in writers for sending notifications to users."}, "exec": {"uri": "progref-exec", "anchor": "", "description": "Execute a program. The exec command executes a program. The program may be located in memory or stored in a program file on disk.", "long_description": "See exec ."}, "logclear": {"uri": "commandcmd-logclear", "anchor": "", "usage": "logclear (options)", "description": "Clears the log window corresponding to the program.", "long_description": "Use this command any time from within a program to clear the program log."}, "logl": {"uri": "loglcmd-logl_2", "anchor": "", "usage": "logl logl_name", "description": "Declare likelihood object."}, "logmode": {"uri": "commandcmd-logmode", "anchor": "", "usage": "logmode (options) msgtype_list", "description": "Set the log settings of specified message types.", "long_description": "Activates or deactivates the logging of specified message types if message types are set to be program controlled .\nControls the output of the messages to a log window with a specified name and/or to a file on disk.\nwhere msgtype_list is a list of the message types to update."}, "logmsg": {"uri": "commandcmd-logmsg", "anchor": "", "usage": "logmsg (options) text", "description": "Adds a line of text to the program log."}, "logsave": {"uri": "commandcmd-logsave", "anchor": "", "usage": "logsave (options) destination", "description": "Saves the program log to a text file.", "long_description": "where destination is the location and filename for saving the log file (for types text and rtf) or the text object name (for type textobj)"}, "open": {"uri": "progref-open", "anchor": "", "description": "Open a file. Opens a workfile, database, program file, or ASCII text file.", "long_description": "See open ."}, "output": {"uri": "commandcmd-output", "anchor": "", "usage": "output base_name\noutput (f) base_name\noutput (options) [path\\]file_name\noutput (s) spool_name\noutput off", "description": "Redirect printer output.", "long_description": "You may specify that any procedure that would normally send output to the printer puts output in a text, Rich Text Format (RTF), or comma-separated value (CSV) file, in a spool object, or into frozen table or graph objects in the current workfile.\nBy default, the output command redirects the output into frozen objects. You should supply a base name after the output keyword. Each subsequent print command will create a new table or graph object in the current workfile, using the base name and an identifying number. For example, if you supply the base name of \u201c OUT \u201d, the first print command will generate a table or graph named OUT01 , the second print command will generate OUT02 , and so on.\nYou can also use the optional settings, described below, to redirect table and text output to a text, RTF, or CSV file, or all output (including graphs) to an RTF file. If you elect to redirect output to a file, you must specify a filename.\nYou can use the \u201cs\u201d option, described below, to redirect all output to a spool object.\nWhen followed by the optional keyword off , the output command turns off output redirection. Subsequent print commands will be directed to the printer."}, "poff": {"uri": "progref-poff", "anchor": "", "usage": "Command: poff", "description": "Turn off automatic printing in programs.", "long_description": "poff turns off automatic printing of all output. In programs, poff is used in conjunction with pon to control automatic printing; these commands have no effect in interactive use."}, "pon": {"uri": "progref-pon", "anchor": "", "usage": "Command: pon", "description": "Turn on automatic printing in programs.", "long_description": "pon instructs EViews to send all statistical and data display output to the printer (or the redirected printer destination; see output ). It is equivalent to including the \u201c p \u201d option in all commands that generate output. pon and poff only work in programs; they have no effect in interactive use."}, "program": {"uri": "commandcmd-program", "anchor": "", "usage": "program [path\\]prog_name", "description": "Declare a program.", "long_description": "Enter a name for the program after the program keyword. If you do not provide a name, EViews will open an untitled program window. Programs are text files, not objects."}, "run": {"uri": "progref-run", "anchor": "", "description": "Run a program. The run command executes a program. The program may be located in memory or stored in a program file on disk.", "long_description": "See run . See also exec ."}, "saveprgini": {"uri": "progref-saveprgini", "anchor": "", "usage": "saveprogini ([file=filename]) [section]name value", "description": "Saves program variables to an \u201c.ini\u201d file.", "long_description": "Saves the value (either string or scalar) into the name under the section [section] in the \u201c.ini\u201d file specified by filename . If no section is provided, a [default] section is used. If no filename is given, EViews will create an \u201c.ini\u201d file with the same name as the current running program in the same directory. If the program is untitled, the current default directory is used. This command must be run from inside a program."}, "seterr": {"uri": "progref-seterr", "anchor": "", "usage": "seterr string", "description": "Set a user-specified execution error.", "long_description": "sets an execution error using the specified string. May only be used in programs."}, "seterrcount": {"uri": "progref-seterrcount", "anchor": "", "usage": "seterrcount integer", "description": "Set the current program execution error count.", "long_description": "sets the current error count to the specified integer value. May only be used in programs."}, "setmaxerrs": {"uri": "progref-setmaxerrs", "anchor": "", "usage": "setmaxerrs integer", "description": "Set the maximum number of errors that a program may encounter before execution is halted.", "long_description": "sets the maximum number of errors to the specified integer value."}, "statusline": {"uri": "progref-statusline", "anchor": "", "usage": "statusline string", "description": "Send a text message to the EViews status line."}}, "General Information": {"[General Information]": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww140814"}, "@env": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147009", "usage": "@env( str )", "description": "environment variables", "long_description": "returns a string containing the value of the Windows environment variable str . For example @env(\u201cusername\u201d) returns the user-name of the current logged in user. @env(\u201ccomputername\u201d) returns the name of the computer."}, "@fileexist": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww141098", "usage": "@fileexist( str )", "description": "file exist", "long_description": "returns a 0 or 1 depending on whether the filename specified by str exists on disk."}, "@folderexist": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147016", "usage": "@folderexist( str )", "description": "folder exist", "long_description": "returns a binary scalar, equal to 1 if the folder specified by str exists on disk, and 0 otherwise."}, "@tablenames": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww141104", "usage": "@tablenames( str )", "description": "table/sheet names", "long_description": "returns a space delimited string containing the names of the table names of a foreign file. str should be the name (and path) of the foreign file, enclosed in quotes. For an Excel file, the names of the Excel sheets will be returned."}, "@getnextname": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww141110", "usage": "@getnextname( str )", "description": "get next name", "long_description": "returns a string containing the next available variable name in the workfile, starting with str . e.g. entering \u201cresult\u201d will return \u201cresult01\u201d unless there is already a RESULT01, in which case it will return \u201cresult02\u201d."}, "@vernum": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww145961", "usage": "@vernum", "description": "version number", "long_description": "returns a scalar containing the EViews version number."}, "@verstr": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww141126", "usage": "@verstr", "description": "version string", "long_description": "returns a string containing the EViews version string ( e.g. \u201cEViews Enterprise Edition\u201d)."}, "@wdir": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww145971", "usage": "@wdir( str )", "description": "directory listing", "long_description": "returns a string list containing a list of all of the files in the directory str ."}, "@wquery": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147022", "usage": "@wquery(\u201c database\u201d , \u201c search_expression\u201d , \u201c attribute_list \u201d)", "description": "database query", "long_description": "returns a string list containing the attribute_list of all objects in database that match the query given by search_expression (see @wquery for details)."}}, "Element Information": {"[Element Information]": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww140815"}, "@elem": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww141132", "usage": "@elem(x,\"v\")", "description": "element", "long_description": "returns the value of a series at an observation or date. The observation or date should be entered in double quotes."}, "@first": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww141138", "usage": "@first(x)", "description": "first element", "long_description": "returns the value of the first non-missing value in the series for the current sample."}, "@ifirst": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww141144", "usage": "@ifirst(x)", "description": "index of first element", "long_description": "returns the workfile index of the first non-missing value in the series for the current sample."}, "@ilast": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww141150", "usage": "@ilast(x)", "description": "last element", "long_description": "returns the workfile index of the last non-missing value in the series for the current sample."}, "@last": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww141156", "usage": "@last(x)", "description": "index of last element", "long_description": "returns the value of the last non-missing value in the series for the current sample."}}, "Basic Workfile Functions": {"[Basic Workfile Functions]": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww141013"}, "@dbname": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww158704", "usage": "@dbname", "description": "database name", "long_description": "returns a string containing the current default database."}, "@ispanel": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww149885", "usage": "@ispanel", "description": "panel workfile", "long_description": "returns a 0 or 1 depending on whether the workfile is panel structured."}, "@obsrange": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww149891", "usage": "@obsrange", "description": "observations in range", "long_description": "returns the number of observations in the workfile range."}, "@obssmpl": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww149897", "usage": "@obssmpl", "description": "observations in sample", "long_description": "returns the number of observations in the workfile sample."}, "@pagecount": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww149903", "usage": "@pagecount", "description": "page count", "long_description": "returns a scalar containing the number of pages in the current workfile."}, "@pageexist": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww149909", "usage": "@pageexist( str )", "description": "page exists", "long_description": "returns a 0 or 1 depending on whether the page specified by str exists in the current workfile."}, "@pagefreq": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww149915", "usage": "@pagefreq", "description": "page frequency", "long_description": "returns a string containing the frequency of the active page."}, "@pageids": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww149921", "usage": "@pageids", "description": "workfile page identifiers", "long_description": "returns a string containing a space delimited list of the id series for the current workfile page."}, "@pagelist": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww149927", "usage": "@pagelist", "description": "page names list", "long_description": "returns a space delimited string containing the names of all the pages in the current active workfile."}, "@pagename": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww149933", "usage": "@pagename", "description": "page name", "long_description": "returns a string containing the name of the active page."}, "@pagesmpl": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww149939", "usage": "@pagesmpl", "description": "workfile page sample", "long_description": "returns a string containing the current sample for the active page."}, "@wfname": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww149945", "usage": "@wfname", "description": "workfile name", "long_description": "returns a string containing the current default workfile name."}, "@wfpath": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww149951", "usage": "@wfpath", "description": "workfile path", "long_description": "returns a string containing the current default workfile path."}}, "Dated Workfile Information": {"[Dated Workfile Information]": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww149958"}, "@after": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147446", "usage": "@after( arg1 )", "description": "date is after", "long_description": "creates a dummy variable equal to 1 if the observation is after or on the date given by arg1 . arg1 should be enclosed in quotes."}, "@before": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147393", "usage": "@before( arg1 )", "description": "date is before", "long_description": "creates a dummy variable equal to 1 if the observation is before the date given by arg1 . arg1 should be enclosed in quotes."}, "@date": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147295", "usage": "@date", "description": "date", "long_description": "returns the date value."}, "@day": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147301", "usage": "@day", "description": "day of month", "long_description": "returns the day of the month."}, "@during": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147509", "usage": "@during( arg1)", "description": "date is during", "long_description": "creates a dummy variable equal to 1 if the observation lies between the dates given by the date pair contained in arg1 , and 0 otherwise. arg1 should be given in quotes."}, "@enddate": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147307", "usage": "@enddate", "description": "observations in range", "long_description": "returns the end date of the period of time associated with the observation in the workfile."}, "@event": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147574", "usage": "@event( d1[,d2 basis ])", "description": "event proportion", "long_description": "proportion of a one-off event that lies in each observation.( See \u201cEvent Function (@event)\u201d for syntax and discussion )."}, "@holiday": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147618", "usage": "@holiday ( h[, b][, flag...]", "description": "holiday proportion", "long_description": "proportion of an annual event that lies in each observation. ( See \u201cHoliday Functions\u201d for syntax and discussion )."}, "@holidayset": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww161658", "usage": "@holidayset ( h[, b][, flag...]", "description": "holidayset proportion", "long_description": "proportion of an annual events that lies in each observation. ( See \u201cHoliday Functions\u201d for syntax and discussion )."}, "@hour": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147313", "usage": "@hour", "description": "hour", "long_description": "returns the hour of each observation as an integer."}, "@hourf": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147319", "usage": "@hourf", "description": "hour floating point", "long_description": "returns the hour of each observation as a floating point number ( e.g. , 9:30 a.m. returns 9.5, and 5:15 p.m. returns 17.25)."}, "@isperiod": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147325", "usage": "@isperiod(x)", "description": "period dummy", "long_description": "returns a dummy variable for whether the observation is in the specified period."}, "@minute": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147331", "usage": "@minute", "description": "minutes", "long_description": "returns the minute of each observation as an integer."}, "@month": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147337", "usage": "@month", "description": "month", "long_description": "returns the month of an observation."}, "@quarter": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147343", "usage": "@quarter", "description": "quarter", "long_description": "returns the quarter of an observation."}, "@seas": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147349", "usage": "@seas(x)", "description": "seasonal dummy", "long_description": "returns a seasonal dummy variable."}, "@second": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147355", "usage": "@second", "description": "seconds", "long_description": "returns the second of each observation as an integer."}, "@strdate": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147361", "usage": "@strdate(x)", "description": "string dates", "long_description": "returns a string representing the date for every observation."}, "@trend": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147367", "usage": "@trend( [ x ] )", "description": "time trend", "long_description": "returns a time trend using the workfile calendar."}, "@trendc": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147373", "usage": "@trendc( [ x ] )", "description": "calendar time trend", "long_description": "returns a time trend where the trend uses calendar time."}, "@weekday": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147379", "usage": "@weekday", "description": "day of the week", "long_description": "returns the day of the week."}, "@year": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147385", "usage": "@year", "description": "year", "long_description": "returns the year"}}, "Panel Workfile Functions": {"[Panel Workfile Functions]": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww133501"}, "@cellid": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147770", "usage": "@cellid", "description": "element", "long_description": "returns the inner dimension identifier index."}, "@crossid": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147776", "usage": "@crossid", "description": "observations in range", "long_description": "returns the cross-section identifier index."}, "@obsid": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147782", "usage": "@obsid", "description": "cross-section observation number", "long_description": "returns the observation number within each panel cross section."}, "@trend": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147788", "usage": "@trend", "description": "time trend", "long_description": "returns a time trend for each cross-section using the observed dates in the panel."}, "@trendc": {"uri": "mathapp-Workfile___Informational_Functions", "anchor": "ww147794", "usage": "@trendc", "description": "calendar time trend", "long_description": "returns a time trend for each cross-section where the trend uses calendar time."}}}